<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1379278</bug_id>
          
          <creation_ts>2016-09-26 05:20:00 -0400</creation_ts>
          <short_desc>sssd-secrets should not run as unconfined_service_t</short_desc>
          <delta_ts>2017-07-04 04:04:47 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>selinux-policy</component>
          <version>25</version>
          <rep_platform>x86_64</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>CURRENTRELEASE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>abrt_hash:3105d14f21e59edb726bf898f9802a354518963c750a7e1cd2349c661e1c3dba;VARIANT_ID=server;</status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1448056</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Lukas Slebodnik">lslebodn</reporter>
          <assigned_to name="Lukas Vrabec">lvrabec</assigned_to>
          <cc>brunch875</cc>
    
    
    <cc>dominick.grift</cc>
    
    
    <cc>dwalsh</cc>
    
    
    <cc>jhrozek</cc>
    
    
    <cc>lvrabec</cc>
    
    
    <cc>mgrepl</cc>
    
    
    <cc>oliver.henshaw</cc>
    
    
    <cc>plautrba</cc>
    
    
    <cc>ssorce</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>selinux-policy-3.13.1-225.15.fc25</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-07-04 04:04:47</cf_last_closed>
          <cf_type>---</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9741985</commentid>
    <comment_count>0</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2016-09-26 05:20:27 -0400</bug_when>
    <thetext>Description of problem:
systemctl start sssd-secrets.socket
SELinux is preventing systemd from &apos;create&apos; accesses on the unix_stream_socket Unknown.

*****  Plugin catchall (100. confidence) suggests   **************************

If you believe that systemd should be allowed create access on the Unknown unix_stream_socket by default.
Then you should report this as a bug.
You can generate a local policy module to allow this access.
Do
allow this access for now by executing:
# ausearch -c &apos;systemd&apos; --raw | audit2allow -M my-systemd
# semodule -X 300 -i my-systemd.pp

Additional Information:
Source Context                system_u:system_r:init_t:s0
Target Context                system_u:system_r:unconfined_service_t:s0
Target Objects                Unknown [ unix_stream_socket ]
Source                        systemd
Source Path                   systemd
Port                          &lt;Unknown&gt;
Host                          (removed)
Source RPM Packages           
Target RPM Packages           
Policy RPM                    selinux-policy-3.13.1-215.fc25.noarch
Selinux Enabled               True
Policy Type                   targeted
Enforcing Mode                Permissive
Host Name                     (removed)
Platform                      Linux (removed) 4.8.0-0.rc6.git0.1.fc25.x86_64 #1
                              SMP Mon Sep 12 19:16:54 UTC 2016 x86_64 x86_64
Alert Count                   1
First Seen                    2016-09-26 11:15:52 CEST
Last Seen                     2016-09-26 11:15:52 CEST
Local ID                      5d5352f2-5843-4c00-8907-79b0a0925485

Raw Audit Messages
type=AVC msg=audit(1474881352.999:654): avc:  denied  { create } for  pid=1 comm=&quot;systemd&quot; scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:unconfined_service_t:s0 tclass=unix_stream_socket permissive=1


Hash: systemd,init_t,unconfined_service_t,unix_stream_socket,create

Version-Release number of selected component:
selinux-policy-3.13.1-215.fc25.noarch

Additional info:
reporter:       libreport-2.8.0
hashmarkername: setroubleshoot
kernel:         4.8.0-0.rc6.git0.1.fc25.x86_64
type:           libreport

Potential duplicate: bug 1291940</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9741989</commentid>
    <comment_count>1</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2016-09-26 05:22:09 -0400</bug_when>
    <thetext>AVC in enforcing mode:
type=AVC msg=audit(09/26/2016 11:15:02.161:650) : avc:  denied  { create } for  pid=1 comm=systemd scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:unconfined_service_t:s0 tclass=unix_stream_socket permissive=0


AVCs in permissive mode:
type=AVC msg=audit(09/26/2016 11:15:52.999:654) : avc:  denied  { create } for  pid=1 comm=systemd scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:unconfined_service_t:s0 tclass=unix_stream_socket permissive=1 
----
type=AVC msg=audit(09/26/2016 11:15:52.999:655) : avc:  denied  { setopt } for  pid=1 comm=systemd scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:unconfined_service_t:s0 tclass=unix_stream_socket permissive=1 
----
type=AVC msg=audit(09/26/2016 11:15:52.999:656) : avc:  denied  { bind } for  pid=1 comm=systemd scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:unconfined_service_t:s0 tclass=unix_stream_socket permissive=1 
----
type=AVC msg=audit(09/26/2016 11:15:52.999:657) : avc:  denied  { listen } for  pid=1 comm=systemd path=/run/secrets.socket scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:unconfined_service_t:s0 tclass=unix_stream_socket permissive=1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9742012</commentid>
    <comment_count>2</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2016-09-26 05:28:21 -0400</bug_when>
    <thetext>sssd-1.14+ has a new socket activated service sssd-secrets.service (sssd-secrets.socket)

But this new service is running with unconfined_service_t

sh# systemctl status sssd-secrets.service 
● sssd-secrets.service - SSSD Secrets Service responder
   Loaded: loaded (/usr/lib/systemd/system/sssd-secrets.service; indirect; vendor preset: disabled)
   Active: inactive (dead) since Mon 2016-09-26 11:25:34 CEST; 10s ago
  Process: 7002 ExecStart=/usr/libexec/sssd/sssd_secrets --uid 0 --gid 0 --debug-to-files (code=exited, status=0/SUCCESS)
 Main PID: 7002 (code=exited, status=0/SUCCESS)

Sep 26 11:16:18 host.example.com systemd[1]: Started SSSD Secrets Service responder.
Sep 26 11:16:18 host.example.com sssd[secrets][7002]: Starting up
Sep 26 11:25:34 host.example.com systemd[1]: Stopping SSSD Secrets Service responder...
Sep 26 11:25:34 host.example.com systemd[1]: Stopped SSSD Secrets Service responder.


sh# curl -H &quot;Content-Type: application/json&quot; -XGET --unix-socket /var/run/secrets.socket http://localhost/secrets/foo
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Not Found&lt;/h1&gt;
&lt;p&gt;The requested resource was not found.&lt;/p&gt;
&lt;/body&gt;


sh# systemctl status sssd-secrets.service 
● sssd-secrets.service - SSSD Secrets Service responder
   Loaded: loaded (/usr/lib/systemd/system/sssd-secrets.service; indirect; vendor preset: disabled)
   Active: active (running) since Mon 2016-09-26 11:25:57 CEST; 7s ago
 Main PID: 7197 (sssd_secrets)
    Tasks: 1 (limit: 4915)
   Memory: 1.3M
      CPU: 11ms
   CGroup: /system.slice/sssd-secrets.service
           └─7197 /usr/libexec/sssd/sssd_secrets --uid 0 --gid 0 --debug-to-files

Sep 26 11:25:57 host.example.com systemd[1]: Started SSSD Secrets Service responder.
Sep 26 11:25:57 host.example.com sssd[secrets][7197]: Starting up


sh# ps auxfZ | grep unconfined_service_[t]
system_u:system_r:unconfined_service_t:s0 root 7197 0.0  0.0 247644 7172 ?     Ss   11:25   0:00 /usr/libexec/sssd/sssd_secrets --uid 0 --gid 0 --debug-to-files</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9742026</commentid>
    <comment_count>3</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2016-09-26 05:31:07 -0400</bug_when>
    <thetext>I forgot to mention that the sssd-secrets.service shares configuration with sssd (/etc/sssd/sssd.conf) and few others things.
Adding jhrozek and simo to CC in case of more questions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9742056</commentid>
    <comment_count>4</comment_count>
    <who name="Jakub Hrozek">jhrozek</who>
    <bug_when>2016-09-26 05:40:48 -0400</bug_when>
    <thetext>(In reply to Lukas Slebodnik from comment #3)
&gt; I forgot to mention that the sssd-secrets.service shares configuration with
&gt; sssd (/etc/sssd/sssd.conf) and few others things.

Yes, but the service doesn&apos;t create the configuration, just reads it.

btw should we also clone this bug to RHEL because the same problem also exists there?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9742082</commentid>
    <comment_count>5</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2016-09-26 05:51:38 -0400</bug_when>
    <thetext>(In reply to Jakub Hrozek from comment #4)
&gt; (In reply to Lukas Slebodnik from comment #3)
&gt; &gt; I forgot to mention that the sssd-secrets.service shares configuration with
&gt; &gt; sssd (/etc/sssd/sssd.conf) and few others things.
&gt; 
&gt; Yes, but the service doesn&apos;t create the configuration, just reads it.
&gt;
Actually it does not read /etc/sssd/sssd.conf but /var/lib/sss/db/config.ldb
and need to have read/write access to the directory /var/lib/sss/secrets/

But both has the same SElinux file context
sh# matchpathcon /var/lib/sss/db/config.ldb /var/lib/sss/secrets/
/var/lib/sss/db/config.ldb      system_u:object_r:sssd_var_lib_t:s0
/var/lib/sss/secrets    system_u:object_r:sssd_var_lib_t:s0

I think we needn&apos;t to separate sssd.service and sssd-secrets.service.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9743849</commentid>
    <comment_count>6</comment_count>
    <who name="Simo Sorce">ssorce</who>
    <bug_when>2016-09-26 16:26:26 -0400</bug_when>
    <thetext>It may make sense to allow only sssd-secrets to access the /var/lib/sss/secrets path.

Simo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9746361</commentid>
    <comment_count>7</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2016-09-27 08:52:15 -0400</bug_when>
    <thetext>Simplest thing is to label sssd-secrets as sssd_exec_t.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9747469</commentid>
    <comment_count>8</comment_count>
    <who name="Fedora Admin XMLRPC Client">fedora-admin-xmlrpc</who>
    <bug_when>2016-09-27 11:15:47 -0400</bug_when>
    <thetext>This package has changed ownership in the Fedora Package Database.  Reassigning to the new owner of this component.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9976570</commentid>
    <comment_count>9</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2016-12-12 07:53:09 -0500</bug_when>
    <thetext>(In reply to Daniel Walsh from comment #7)
&gt; Simplest thing is to label sssd-secrets as sssd_exec_t.

It is not enough in my testing. We need to also change the label for unix socket used for socket activation.

Following change works for me
sh# chcon system_u:object_r:sssd_var_lib_t:s0 /var/run/secrets.socket
sh# chcon system_u:object_r:sssd_exec_t:s0 /usr/libexec/sssd/sssd_secrets

I tried unix socket with sssd_var_lib_t because other sssdd unix sockets have such type. 

sh# matchpathcon /var/lib/sss/pipes/*
/var/lib/sss/pipes/nss  system_u:object_r:sssd_var_lib_t:s0
/var/lib/sss/pipes/pam  system_u:object_r:sssd_var_lib_t:s0
/var/lib/sss/pipes/private      system_u:object_r:sssd_var_lib_t:s0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9986796</commentid>
    <comment_count>10</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2016-12-14 11:42:52 -0500</bug_when>
    <thetext>Looks like secrets.socket does not have a default label.  We need to get that labeled as well and have a file name transition rule so that init will create it with the correct label.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9986812</commentid>
    <comment_count>11</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2016-12-14 11:46:01 -0500</bug_when>
    <thetext>secrets.socket should be labeled sssd_var_run_t.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10347215</commentid>
    <comment_count>12</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2017-04-19 16:14:36 -0400</bug_when>
    <thetext>Lukas can you add this default labeling.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10347334</commentid>
    <comment_count>13</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2017-04-19 16:53:35 -0400</bug_when>
    <thetext>It is fixed in fedora26. It just need to be backported

sh$ rpm -q selinux-policy-targeted 
selinux-policy-targeted-3.13.1-250.fc26.noarch

sh$ matchpathcon /var/run/secrets.socket
/var/run/secrets.socket system_u:object_r:sssd_var_run_t:s0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10349318</commentid>
    <comment_count>14</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2017-04-20 07:49:09 -0400</bug_when>
    <thetext>It should be following commits from selinux-policy-contrib (rawhide branch)

* f56e010f134650ba0bd6344cb93c9a76eaeda033
* ded6d59f1a3a99cb080c186df74bd67601c9d835
* feb2c86bd3a0f9164725f9dd3de2332406bb1ad4</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10480956</commentid>
    <comment_count>15</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2017-06-06 08:13:39 -0400</bug_when>
    <thetext>*** Bug 1459076 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>