<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1393379</bug_id>
          
          <creation_ts>2016-11-09 07:36:00 -0500</creation_ts>
          <short_desc>partitions can&apos;t be created nor removed in gnome-disks, cockpit</short_desc>
          <delta_ts>2016-11-15 08:37:08 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>storaged</component>
          <version>25</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>AcceptedBlocker</status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1277289</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Kamil P치ral">kparal</reporter>
          <assigned_to name="Tomas Smetana">tsmetana</assigned_to>
          <cc>amigadave</cc>
    
    
    <cc>anass.1430</cc>
    
    
    <cc>awilliam</cc>
    
    
    <cc>jbwillia</cc>
    
    
    <cc>mcatanzaro</cc>
    
    
    <cc>mvollmer</cc>
    
    
    <cc>nb</cc>
    
    
    <cc>phatina</cc>
    
    
    <cc>puiterwijk</cc>
    
    
    <cc>robatino</cc>
    
    
    <cc>stefw</cc>
    
    
    <cc>tsmetana</cc>
    
    
    <cc>vpodzime</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in></cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-11-15 08:37:08</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9875790</commentid>
    <comment_count>0</comment_count>
    <who name="Kamil P치ral">kparal</who>
    <bug_when>2016-11-09 07:36:02 -0500</bug_when>
    <thetext>Description of problem:
I can&apos;t create or remove standard partitions in gnome-disks. I tried with enforcing=0, doesn&apos;t help. No error is displayed, I see no error in journal, simply nothing happens.

In journal I see only polkit messages, nothing else:

Nov 09 13:31:13 f25 dbus-daemon[715]: [system] Activating via systemd: service name=&apos;net.reactivated.Fprint&apos; unit=&apos;fprintd.service&apos; requested by &apos;:1.87&apos; (uid=0 pid=2158 comm=&quot;/usr/lib/polkit-1/polkit-agent-helper-1 kparal &quot; label=&quot;unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023&quot;)
Nov 09 13:31:13 f25 systemd[1]: Starting Fingerprint Authentication Daemon...
Nov 09 13:31:13 f25 dbus-daemon[715]: [system] Successfully activated service &apos;net.reactivated.Fprint&apos;
Nov 09 13:31:13 f25 audit[1]: SERVICE_START pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg=&apos;unit=fprintd comm=&quot;systemd&quot; exe=&quot;/usr/lib/systemd/systemd&quot; hostname=? addr=? terminal=? res=success&apos;
Nov 09 13:31:13 f25 systemd[1]: Started Fingerprint Authentication Daemon.
Nov 09 13:31:16 f25 audit[2158]: USER_AUTH pid=2158 uid=1000 auid=1000 ses=2 subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 msg=&apos;op=PAM:authentication grantors=pam_unix acct=&quot;kparal&quot; exe=&quot;/usr/lib/polkit-1/polkit-agent-helper-1&quot; hostname=? addr=? terminal=? res=success&apos;
Nov 09 13:31:16 f25 audit[2158]: USER_ACCT pid=2158 uid=1000 auid=1000 ses=2 subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 msg=&apos;op=PAM:accounting grantors=pam_unix,pam_localuser acct=&quot;kparal&quot; exe=&quot;/usr/lib/polkit-1/polkit-agent-helper-1&quot; hostname=? addr=? terminal=? res=success&apos;
Nov 09 13:31:16 f25 polkitd[736]: Operator of unix-session:2 successfully authenticated as unix-user:kparal to gain TEMPORARY authorization for action org.freedesktop.udisks2.modify-device-system for system-bus-name::1.68 [/usr/bin/gnome-disks --gapplication-service] (owned by unix-user:kparal)


Version-Release number of selected component (if applicable):
gnome-disk-utility-3.22.0-1.fc25.x86_64
storaged-2.6.2-2.fc25.x86_64


How reproducible:
always

Steps to Reproduce:
1. add some clean drives to a VM
2. boot either a Live or an installed system
3. try to create a new partition in gnome-disks (beware of bug 1393373 when creating the partition table), nothing happens</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9875793</commentid>
    <comment_count>1</comment_count>
    <who name="Kamil P치ral">kparal</who>
    <bug_when>2016-11-09 07:36:25 -0500</bug_when>
    <thetext>This seems to break basic application functionality:
&quot;All applications that can be launched using the standard graphical mechanism of a release-blocking desktop after a default installation of that desktop must start successfully and withstand a basic functionality test. &quot;
https://fedoraproject.org/wiki/Fedora_25_Final_Release_Criteria#Default_application_functionality</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876062</commentid>
    <comment_count>2</comment_count>
    <who name="Anass Ahmed">anass.1430</who>
    <bug_when>2016-11-09 08:52:50 -0500</bug_when>
    <thetext>Same here, happened this morning. Had to use `fdisk` and `mkfs` from command line.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876231</commentid>
    <comment_count>3</comment_count>
    <who name="Kamil P치ral">kparal</who>
    <bug_when>2016-11-09 09:42:17 -0500</bug_when>
    <thetext>I can reproduce the same problem with cockpit. When creating a partition, the spinner is spinning endlessly, but nothing happens. Nothing interesting in the journal.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876324</commentid>
    <comment_count>4</comment_count>
    <who name="Tomas Smetana">tsmetana</who>
    <bug_when>2016-11-09 10:11:27 -0500</bug_when>
    <thetext>Talking to Vratislav Podzimek who is solving the issue in libblockdev: seems like udev is sending different set of events than before and this breaks storaged/libblockdev.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876483</commentid>
    <comment_count>5</comment_count>
    <who name="Tomas Smetana">tsmetana</who>
    <bug_when>2016-11-09 10:49:42 -0500</bug_when>
    <thetext>The problem goes away with the testing libblockdev packages from http://koji.fedoraproject.org/koji/taskinfo?taskID=16373088</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876829</commentid>
    <comment_count>6</comment_count>
    <who name="Dennis Gilmore">dennis</who>
    <bug_when>2016-11-09 12:06:57 -0500</bug_when>
    <thetext>+1 blocker. I can see people using the live to do re-partitioning</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876830</commentid>
    <comment_count>7</comment_count>
    <who name="Nick Bebout">nb</who>
    <bug_when>2016-11-09 12:07:41 -0500</bug_when>
    <thetext>+1 blocker</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876832</commentid>
    <comment_count>8</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2016-11-09 12:08:08 -0500</bug_when>
    <thetext>I think I&apos;m +1 blocker on this one, unfortunately; it&apos;s a fairly basic function for gnome-disks (the fact that it affects cockpit is also significant, though this functionality isn&apos;t explicitly in the cockpit criteria).

I note that what vpodzime actually changed here is to revert two recent explicitly-backported &apos;fixes&apos; for udev interaction, so I am curious about the background as to why those changes were made in the first place...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876840</commentid>
    <comment_count>9</comment_count>
    <who name="Stephen Gallagher">sgallagh</who>
    <bug_when>2016-11-09 12:09:25 -0500</bug_when>
    <thetext>+1 blocker. It&apos;s also not strictly in the criteria, but having this working in Cockpit for Server deployments is fairly important.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876843</commentid>
    <comment_count>10</comment_count>
    <who name="Stef Walter">stefw</who>
    <bug_when>2016-11-09 12:11:19 -0500</bug_when>
    <thetext>Related failures in the Cockpit integration test suite: https://github.com/cockpit-project/cockpit/pull/5314</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876844</commentid>
    <comment_count>11</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2016-11-09 12:11:35 -0500</bug_when>
    <thetext>That&apos;s +4 blocker, setting accepted. We need an update for this; as I can&apos;t find tsmetana or vpodzime on IRC, guess I&apos;ll do it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876848</commentid>
    <comment_count>12</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-11-09 12:13:26 -0500</bug_when>
    <thetext>libblockdev-1.9-8.fc25 has been submitted as an update to Fedora 25. https://bodhi.fedoraproject.org/updates/FEDORA-2016-76a96e8bf3</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876855</commentid>
    <comment_count>13</comment_count>
    <who name="Ben Williams">jbwillia</who>
    <bug_when>2016-11-09 12:14:31 -0500</bug_when>
    <thetext>+1 blocker and +1 FE</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9876972</commentid>
    <comment_count>14</comment_count>
    <who name="Tomas Smetana">tsmetana</who>
    <bug_when>2016-11-09 13:01:08 -0500</bug_when>
    <thetext>(In reply to Adam Williamson from comment #8)
 
&gt; I note that what vpodzime actually changed here is to revert two recent
&gt; explicitly-backported &apos;fixes&apos; for udev interaction, so I am curious about
&gt; the background as to why those changes were made in the first place...

Those were fixes for less frequent/severe bugs. Dropping the patches gives Vratislav some time to find a better fix for them while not blocking the release.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9878838</commentid>
    <comment_count>15</comment_count>
    <who name="Marius Vollmer">mvollmer</who>
    <bug_when>2016-11-10 03:37:55 -0500</bug_when>
    <thetext>(In reply to Tomas Smetana from comment #4)
&gt; Talking to Vratislav Podzimek who is solving the issue in libblockdev: seems
&gt; like udev is sending different set of events than before and this breaks
&gt; storaged/libblockdev.

Can you point to the change in udevd that causes this change in behavior?

My current understanding is:

 - udevd takes an exclusive lock on $DEV before issuing the BLKRRPART ioctl.

 - udevd takes a shared lock on $DEV before processing rules for it.

This behavior as part of the udev API.

Storaged takes a shared lock on the partition table device while creating a partition and formatting it.  The lock is held all the way from before calling parted until after calling mkfs.  This is to make sure that udevd does not issue the BLKRRPART ioctl while storaged is working with the partition table and partition.

(This is important because BLKRRPART is a kind of party crasher: While it runs, device nodes in /dev will actually disappear briefly.  This must not happen while Storaged is trying to run wipefs or mkfs on them.  It doesn&apos;t matter much if it happens after Storaged is done, but I would still argue that BLKRRPART needs to be avoided completely or fixed in the kernel to not issue bogus remove/add event pairs.)

Libblockdev (used to) take an exclusive lock.  This might prevent udevd from processing some important rules.  Maybe a shared lock is all that is needed.

However, as with storaged, clients of libblockdev probably need to take their own lock anyway if they want to use the block device of the new partition.  (There is no telling when exactly udevd will do the BLKRRPART, so we need to lock until we don&apos;t care anynmore.)

Maybe libblockdev just needs to document this, if it doesn&apos;t need the lock for itself?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9879124</commentid>
    <comment_count>16</comment_count>
    <who name="Kamil P치ral">kparal</who>
    <bug_when>2016-11-10 04:48:59 -0500</bug_when>
    <thetext>(In reply to Fedora Update System from comment #12)
&gt; libblockdev-1.9-8.fc25 has been submitted as an update to Fedora 25.
&gt; https://bodhi.fedoraproject.org/updates/FEDORA-2016-76a96e8bf3

Looks fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9880268</commentid>
    <comment_count>17</comment_count>
    <who name="Vratislav Podzimek">vpodzime</who>
    <bug_when>2016-11-10 10:14:23 -0500</bug_when>
    <thetext>First of all: Marius, thanks for the detailed info and pointers!!!

Turns out the problem was not with the uevents, but with the locking itself. libblockdev hanged on the flock() call because it was trying to get an *exclusive* lock on the device file. And that wasn&apos;t possible due to storaged&apos;s shared lock on it.

Let me describe you why libblockdev was trying to get an *exclusive* lock in the first place. It was a fix for failing tests which started to fail on our jenkins slaves after the lvm2 packages were updated. libblockdev is using libparted and to create a partition (or do any change of the partition table, really) it has to call two libparted functions -- commit_to_disk() and commit_to_os(). What started happening was that the latter failed because the device was busy. udev was to blame, of course :), but I thought it was LVM stepping in between the two function calls and opening the device. Because the failures started appearing after *only* the lvm2 packages were updated. So I introduced an *exclusive* lock to prevent udev from generating uevents in between the above function calls.

Turns out, something in LVM or DM got faster making *udev* react on changes on the device faster and stepping in with its BLKRRPART ioctl(). So a *shared* lock seems to be sufficient to prevent the issues and test failures while it doesn&apos;t cause issues in combination with storaged. The change is implemented in the following PR - https://github.com/rhinstaller/libblockdev/pull/143 - which I have already merged so that we can do a Copr build of libblockdev and start running storaged tests with it.

One interesting fact to conclude this -- libparted is not using the BLKRRPART ioctl() to tell kernel to reread the partition table on the device. It is using some other ioctl() to tell kernel where exactly partitions start and end. That allows libparted to support partition tables not supported by the kernel. However, udev is ruining this all with its BLKRRPART ioctl() run afterwards.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9881145</commentid>
    <comment_count>18</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-11-10 14:26:30 -0500</bug_when>
    <thetext>libblockdev-1.9-8.fc25 has been pushed to the Fedora 25 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-76a96e8bf3</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9882514</commentid>
    <comment_count>19</comment_count>
    <who name="Marius Vollmer">mvollmer</who>
    <bug_when>2016-11-11 03:12:08 -0500</bug_when>
    <thetext>(In reply to Vratislav Podzimek from comment #17)
&gt; First of all: Marius, thanks for the detailed info and pointers!!!

Sure!

&gt; Turns out the problem was not with the uevents, but with the locking itself.
&gt; libblockdev hanged on the flock() call because it was trying to get an
&gt; *exclusive* lock on the device file. And that wasn&apos;t possible due to
&gt; storaged&apos;s shared lock on it.

Ahh, of course!  I didn&apos;t think of that.

&gt; One interesting fact to conclude this -- libparted is not using the
&gt; BLKRRPART ioctl() to tell kernel to reread the partition table on the
&gt; device. It is using some other ioctl() to tell kernel where exactly
&gt; partitions start and end. That allows libparted to support partition tables
&gt; not supported by the kernel.

Yes, and when commit_to_os fails with EBUSY, it does not mean that somebody else has the device open or locked, it means that commit_to_os has tried to tell the kernel about a partition that the kernel already knew about.  (Or more precisely, the newly announced partition overlaps with an already existing partition.)  This happens when udevd gets its BLKRRPART in between commit_to_disk and commit_to_os.

So one thing libparted could do is to handle EBUSY and check whether the kernel state is already as expected and just carry on.

&gt; However, udev is ruining this all with its
&gt; BLKRRPART ioctl() run afterwards.

Yeah, that ioctl should be unnecessary and it is sometimes harmful.  It is useful when someone &quot;dd&quot;s a partition table to a device.  Udevd will then reread the partition table automatically.  I would argue that in this case, we can expect the user to also run &quot;partprobe&quot; explicitly.

But I also think that using a shared flock is a correct approach, so I am happy with leaving the BLKRRPART ioctl in udev.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9892699</commentid>
    <comment_count>20</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-11-15 08:37:08 -0500</bug_when>
    <thetext>libblockdev-1.9-8.fc25 has been pushed to the Fedora 25 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>