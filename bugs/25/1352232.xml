<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1352232</bug_id>
          
          <creation_ts>2016-07-02 16:02:00 -0400</creation_ts>
          <short_desc>Libelf: Can&apos;t add Program Header when e_type is set to OS/Proc specific</short_desc>
          <delta_ts>2016-09-06 18:21:11 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>elfutils</component>
          <version>25</version>
          <rep_platform>All</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Reopened</keywords>
          <priority>unspecified</priority>
          <bug_severity>medium</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>remy.fontayne</reporter>
          <assigned_to name="Mark Wielaard">mjw</assigned_to>
          <cc>aoliva</cc>
    
    
    <cc>fche</cc>
    
    
    <cc>jakub</cc>
    
    
    <cc>mjw</cc>
    
    
    <cc>mjw</cc>
    
    
    <cc>pmachata</cc>
    
    
    <cc>roland</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>elfutils-0.167-1.fc25 elfutils-0.167-1.fc24</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-09-06 18:21:11</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9474176</commentid>
    <comment_count>0</comment_count>
    <who name="">remy.fontayne</who>
    <bug_when>2016-07-02 16:02:21 -0400</bug_when>
    <thetext>Description of problem:
LibELF can&apos;t add a Program Header when e_type is set to OS/Proc specific.

Version-Release number of selected component (if applicable):
elfutil:96e140f6687922606657a76f185a73cf47908ef2 master

How reproducible:

Steps to Reproduce:
1. Create an ELF with the e_type value set to a vendor specific value (ex. 0xffa0) and 1 Program Header
2. Call the elf_update function

Actual results:
The elf_update function will fail with ELF_E_INVALID_PHDR.

Expected results:
The elf_update e_type check should allow PH creation when e_type is set to OS/Proc specific.

Additional info:

The actual check is done in elf32_updatenull.c -&gt; updatenull_wrlock function:
if (ehdr-&gt;e_type != ET_EXEC &amp;&amp; ehdr-&gt;e_type != ET_DYN ...

The check should be:
if (ehdr-&gt;e_type != ET_EXEC &amp;&amp; ehdr-&gt;e_type != ET_DYN &amp;&amp; ehdr-&gt;e_type &lt; ET_LOOS ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9474291</commentid>
    <comment_count>1</comment_count>
    <who name="Mark Wielaard">mjw</who>
    <bug_when>2016-07-02 16:44:09 -0400</bug_when>
    <thetext>The intention of the check seems to have been to deny creating a phdr for an ET_REL file. It also denies an phdr for ET_NONE. Or as in this case any e_type in the OS specific or Processor specific range.

Do we want to tweak the check as suggested to only allow creating a phdr for an ET_EXEC, ET_DYN, ET_CORE or any OS or Processor specific e_type value (and denying for ET_NONE, ET_REL or any unassigned number not in the OS specific or Processor specific range)? Or might we just remove this check completely and let the user shoot themselves into their feet?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9495508</commentid>
    <comment_count>2</comment_count>
    <who name="Mark Wielaard">mjw</who>
    <bug_when>2016-07-11 03:56:15 -0400</bug_when>
    <thetext>Pushed fix to upstream master.

commit 8b5f017ddf1684e225ef59f9243ef411b2556e9c
Author: Mark Wielaard &lt;mjw@redhat.com&gt;
Date:   Wed Jul 6 15:27:56 2016 +0200

    libelf: Allow updating phdrs for any e_type.
    
    elf[32|64]_updatenull would sanity check the e_type before allowing to
    update the phdrs. This prevents creating an ET_REL file with phdrs. It
    also prevents creating any vendor specific ELF file having phdrs. We
    only check this when updating/writing out the file. But we would just
    read such files. Don&apos;t prevent people from creating unexpected ELF files.
    elflint will warn for such files.
    
    While writing a new testcase for this another bug was found that
    prevented updating a just created phdr because elf_getphdrnum would
    sanity check the phdr offset in the file (which doesn&apos;t exist yet).
    Fix that by only doing such a sanity check if the phdrs haven&apos;t been
    read in or created yet.
    
    This second bug should have been found by the existing elfshphehdr
    test, but that test contained a typo checking elf_getphdrnum.
    It tested that the called failed when there were no phdrs, but then
    elf_getphdrnum should simply succeed and return zero.
    
    https://bugzilla.redhat.com/show_bug.cgi?id=1352232
    
    Signed-off-by: Mark Wielaard &lt;mjw@redhat.com&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9549453</commentid>
    <comment_count>3</comment_count>
    <who name="Jan Kurik">jkurik</who>
    <bug_when>2016-07-26 00:39:40 -0400</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 25 development cycle.
Changing version to &apos;25&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9653399</commentid>
    <comment_count>4</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-08-26 11:00:10 -0400</bug_when>
    <thetext>elfutils-0.167-1.fc25 has been submitted as an update to Fedora 25. https://bodhi.fedoraproject.org/updates/FEDORA-2016-de1f4e692b</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9655864</commentid>
    <comment_count>5</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-08-27 08:52:41 -0400</bug_when>
    <thetext>elfutils-0.167-1.fc25 has been pushed to the Fedora 25 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-de1f4e692b</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9677114</commentid>
    <comment_count>6</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-09-03 13:38:45 -0400</bug_when>
    <thetext>elfutils-0.167-1.fc25 has been pushed to the Fedora 25 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9677947</commentid>
    <comment_count>7</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-09-04 17:44:57 -0400</bug_when>
    <thetext>elfutils-0.167-1.fc24 has been submitted as an update to Fedora 24. https://bodhi.fedoraproject.org/updates/FEDORA-2016-1bc61e8f20</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9680858</commentid>
    <comment_count>8</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-09-05 23:21:56 -0400</bug_when>
    <thetext>elfutils-0.167-1.fc24 has been pushed to the Fedora 24 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-1bc61e8f20</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9684330</commentid>
    <comment_count>9</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-09-06 18:20:46 -0400</bug_when>
    <thetext>elfutils-0.167-1.fc24 has been pushed to the Fedora 24 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>