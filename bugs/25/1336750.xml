<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1336750</bug_id>
          
          <creation_ts>2016-05-17 07:51:00 -0400</creation_ts>
          <short_desc>it&apos;s not easy to run mock in an unprivileged docker container</short_desc>
          <delta_ts>2017-06-13 08:49:46 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>mock</component>
          <version>25</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tomas Tomecek">ttomecek</reporter>
          <assigned_to name="Miroslav Suchý">msuchy</assigned_to>
          <cc>carl</cc>
    
    
    <cc>dwalsh</cc>
    
    
    <cc>fche</cc>
    
    
    <cc>imcleod</cc>
    
    
    <cc>jdisnard</cc>
    
    
    <cc>mebrown</cc>
    
    
    <cc>msimacek</cc>
    
    
    <cc>msuchy</cc>
    
    
    <cc>nalin</cc>
    
    
    <cc>philwyett.hemisphere</cc>
    
    
    <cc>praiskup</cc>
    
    
    <cc>sagarun</cc>
    
    
    <cc>vbatts</cc>
    
    
    <cc>walters</cc>
    
    
    <cc>williams</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>mock-1.3.2-1.fc25</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-10-22 00:01:14</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9333001</commentid>
    <comment_count>0</comment_count>
    <who name="Tomas Tomecek">ttomecek</who>
    <bug_when>2016-05-17 07:51:19 -0400</bug_when>
    <thetext>This bug covers two issues:


1) RuntimeError: mock will not run from the root account (needs an unprivileged uid so it can drop privs)

Usually when you start a docker container, you have root access inside (with user namespaces or not). It would be convenient if mock was able to run under root account.

Current solution is to create a new user and run mock with this user, dockerfile snippet:

RUN useradd -o -u 1000 -G mock user
USER user


2) ERROR: Namespace unshare failed.

docker is already handling namespaces, I don&apos;t want mock to do the same.

Current workaround is to give the container needed capabilities so it&apos;s able to call unshare correctly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9333676</commentid>
    <comment_count>1</comment_count>
    <who name="Miroslav Suchý">msuchy</who>
    <bug_when>2016-05-17 10:35:12 -0400</bug_when>
    <thetext>The first issue is basically duplicate of bug 1246810.

So lets focus only on item 2 in this report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9550096</commentid>
    <comment_count>2</comment_count>
    <who name="Jan Kurik">jkurik</who>
    <bug_when>2016-07-26 01:12:26 -0400</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 25 development cycle.
Changing version to &apos;25&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9780643</commentid>
    <comment_count>3</comment_count>
    <who name="Miroslav Suchý">msuchy</who>
    <bug_when>2016-10-11 04:41:51 -0400</bug_when>
    <thetext>Fixed in commit:
* b34a4e7 (HEAD -&gt; devel) skip unshare() if running inside of Docker [RHBZ#1336750]

However because we need to mount procfs in chroot, you have to pass --cap-add=SYS_ADMIN to docker.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9803647</commentid>
    <comment_count>4</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-10-19 04:29:50 -0400</bug_when>
    <thetext>mock-1.3.2-1.fc25 has been pushed to the Fedora 25 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-07f2f5e2c9</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9804137</commentid>
    <comment_count>5</comment_count>
    <who name="Tomas Tomecek">ttomecek</who>
    <bug_when>2016-10-19 06:43:40 -0400</bug_when>
    <thetext>Can confirm the patch fixes the original issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9812771</commentid>
    <comment_count>6</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-10-22 00:01:14 -0400</bug_when>
    <thetext>mock-1.3.2-1.fc25 has been pushed to the Fedora 25 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9839459</commentid>
    <comment_count>7</comment_count>
    <who name="Phil Wyett">philwyett.hemisphere</who>
    <bug_when>2016-11-02 01:13:43 -0400</bug_when>
    <thetext>Is this fix scheduled to be a patch for RHEL 7?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10487385</commentid>
    <comment_count>8</comment_count>
    <who name="Frank Ch. Eigler">fche</who>
    <bug_when>2017-06-07 18:14:36 -0400</bug_when>
    <thetext>(In reply to Miroslav Suchý from comment #3)

&gt; However because we need to mount procfs in chroot, you have to pass
&gt; --cap-add=SYS_ADMIN to docker.


If it needs SYS_ADMIN capabilities, can we really construe it to be an unprivileged docker container?  Is there any followup work envisioned to make that purely-unprivileged case work (such as in an openshift environment)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10489407</commentid>
    <comment_count>9</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2017-06-08 08:57:36 -0400</bug_when>
    <thetext>@frank: User namespaces address that - they allow recursive containerization.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10489433</commentid>
    <comment_count>10</comment_count>
    <who name="Frank Ch. Eigler">fche</who>
    <bug_when>2017-06-08 09:04:12 -0400</bug_when>
    <thetext>(In reply to Colin Walters from comment #9)
&gt; @frank: User namespaces address that - they allow recursive containerization.

Does that trump the sysadmin capabilities?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10489635</commentid>
    <comment_count>11</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2017-06-08 09:58:27 -0400</bug_when>
    <thetext>You would get  a usernamespaces SYS_ADMIN rather then true SYS_ADMIN.  It may or may not work, depending on why the container needs SYS_ADMIN.

Certain Mount operations are still blocked inside of a User Namespaced container.

Can mock be rewritten to not need to use the chroot?  Since it is already in a container?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10499219</commentid>
    <comment_count>12</comment_count>
    <who name="Miroslav Suchý">msuchy</who>
    <bug_when>2017-06-12 17:45:05 -0400</bug_when>
    <thetext>The plan is to use container (for now systemd-nspawn) instead of chroot. So having mock inside of Docker is like having container which has been started by Mock, which is inside of container. Which is afaik only possible if the first docker is privileged.

And mock without chroot? That is basicaly rpmbuild. If we do not use chroot or container we will loose main feature of Mock: that you have only installed those packages which you specified in BuildRequires and nothing else.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10501137</commentid>
    <comment_count>13</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2017-06-13 08:49:27 -0400</bug_when>
    <thetext>I don&apos;t think you need to do this inside of docker, actually I would recommend against it.  I would think integration with runc would be a much better solution, since you don&apos;t need anything special installed on the host, no daemons required.

I am just attempting to think about this differently then traditional Mock.  Two features we need in mock is to install an environment from scratch and then run commands inside of the container.

Might even want to look at Buildah to see if this could fit the build.


ctr=$(buildah from scratch)
mp=$(buildah mount $ctr)
dnf --installroot $mp DEPENDENCIESFORPACKAGE
cp SRPM $mp/tmp
buildah run $ctr rpmbuild -ba</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>