<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1416318</bug_id>
          
          <creation_ts>2017-01-25 04:37:00 -0500</creation_ts>
          <short_desc>Update SELinux policy for SSSD as the responders may be socket-activated (for Fedora 25+)</short_desc>
          <delta_ts>2017-07-04 04:02:59 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>selinux-policy</component>
          <version>25</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>CURRENTRELEASE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Fabiano Fidêncio">fidencio</reporter>
          <assigned_to name="Lukas Vrabec">lvrabec</assigned_to>
          <cc>dominick.grift</cc>
    
    
    <cc>dwalsh</cc>
    
    
    <cc>jhrozek</cc>
    
    
    <cc>lslebodn</cc>
    
    
    <cc>lvrabec</cc>
    
    
    <cc>mgrepl</cc>
    
    
    <cc>plautrba</cc>
    
    
    <cc>pmoore</cc>
    
    
    <cc>ssekidde</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>selinux-policy-3.13.1-225.12</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-07-04 04:02:59</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10094852</commentid>
    <comment_count>0</comment_count>
    <who name="Fabiano Fidêncio">fidencio</who>
    <bug_when>2017-01-25 04:37:07 -0500</bug_when>
    <thetext>Due to this new feature add to SSSD I&apos;ve been hitting the following AVCs:

Jan 25 09:25:57 client1.ipa.example sssd_be[14440]: GSSAPI client step 1
Jan 25 09:25:57 client1.ipa.example sssd_be[14440]: GSSAPI client step 1
Jan 25 09:25:57 client1.ipa.example sssd_be[14440]: GSSAPI client step 1
Jan 25 09:25:57 client1.ipa.example sssd_be[14440]: GSSAPI client step 2
Jan 25 09:26:04 client1.ipa.example audit[1]: AVC avc:  denied  { create } for  pid=1 comm=&quot;systemd&quot; scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:unconfined_service_t:s0 tclass=unix_stream_socket permissive=0
Jan 25 09:26:04 client1.ipa.example systemd[1]: sssd-pam.socket: Failed to listen on sockets: Permission denied
Jan 25 09:26:05 client1.ipa.example systemd[1]: Failed to listen on SSSD PAM Service responder socket.
-- Subject: Unit sssd-pam.socket has failed
-- Defined-By: systemd
-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel
-- 
-- Unit sssd-pam.socket has failed.
-- 
-- The result is failed.

Jan 25 09:26:04 client1.ipa.example audit[1]: AVC avc:  denied  { create } for  pid=1 comm=&quot;systemd&quot; scontext=system_u:system_r:init_t:s0 tcontext=system_u:system_r:unconfined_service_t:s0 tclass=unix_stream_socket permissive=0
Jan 25 09:26:05 client1.ipa.example systemd[1]: sssd-autofs.socket: Failed to listen on sockets: Permission denied
Jan 25 09:26:05 client1.ipa.example systemd[1]: Failed to listen on SSSD AutoFS Service responder socket.
-- Subject: Unit sssd-autofs.socket has failed
-- Defined-By: systemd
-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel
-- 
-- Unit sssd-autofs.socket has failed.
-- 
-- The result is failed.

As far as I understand it&apos;s going to happen for every added sssd-@responder@.socket, and here&apos;s the complete list:
- sssd-autofs.socket
- sssd-nss.socket
- sssd-pac.socket
- sssd-pam.socket
- sssd-pam-priv.socket
- sssd-ssh.socket
- sssd-sudo.socket

I&apos;m not sure if something has to be done for the services as well.

Anyways, Let me know any other info is needed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10245385</commentid>
    <comment_count>1</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2017-03-16 06:59:02 -0400</bug_when>
    <thetext>A little bit more details for this BZ.
Previous /usr/sbin/sssd fork+exec sssd responders (sssd_nss, sssd_pam ...)
It was configured in sssd.conf which responders will be started.
in sssd-1.15 we added possibility to start responders as socket activated services. There sore there are few AVCs

Firstly after starting some socket by systemctl. Because previously sockets were created by sssd responders which were already in sssd_t domain.

e.g.
sh# systemctl start sssd-pam.socket
sh# ausearch -m avc
----
time-&gt;Thu Mar 16 11:44:12 2017
type=AVC msg=audit(1489661052.387:10581): avc:  denied  { unlink } for  pid=1 comm=&quot;systemd&quot; name=&quot;pam&quot; dev=&quot;dm-0&quot; ino=270594 scontext=system_u:system_r:init_t:s0 tcontext=system_u:object_r:sssd_var_lib_t:s0 tclass=sock_file permissive=1
----
time-&gt;Thu Mar 16 11:44:12 2017
type=AVC msg=audit(1489661052.387:10582): avc:  denied  { create } for  pid=1 comm=&quot;systemd&quot; name=&quot;pam&quot; scontext=system_u:system_r:init_t:s0 tcontext=system_u:object_r:sssd_var_lib_t:s0 tclass=sock_file permissive=1
----
time-&gt;Thu Mar 16 11:44:12 2017
type=AVC msg=audit(1489661052.388:10583): avc:  denied  { setattr } for  pid=8128 comm=&quot;systemd&quot; name=&quot;pam&quot; dev=&quot;dm-0&quot; ino=270594 scontext=system_u:system_r:init_t:s0 tcontext=system_u:object_r:sssd_var_lib_t:s0 tclass=sock_file permissive=1 



Another issue is that socket activated responders are running with unconfined_service_t SELinux context

sh# ps auxZ | grep sssd_pa[m]
system_u:system_r:unconfined_service_t:s0 sssd 8244 0.0  0.2 138724 8420 ?     Ss   11:52   0:00 /usr/libexec/sssd/sssd_pam --debug-to-files --socket-activated


sh# ps auxZ | grep sss[d]
system_u:system_r:sssd_t:s0     root      8209  0.0  0.2 161820  8632 ?        Ss   11:50   0:00 /usr/sbin/sssd -i -f
system_u:system_r:sssd_t:s0     sssd      8210  0.0  0.4 197152 12724 ?        S    11:50   0:00 /usr/libexec/sssd/sssd_be --domain redhat.com --uid 995 --gid 993 --debug-to-files
system_u:system_r:sssd_t:s0     sssd      8211  0.0  1.0 159000 32568 ?        S    11:50   0:00 /usr/libexec/sssd/sssd_nss --uid 995 --gid 993 --debug-to-files
system_u:system_r:unconfined_service_t:s0 sssd 8244 0.0  0.2 138724 8420 ?     Ss   11:52   0:00 /usr/libexec/sssd/sssd_pam --debug-to-files --socket-activated





Last but not least is that sssd still support both ways of starting responders.
Both ways need to work with SELinux enforcing mode.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>