<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1044119</bug_id>
          
          <creation_ts>2013-12-17 15:29:00 -0500</creation_ts>
          <short_desc>crash bundles gdb</short_desc>
          <delta_ts>2016-12-16 09:07:51 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>crash</component>
          <version>25</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>CURRENTRELEASE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Reopened</keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>504493</blocked>
    
    
    <blocked>225660</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Toshio Ernie Kuratomi">a.badger</reporter>
          <assigned_to name="Dave Anderson">anderson</assigned_to>
          <cc>a.badger</cc>
    
    
    <cc>anderson</cc>
    
    
    <cc>rjones</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>crash-7.1.7-1.fc25</cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-12-16 09:07:51</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>6629737</commentid>
    <comment_count>0</comment_count>
    <who name="Toshio Ernie Kuratomi">a.badger</who>
    <bug_when>2013-12-17 15:29:26 -0500</bug_when>
    <thetext>Description of problem:

While looking into what it would take to close out all of the libiberty CVE problems I came across the fact that the crash package is bundling gdb.

This should either be patched to use the system gdb or a bundling exception granted by the FPC.

Note that if you&apos;re going down the bundling exception route that gdb already has some bundled library exceptions that may not extend to a third party bundling their code and also that gdb has a bundled library exception (for libreadline) that was rejected in favour of using the system libreadline.  This will likely mean that even if you were granted an exception to bundle gdb you may have more work to do in order to unbundle those other packages or be granted exceptions to bundle those as well.


Version-Release number of selected component (if applicable):
crash-0:7.0.3-1.fc21.x86_64</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6629910</commentid>
    <comment_count>1</comment_count>
    <who name="Dave Anderson">anderson</who>
    <bug_when>2013-12-17 16:16:01 -0500</bug_when>
    <thetext>(In reply to Toshio Ernie Kuratomi from comment #0)
&gt; Description of problem:
&gt; 
&gt; While looking into what it would take to close out all of the libiberty CVE
&gt; problems I came across the fact that the crash package is bundling gdb.
&gt; 
&gt; This should either be patched to use the system gdb or a bundling exception
&gt; granted by the FPC.

The crash utility cannot &quot;use the system gdb&quot;; it can almost be considered
as a huge wrapper around a significantly patched gdb embedded within it. 

&gt; 
&gt; Note that if you&apos;re going down the bundling exception route that gdb already
&gt; has some bundled library exceptions that may not extend to a third party
&gt; bundling their code and also that gdb has a bundled library exception (for
&gt; libreadline) that was rejected in favour of using the system libreadline. 
&gt; This will likely mean that even if you were granted an exception to bundle
&gt; gdb you may have more work to do in order to unbundle those other packages
&gt; or be granted exceptions to bundle those as well.

I&apos;m not familiar with the concept of bundling exceptions, what the FPC is,
the &quot;work to do&quot; to unbundle packages, or what this addition to the 
crash.spec file actually accomplishes:

 +Provides: bundled(libiberty)

Can you point me to some documentation?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6630236</commentid>
    <comment_count>2</comment_count>
    <who name="Toshio Ernie Kuratomi">a.badger</who>
    <bug_when>2013-12-17 18:27:34 -0500</bug_when>
    <thetext>documentation link first: https://fedoraproject.org/wiki/Packaging:No_Bundled_Libraries

The FPC is the Fedora Packaging Committee.  Their main function is to work on the Packaging Guidelines that all packages in Fedora follow.  As an adjunct to that, they decide whether a package is allowed to bundle another upstream&apos;s code, must patch out that behaviour and use a system version, or should be removed from Fedora.  The first of those outcomes is known as a bundling exception.  It&apos;s an FPC verdict that the package in question is allowed to bundle the other upstream&apos;s code.

The addition to the crash spec file that I made is there to allow people to track down what packages are bundling another piece of code.  They are used, for instance, when a CVE in the bundled code is found and we then have to track down all the other packages that are bundling it and fix them.  If you are granted a bundling exception for gdb, you would need to add  a similar virtual provide that allowed people to track the fact that the crash package is bundling gdb&apos;s code.

We would likely also need to grant you permission to use bundled(binutils) (as it seems that crash isn&apos;t being produced by sourceware.org, which is the bundled library exception that allows gdb to use bundled(binutils).  And we&apos;d also have to decide if you were allowed to bundle libreadline or must use the system version of that (the Fedora gdb uses the system version of readline.)

I see that the bundling issues were brought up in the merge review request but you never finished that process so the issues have lingered.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6631777</commentid>
    <comment_count>3</comment_count>
    <who name="Richard W.M. Jones">rjones</who>
    <bug_when>2013-12-18 05:05:29 -0500</bug_when>
    <thetext>It&apos;s more like crash is a forked gdb which periodically integrates
gdb code.  I really don&apos;t think this has anything to do with
bundling.  If there was a security bug against gdb then it would
have to be cloned to crash (but surely that happens already as this
situation is well-known and has been around for years).  If it was up
to me I&apos;d close this bug as NOTABUG.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6633438</commentid>
    <comment_count>4</comment_count>
    <who name="Toshio Ernie Kuratomi">a.badger</who>
    <bug_when>2013-12-18 11:36:33 -0500</bug_when>
    <thetext>You make a poor assumption there.  The bundled library exceptions (with their virtual provides) is how fedora tracks bundling.  Without that information there is no way that people who are not involved with crash itself would know that there&apos;s a relationship between gdb and the crash package.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6633512</commentid>
    <comment_count>5</comment_count>
    <who name="Toshio Ernie Kuratomi">a.badger</who>
    <bug_when>2013-12-18 11:58:22 -0500</bug_when>
    <thetext>Advancing the position that this is a fork is a good idea.  We do allow forks as opposed to bundling.  However, there are underlying reasons that we consider forks to be a valid reason and bundling to not be okay... The crash case would have to be evaluated to see if the specifics here actually satisfy those underlying reasons (most forks don&apos;t ship the whole bundled tarball from the upstream and then apply a patch to that as part of the build process, for instance.  The build process for a forked gdb should allow the package maintainers to influence the build of the forked gdb via configure switches, etc and it&apos;s not immediately obvious whether that&apos;s the case here.)

Closing a bundling violation as NOTABUG is not a great idea... it just means that the problem will escalate to FESCo and from there back to FPC with everyone involved thinking that you are a combative and uncooperative maintainer rather than someone they can work with to craft a solution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6633518</commentid>
    <comment_count>6</comment_count>
    <who name="Richard W.M. Jones">rjones</who>
    <bug_when>2013-12-18 11:59:35 -0500</bug_when>
    <thetext>OK, I agree on that point.

A similar situation would be the mingw-* packages, where security
errata get cloned for (eg) pixman and mingw-pixman.  Our security
team are aware of this and do it automatically.

I don&apos;t think the bundled libraries policy applies to either
of these situations, since (a) it&apos;s not a library, (b) it&apos;s not
bundled in the ordinary sense of that word and (c) if you read
the policy page it&apos;s not obvious it was intended to apply to
these cases.

Cross-compilation is a special case we have handled ad-hoc.
Crash is a straight fork of gdb with many extra features and a
completely different use case -- when I looked at the crash code
it was obvious (to me) there was no chance of any meaningful
merge happening in the future.  (Perhaps Dave will disagree)

(This is probably not a good place to continue this discussion
however ... perhaps on the devel or packaging list)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6634075</commentid>
    <comment_count>7</comment_count>
    <who name="Dave Anderson">anderson</who>
    <bug_when>2013-12-18 14:41:19 -0500</bug_when>
    <thetext>&gt; The build process for a forked gdb should allow the package maintainers 
&gt; to influence the build of the forked gdb via configure switches, etc and
&gt; it&apos;s not immediately obvious whether that&apos;s the case here.

I don&apos;t follow...

&gt; Crash is a straight fork of gdb with many extra features and a
&gt; completely different use case -- when I looked at the crash code
&gt; it was obvious (to me) there was no chance of any meaningful
&gt; merge happening in the future.  (Perhaps Dave will disagree)

If you mean a &quot;meaningful merge&quot; with the upstream gdb, then
no, that will never happen.

As you&apos;ve stated, the crash utility can be considered a fork
of gdb, where the user interface has been redirected to the
crash sources by hooks provided by the gdb code.  The embedded 
gdb is invoked as &quot;gdb vmlinux&quot;, and for the most part used for
accessing debuginfo information from the vmlinux file, and is
not aware of any core file.

I just don&apos;t see anything that embodies a need to &quot;craft a solution&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>6634138</commentid>
    <comment_count>8</comment_count>
    <who name="Toshio Ernie Kuratomi">a.badger</who>
    <bug_when>2013-12-18 14:55:51 -0500</bug_when>
    <thetext>Sure.  So open the FPC exception ticket and get an exception granted along with the virtual provides that can be used to track your package&apos;s use of the bundled code.  I&apos;m just letting you know that when you do, you should probably be thinking about what the FPC is going to be evaluating your package on so that you can have answers that show that this package builds on the precedents we have already set for granting exceptions rather than being placed in the category of precedents we have set where exceptions were rejected.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7994299</commentid>
    <comment_count>9</comment_count>
    <who name="Jaroslav Reznik">jreznik</who>
    <bug_when>2015-03-03 10:20:11 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 22 development cycle.
Changing version to &apos;22&apos;.

More information and reason for this action is here:
https://fedoraproject.org/wiki/Fedora_Program_Management/HouseKeeping/Fedora22</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9521525</commentid>
    <comment_count>10</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2016-07-19 06:48:00 -0400</bug_when>
    <thetext>Fedora 22 changed to end-of-life (EOL) status on 2016-07-19. Fedora 22 is
no longer maintained, which means that it will not receive any further
security or bug fix updates. As a result we are closing this bug.

If you can reproduce this bug against a currently maintained version of
Fedora please feel free to reopen this bug against that version. If you
are unable to reopen this bug, please file a new report against the
current release. If you experience problems, please add a comment to this
bug.

Thank you for reporting this bug and we are sorry it could not be fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9521693</commentid>
    <comment_count>11</comment_count>
    <who name="Dominik &apos;Rathann&apos; Mierzejewski">dominik</who>
    <bug_when>2016-07-19 07:00:57 -0400</bug_when>
    <thetext>This still applies even to current rawhide. The guidelines have changed in the meantime, so please at least specify the bundled gdb version in:
Provides: bundled(gdb) = x.x</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9548710</commentid>
    <comment_count>12</comment_count>
    <who name="Jan Kurik">jkurik</who>
    <bug_when>2016-07-26 00:05:00 -0400</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 25 development cycle.
Changing version to &apos;25&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9793661</commentid>
    <comment_count>13</comment_count>
    <who name="Dave Anderson">anderson</who>
    <bug_when>2016-10-14 15:58:01 -0400</bug_when>
    <thetext>- Fedora Rawhide build: crash-7.1.6-1.fc26  (10/14/16)
  http://koji.fedoraproject.org/koji/buildinfo?buildID=810068</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9993446</commentid>
    <comment_count>14</comment_count>
    <who name="Dave Anderson">anderson</who>
    <bug_when>2016-12-16 09:07:51 -0500</bug_when>
    <thetext>Pushed to fc25 stable:
 
Information for build crash-7.1.7-1.fc25
https://koji.fedoraproject.org/koji/buildinfo?buildID=823252

FEDORA-2016-b7c1bcbc18
https://bodhi.fedoraproject.org/updates/FEDORA-2016-b7c1bcbc18</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>