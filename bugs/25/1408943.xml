<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1408943</bug_id>
          
          <creation_ts>2016-12-28 05:19:00 -0500</creation_ts>
          <short_desc>odb 2.4.0 prevents gcc suite to be upgraded to 6.3.1</short_desc>
          <delta_ts>2017-01-10 03:19:18 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>odb</component>
          <version>25</version>
          <rep_platform>x86_64</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>medium</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Serge Robyns">serge.robyns</reporter>
          <assigned_to name="Dave Johansen">davejohansen</assigned_to>
          <cc>boris</cc>
    
    
    <cc>davejohansen</cc>
    
    
    <cc>lemenkov</cc>
    
    
    <cc>v</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>odb-2.4.0-17.fc25 odb-2.4.0-17.fc24</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-01-10 01:48:36</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10022687</commentid>
    <comment_count>0</comment_count>
    <who name="Serge Robyns">serge.robyns</who>
    <bug_when>2016-12-28 05:19:21 -0500</bug_when>
    <thetext>Description of problem:
odb prevents gcc toolchain to be upgraded to 6.3.1

Version-Release number of selected component (if applicable):
odb 2.4.0

How reproducible:

Steps to Reproduce:
1.sudo dnf --best --allowerasing upgrade

Actual results:
[sudo] password for xxxxx:
Fedora 25 - x86_64 - Updates                    1.4 MB/s |  14 MB     00:09
Last metadata expiration check: 0:00:08 ago on Wed Dec 28 11:07:23 2016.
Error: package odb-2.4.0-15.fc25.x86_64 requires gcc = 6.2.1, but none of the providers can be installed


Expected results:
gcc toolchain should be upgradable

Additional info:
Similar problem as old Bug 1379046.
I use the usual workaround to rebuild odb from the source RPM&apos;s.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10026649</commentid>
    <comment_count>1</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-01 13:16:37 -0500</bug_when>
    <thetext>odb-2.4.0-17.fc25 has been submitted as an update to Fedora 25. https://bodhi.fedoraproject.org/updates/FEDORA-2017-9a953557c6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10026650</commentid>
    <comment_count>2</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-01 13:16:44 -0500</bug_when>
    <thetext>odb-2.4.0-17.fc24 has been submitted as an update to Fedora 24. https://bodhi.fedoraproject.org/updates/FEDORA-2017-cc775ccb82</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10026955</commentid>
    <comment_count>3</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-01 20:20:31 -0500</bug_when>
    <thetext>odb-2.4.0-17.fc25 has been pushed to the Fedora 25 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2017-9a953557c6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10026977</commentid>
    <comment_count>4</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-01 20:51:04 -0500</bug_when>
    <thetext>odb-2.4.0-17.fc24 has been pushed to the Fedora 24 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2017-cc775ccb82</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10028488</commentid>
    <comment_count>5</comment_count>
    <who name="Serge Robyns">serge.robyns</who>
    <bug_when>2017-01-02 09:41:55 -0500</bug_when>
    <thetext>Update works.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10028603</commentid>
    <comment_count>6</comment_count>
    <who name="Vasco Rodrigues">v</who>
    <bug_when>2017-01-02 10:39:04 -0500</bug_when>
    <thetext>Works, but have a question.

Isn&apos;t the C++ ABI forward compatible?
Why require a rebuild of the package on every GCC update?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10029322</commentid>
    <comment_count>7</comment_count>
    <who name="Dave Johansen">davejohansen</who>
    <bug_when>2017-01-02 21:15:48 -0500</bug_when>
    <thetext>I th(In reply to Vasco Rodrigues from comment #6)
&gt; Works, but have a question.
&gt; 
&gt; Isn&apos;t the C++ ABI forward compatible?
&gt; Why require a rebuild of the package on every GCC update?

I think that this was added by upstream a while back ( http://www.codesynthesis.com/pipermail/odb-users/2013-March/001115.html ). If there&apos;s a way to turn this off or make it less annoying, then I&apos;m fine with doing that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10030095</commentid>
    <comment_count>8</comment_count>
    <who name="Serge Robyns">serge.robyns</who>
    <bug_when>2017-01-03 06:00:20 -0500</bug_when>
    <thetext>As I understand it, odb uses GCC &quot;internals&quot; to some extend and requires a certain level of compatibility.  However, I think the package should seamless continue to work with &quot;minor&quot; updates such as 6.2.x or even 6.y.x.  I&apos;m not qualified enough to state if 6.y.x would be fine.  AFAIK, GCC now increases the major version number faster than previously when doing major changes on the internals or defaults (e.g. uses g++14 as standard level) and so it is very likely to work as I&apos;ve seen it since I&apos;m using the package on fedora and got the issue with every update of GCC 6.  So, could the package check for 6.x.y or at least 6.2.x to relieve this pain?  I think that xsdcxx, which uses similar approaches is less a pain in the upgrades.  Although I stopped using it as I noticed that it doesn&apos;t bring me any productivity increase and sometimes it is the opposite but explodes the code size of my applications.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10034344</commentid>
    <comment_count>9</comment_count>
    <who name="Boris Kolpackov">boris</who>
    <bug_when>2017-01-04 09:28:22 -0500</bug_when>
    <thetext>&gt; As I understand it, odb uses GCC &quot;internals&quot; to some extend and requires a certain level of compatibility.

A GCC plugin that wants to do anything remotely useful will depend on GCC internals (e.g., AST). This is how things are.


&gt; However, I think the package should seamless continue to work with &quot;minor&quot; updates such as 6.2.x or even 6.y.x.

At least on my Ubuntu GCC seems to agree with your assessment:

$g++-6 -print-file-name=plugin
/usr/lib/gcc/x86_64-linux-gnu/6/plugin

Since the plugin installation directory is just 6 and not 6.2 or 6.2.0, then one can reasonably assume plugins are compatible across 6.X.Y. Whether it will actually work is another questions, but I think it is worth a try.

&gt; I think that xsdcxx, which uses similar approaches is less a pain in the upgrades.

No, there are no GCC plugins involved there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10034586</commentid>
    <comment_count>10</comment_count>
    <who name="Dave Johansen">davejohansen</who>
    <bug_when>2017-01-04 10:33:20 -0500</bug_when>
    <thetext>(In reply to Boris Kolpackov from comment #9)
&gt; &gt; As I understand it, odb uses GCC &quot;internals&quot; to some extend and requires a certain level of compatibility.
&gt; 
&gt; A GCC plugin that wants to do anything remotely useful will depend on GCC
&gt; internals (e.g., AST). This is how things are.

Requiring the specific version of gcc was added 2.5 years ago when gcc version numbers were a completely different beast ( http://pkgs.fedoraproject.org/cgit/rpms/odb.git/commit/?id=c94e3c2e62962ea84f0feccbae5d59e72f031674 ). Maybe manually requiring the specific version of gcc has outlived its usefulness.

&gt; &gt; However, I think the package should seamless continue to work with &quot;minor&quot; updates such as 6.2.x or even 6.y.x.
&gt; 
&gt; At least on my Ubuntu GCC seems to agree with your assessment:
&gt; 
&gt; $g++-6 -print-file-name=plugin
&gt; /usr/lib/gcc/x86_64-linux-gnu/6/plugin
&gt; 
&gt; Since the plugin installation directory is just 6 and not 6.2 or 6.2.0, then
&gt; one can reasonably assume plugins are compatible across 6.X.Y. Whether it
&gt; will actually work is another questions, but I think it is worth a try.

The plugin is still being installed into a path with the full version:
https://koji.fedoraproject.org/koji/rpminfo?rpmID=8787600</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10034677</commentid>
    <comment_count>11</comment_count>
    <who name="Boris Kolpackov">boris</who>
    <bug_when>2017-01-04 10:56:33 -0500</bug_when>
    <thetext>&gt; Maybe manually requiring the specific version of gcc has outlived its usefulness.

You still would want to require the specific major version. I think through painful experience we have established that those are definitely incompatible ;-).

&gt; The plugin is still being installed into a path with the full version
&gt;
&gt; /usr/lib/gcc/x86_64-redhat-linux/6.3.1/plugin/odb.so

Ok, so it looks like Fedora (unlike Ubuntu and probably Debian) believes plugins
are incompatible. Maybe it makes sense to ask on the relevant list why there is such a belief?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10035082</commentid>
    <comment_count>12</comment_count>
    <who name="Serge Robyns">serge.robyns</who>
    <bug_when>2017-01-04 13:18:12 -0500</bug_when>
    <thetext>Wouldn&apos;t be wise to check with the upstream odb authors how things stand today with the new versioning approach of GCC?  The current state of affairs on Fedora is really a pain, as I&apos;ve been through 3 times the same issue in less than a year.

This adds a reason for me to look at alternatives to have c++ multidb sql support and have some hopes on projects like sqlpp11 or cppstddb.  These offer a better control on how the updates are performed on the db but at the cost of &quot;transparency&quot;.  But this is off topic to the issue at hand.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10035142</commentid>
    <comment_count>13</comment_count>
    <who name="Dave Johansen">davejohansen</who>
    <bug_when>2017-01-04 13:34:45 -0500</bug_when>
    <thetext>(In reply to Serge Robyns from comment #12)
&gt; Wouldn&apos;t be wise to check with the upstream odb authors how things stand
&gt; today with the new versioning approach of GCC?  The current state of affairs
&gt; on Fedora is really a pain, as I&apos;ve been through 3 times the same issue in
&gt; less than a year.

Boris is the upstream author of odb.

&gt; This adds a reason for me to look at alternatives to have c++ multidb sql
&gt; support and have some hopes on projects like sqlpp11 or cppstddb.  These
&gt; offer a better control on how the updates are performed on the db but at the
&gt; cost of &quot;transparency&quot;.  But this is off topic to the issue at hand.

I no longer use odb as an C++ ORM solution and I&apos;ve just been maintaining to be nice. I&apos;m definitely open to minimize the pain to users and the amount of work I have to do, but it sounds like this is an issue with how Fedora defines the plugin directory for gcc and not something I can directly fix.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10036907</commentid>
    <comment_count>14</comment_count>
    <who name="Serge Robyns">serge.robyns</who>
    <bug_when>2017-01-05 06:05:23 -0500</bug_when>
    <thetext>I understand.  Maybe Fedora expects package owners to be very &quot;reactive&quot; and adjust their packages prior releasing GCC updates.
Thanks for continue to maintain the package as you do.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10037815</commentid>
    <comment_count>15</comment_count>
    <who name="Boris Kolpackov">boris</who>
    <bug_when>2017-01-05 10:35:47 -0500</bug_when>
    <thetext>&gt; Wouldn&apos;t be wise to check with the upstream odb authors how things stand today with the new versioning approach of GCC?  The current state of affairs on Fedora is really a pain, as I&apos;ve been through 3 times the same issue in less than a year.

Yes, distribution packaging situation is getting worse. Dave is still doing an excellent job: in Ubuntu LTS we have libodb* runtimes broken (built with different versions of GCC), there is a bug report open for months, and nobody cares.

Our long term solution for this is build2: https://build2.org

&gt; But this is off topic to the issue at hand.

Right. Plus, making thinly veiled threat to switch to another project will hardly help your cause.


&gt; [...] it sounds like this is an issue with how Fedora defines the plugin directory for gcc and not something I can directly fix.

One way to sidestep this whole issue would be to somehow trigger a package rebuild every time there is a GCC version update. Not sure if it&apos;s possible/easy to automate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10037935</commentid>
    <comment_count>16</comment_count>
    <who name="Dave Johansen">davejohansen</who>
    <bug_when>2017-01-05 10:45:23 -0500</bug_when>
    <thetext>(In reply to Serge Robyns from comment #14)
&gt; I understand.  Maybe Fedora expects package owners to be very &quot;reactive&quot; and
&gt; adjust their packages prior releasing GCC updates.
&gt; Thanks for continue to maintain the package as you do.

The problem is that the rebuild has to be done after the gcc update is pushed to stable or using a buildroot override (which is a big pain).

I opened bug 1410498 to request that the path be fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10047977</commentid>
    <comment_count>17</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-10 01:48:36 -0500</bug_when>
    <thetext>odb-2.4.0-17.fc25 has been pushed to the Fedora 25 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10048170</commentid>
    <comment_count>18</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-10 03:19:18 -0500</bug_when>
    <thetext>odb-2.4.0-17.fc24 has been pushed to the Fedora 24 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>