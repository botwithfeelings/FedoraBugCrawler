<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1320693</bug_id>
          
          <creation_ts>2016-03-23 14:14:00 -0400</creation_ts>
          <short_desc>add --with-crypt=nss to fipscheck (use NSS&apos;s HMAC library)</short_desc>
          <delta_ts>2017-02-24 05:03:01 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>fipscheck</component>
          <version>25</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>cagney</reporter>
          <assigned_to name="Tomas Mraz">tmraz</assigned_to>
          <cc>pwouters</cc>
    
    
    <cc>tmraz</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>fipscheck-1.5.0-1.fc26</cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-02-24 05:03:01</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9173877</commentid>
    <comment_count>0</comment_count>
      <attachid>1139678</attachid>
    <who name="">cagney</who>
    <bug_when>2016-03-23 14:14:12 -0400</bug_when>
    <thetext>Created attachment 1139678
Add --with-crypto=nss and ability to use NSS&apos;s HMAC library

(Using Fedora&apos;s bugzilla to submit patches to upstream fipscheck is a little weird :-/)

The attached patch adds the ability to configure/build fipscheck using NSS&apos;s HMAC library.  To use this feature, specify --with-crypto=nss when configuring fipscheck.

Tested by creating hmac files with fipshmac/openssl and verifying them with fipscheck/nss and vice versa.

See also bug #1320676</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9174480</commentid>
    <comment_count>1</comment_count>
    <who name="Paul Wouters">pwouters</who>
    <bug_when>2016-03-23 17:51:26 -0400</bug_when>
    <thetext>this feature helps FIPS certifications of libreswan on embedded systems that don&apos;t use openssl. (yes they exist :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9176025</commentid>
    <comment_count>2</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-03-24 06:35:50 -0400</bug_when>
    <thetext>To me it would be preferable to use kernel AF_ALG support instead, this way we could avoid any library dependency.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9216220</commentid>
    <comment_count>3</comment_count>
    <who name="">cagney</who>
    <bug_when>2016-04-07 10:24:04 -0400</bug_when>
    <thetext>(In reply to Tomas Mraz from comment #2)
&gt; To me it would be preferable to use kernel AF_ALG support instead, this way
&gt; we could avoid any library dependency.

As best I know, that only helps systems using a recent Linux kernel.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9216263</commentid>
    <comment_count>4</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-04-07 10:32:52 -0400</bug_when>
    <thetext>The AF_ALG support is in Linux kernel for quite long time. However you&apos;re right that it is a Linux-only thing. Is libreswan supported on other kernels?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9216654</commentid>
    <comment_count>5</comment_count>
    <who name="Paul Wouters">pwouters</who>
    <bug_when>2016-04-07 11:55:41 -0400</bug_when>
    <thetext>It supports the PF_KEY API which is the API on all platforms except linux</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9550037</commentid>
    <comment_count>6</comment_count>
    <who name="Jan Kurik">jkurik</who>
    <bug_when>2016-07-26 01:09:09 -0400</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 25 development cycle.
Changing version to &apos;25&apos;.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1139678</attachid>
            <date>2016-03-23 14:14:00 -0400</date>
            <delta_ts>2016-03-23 14:14:12 -0400</delta_ts>
            <desc>Add --with-crypto=nss and ability to use NSS&apos;s HMAC library</desc>
            <filename>xxx.patch</filename>
            <type>text/plain</type>
            <size>10334</size>
            <attacher>cagney</attacher>
            
              <data encoding="base64">ZGlmZiAtciA4MmU1MjAzMjcxNWQgLXIgNjBjOGRlN2MxMGM4IENPUFlJTkcKLS0tIGEvQ09QWUlO
RwlNb24gRmViIDEwIDE2OjU0OjQyIDIwMTQgKzAxMDAKKysrIGIvQ09QWUlORwlXZWQgTWFyIDIz
IDEzOjIwOjUyIDIwMTYgLTA0MDAKQEAgLTEsNCArMSw1IEBACiBDb3B5cmlnaHQgMjAwOC0yMDEy
IFJlZCBIYXQsIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KK0NvcHlyaWdodCAoQykgMjAxNiBB
bmRyZXcgQ2FnbmV5CiAKIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5h
cnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dAogbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHBy
b3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6CmRpZmYgLXIgODJl
NTIwMzI3MTVkIC1yIDYwYzhkZTdjMTBjOCBjb25maWd1cmUuYWMKLS0tIGEvY29uZmlndXJlLmFj
CU1vbiBGZWIgMTAgMTY6NTQ6NDIgMjAxNCArMDEwMAorKysgYi9jb25maWd1cmUuYWMJV2VkIE1h
ciAyMyAxMzoyMDo1MiAyMDE2IC0wNDAwCkBAIC0xLDMgKzEsMzAgQEAKKyMgQ29weXJpZ2h0IChD
KSAyMDA4LCAyMDA5LCAyMDEwLCAyMDEyLCAyMDEzIFJlZCBIYXQsIEluYy4gQWxsIHJpZ2h0cyBy
ZXNlcnZlZC4KKyMgQ29weXJpZ2h0IChDKSAyMDE2IEFuZHJldyBDYWduZXkKKyMKKyMgUmVkaXN0
cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRo
b3V0CisjIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xs
b3dpbmcgY29uZGl0aW9ucyBhcmUgbWV0OgorIyAKKyMgMS4gUmVkaXN0cmlidXRpb25zIG9mIHNv
dXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLAorIyB0aGlz
IGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLgorIyAyLiBS
ZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNv
cHlyaWdodCBub3RpY2UsCisjIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93
aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb24KKyMgYW5kL29yIG90aGVyIG1hdGVy
aWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uCisjIAorIyBUSElTIFNPRlRXQVJF
IElTIFBST1ZJREVEIEJZIFJFRCBIQVQsIElOQy4gJydBUyBJUycnIEFORCBBTlkgRVhQUkVTUyBP
UgorIyBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBU
SEUgSU1QTElFRCBXQVJSQU5USUVTIE9GCisjIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBG
T1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PCisjIEVWRU5UIFNI
QUxMIFRIRSBGUkVFQlNEIFBST0pFQ1QgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5Z
IERJUkVDVCwKKyMgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1Ig
Q09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsCisjIEJVVCBOT1QgTElNSVRFRCBUTywg
UFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0Us
CisjIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBD
QVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YKKyMgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRS
QUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRQorIyBP
UiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNP
RlRXQVJFLCBFVkVOIElGCisjIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFN
QUdFLgorIyAKKyMgVGhlIHZpZXdzIGFuZCBjb25jbHVzaW9ucyBjb250YWluZWQgaW4gdGhlIHNv
ZnR3YXJlIGFuZCBkb2N1bWVudGF0aW9uIGFyZSB0aG9zZQorIyBvZiB0aGUgYXV0aG9ycyBhbmQg
c2hvdWxkIG5vdCBiZSBpbnRlcnByZXRlZCBhcyByZXByZXNlbnRpbmcgb2ZmaWNpYWwgcG9saWNp
ZXMsCisjIGVpdGhlciBleHByZXNzZWQgb3IgaW1wbGllZCwgb2YgUmVkIEhhdCwgSW5jLgorCiBB
Q19JTklUKFtmaXBzY2hlY2tdLFsxLjQuMV0sW3RtcmF6QHJlZGhhdC5jb21dKQogQUNfQ09ORklH
X0hFQURFUihbY29uZmlnLmhdKQogQUNfUFJFUkVRKDIuNjApCkBAIC0xMCw2ICszNyw4IEBACiAK
IEFNX1BST0dfTElCVE9PTAogCitQS0dfUFJPR19QS0dfQ09ORklHKCkKKwogZG5sIENoZWNrcyBm
b3IgcHJvZ3JhbXMuCiAKIEFDX1BST0dfQ0MKQEAgLTQ5LDE1ICs3OCwzNCBAQAogQUNfQ0hFQ0tf
TElCKFtkbF0sIFtkbG9wZW5dLCBMSUJETD0iLWxkbCIsIExJQkRMPSIiKQogQUNfU1VCU1QoTElC
REwpCiAKLWRubCBDaGVja3MgZm9yIHRoZSBleGlzdGVuY2Ugb2YgT3BlblNTTCB3aXRoIEZJUFMg
bW9kZQotQUNfQ0hFQ0tfTElCKFtjcnlwdG9dLCBbRklQU19tb2RlXSwKLVsKLQlMSUJDUllQVE89
LWxjcnlwdG8KLV0sCi1bCi0JQUNfTVNHX0VSUk9SKFtPcGVuU1NMIGxpYnJhcnkgd2l0aCBGSVBT
IG1vZGUgc3VwcG9ydCBpcyByZXF1aXJlZF0pCi1dKQotQUNfU1VCU1QoTElCQ1JZUFRPKQorCitk
bmwgVGhpcyBpc24ndCBhIHN0cmljdGx5IGNvcnJlY3QgdXNlIG9mIC0td2l0aCwgT1RPSCBpdCBp
cyBiZXR0ZXIKK2RubCB0aGFuIGhhdmluZyBzZXBhcmF0ZSBhbmQgY29uZmxpY3RpbmcgLS13aXRo
LW5zcyBhbmQgLS13aXRoLW9wZW5zc2wKK2RubCBvcHRpb25zLiAgUmF0aGVyIHRoYW4gYmUgInNt
YXJ0IiBhbmQgZ3Vlc3MgdGhlIGNyeXB0byBsaWJyYXJ5CitkbmwgYmFzZWQgb24gd2hhdCBpcyBp
bnN0YWxsZWQsIHRoaXMgbG9naWMgc2ltcGx5IGJhcmZzIG9uIGFuIGVycm9yLgorCitBQ19BUkdf
V0lUSChbY3J5cHRvXSwKKyAgICAgICAgICAgIFtBU19IRUxQX1NUUklORyhbLS13aXRoLWNyeXB0
b10sCisJICAgICAgICAgICAgICAgICAgICBbc3BlY2lmeSB0aGUgY3J5cHRvIGxpYnJhcnkgdG8g
dXNlIHdoZW4gY29tcHV0aW5nIHRoZSBITUFDLCBPcGVuU1NMICh0aGUgZGVmYXVsdCkgYW5kIE5T
UyBhcmUgc3VwcG9ydGVkXSldLAorICAgICAgICAgICAgW10sCisgICAgICAgICAgICBbd2l0aF9j
cnlwdG89b3BlbnNzbF0pCisKK2RubCBDaGVjayBmb3IgdGhlIGV4aXN0ZW5jZSBvZiB0aGUgc2xl
Y3RlZCBjcnlwdG8gbGlicmFyeSB3aXRoIEZJUFMgbW9kZQorQVNfQ0FTRSgkd2l0aF9jcnlwdG8s
CisgICAgW29wZW5zc2x8c3NsXSwgWworICAgICAgICBBQ19ERUZJTkUoW1dJVEhfT1BFTlNTTF0s
IFsxXSwgW3VzZSBITUFDIGZyb20gdGhlIE9wZW5TU0wgY3J5cHRvIGxpYnJhcnldKQorICAgICAg
ICBBQ19DSEVDS19MSUIoW2NyeXB0b10sIFtGSVBTX21vZGVdLCBbQ1JZUFRPX0xJQlM9LWxjcnlw
dG9dLAorICAgICAgICAgICAgICAgICAgICAgW0FDX01TR19FUlJPUihbT3BlblNTTCBsaWJyYXJ5
IHdpdGggRklQUyBtb2RlIHN1cHBvcnQgaXMgcmVxdWlyZWRdKV0pCisJXSwKKyAgICBbbnNzXSwg
WworCVBLR19DSEVDS19NT0RVTEVTKFtDUllQVE9dLFtuc3NdLFtdLFtBQ19NU0dfRVJST1IoW05T
UyBsaWJyYXJ5IHdpdGggRklQUyBtb2RlIHN1cHBvcnQgaXMgcmVxdWlyZWRdKV0pCisJQ1JZUFRP
X0xJQlM9IiRDUllQVE9fTElCUyAtbGZyZWVibCIKKyAgICAgICAgQUNfREVGSU5FKFtXSVRIX05T
U10sIFsxXSwgW3VzZSBITUFDIGZyb20gdGhlIE5TUyBjcnlwdG8gbGlicmFyeV0pCisJXSwKKyAg
ICBbQUNfTVNHX0VSUk9SKFtUaGUgLS13aXRoLWNyeXB0byBsaWJyYXJ5ICIkd2l0aF9jcnlwdG8i
IGlzIG5vdCBrbm93bl0pXSkKKworQUNfU1VCU1QoQ1JZUFRPX0xJQlMpCitBQ19TVUJTVChDUllQ
VE9fQ0ZMQUdTKQogCiBBQ19NU0dfQ0hFQ0tJTkcoc3lzY29uZmRpcikKIEFDX0FSR19XSVRIKHN5
c2NvbmZkaXIsCmRpZmYgLXIgODJlNTIwMzI3MTVkIC1yIDYwYzhkZTdjMTBjOCBzcmMvTWFrZWZp
bGUuYW0KLS0tIGEvc3JjL01ha2VmaWxlLmFtCU1vbiBGZWIgMTAgMTY6NTQ6NDIgMjAxNCArMDEw
MAorKysgYi9zcmMvTWFrZWZpbGUuYW0JV2VkIE1hciAyMyAxMzoyMDo1MiAyMDE2IC0wNDAwCkBA
IC0xLDQgKzEsMzEgQEAKICMgTWFrZWZpbGUuYW0gLSB0d28gYmluYXJpZXMgZmlwc2NoZWNrIGFu
ZCBmaXBzaG1hYworIworIyBDb3B5cmlnaHQgKEMpIDIwMDgsIDIwMDksIDIwMTAsIDIwMTMgUmVk
IEhhdCwgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLgorIyBDb3B5cmlnaHQgKEMpIDIwMTYgQW5k
cmV3IENhZ25leQorIworIyBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmlu
YXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQKKyMgbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVk
IHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6CisjIAorIyAx
LiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNv
cHlyaWdodCBub3RpY2UsCisjIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93
aW5nIGRpc2NsYWltZXIuCisjIDIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0
IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwKKyMgdGhpcyBsaXN0IG9mIGNv
bmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlv
bgorIyBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlv
bi4KKyMgCisjIFRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgUkVEIEhBVCwgSU5DLiAnJ0FT
IElTJycgQU5EIEFOWSBFWFBSRVNTIE9SCisjIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5H
LCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVMgT0YKKyMgTUVSQ0hB
TlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUgRElTQ0xB
SU1FRC4gSU4gTk8KKyMgRVZFTlQgU0hBTEwgVEhFIEZSRUVCU0QgUFJPSkVDVCBPUiBDT05UUklC
VVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULAorIyBJTkRJUkVDVCwgSU5DSURFTlRBTCwg
U1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywK
KyMgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9S
IFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwKKyMgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1Mg
SU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRgorIyBMSUFC
SUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElO
Q0xVRElORyBORUdMSUdFTkNFCisjIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9V
VCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYKKyMgQURWSVNFRCBPRiBUSEUg
UE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCisjIAorIyBUaGUgdmlld3MgYW5kIGNvbmNsdXNp
b25zIGNvbnRhaW5lZCBpbiB0aGUgc29mdHdhcmUgYW5kIGRvY3VtZW50YXRpb24gYXJlIHRob3Nl
CisjIG9mIHRoZSBhdXRob3JzIGFuZCBzaG91bGQgbm90IGJlIGludGVycHJldGVkIGFzIHJlcHJl
c2VudGluZyBvZmZpY2lhbCBwb2xpY2llcywKKyMgZWl0aGVyIGV4cHJlc3NlZCBvciBpbXBsaWVk
LCBvZiBSZWQgSGF0LCBJbmMuCiAKIGJpbl9QUk9HUkFNUyA9IGZpcHNjaGVjayBmaXBzaG1hYwog
CkBAIC0xMCwxNCArMzcsMTUgQEAKIEhNQUNESVIgPSAkKGxpYmRpcikvZmlwc2NoZWNrCiAKIGZp
cHNjaGVja19TT1VSQ0VTID0gZmlwc2NoZWNrLmMgJChjb21tb25fc3JjKQotZmlwc2NoZWNrX0NQ
UEZMQUdTID0gLURQQVRIX0hNQUNESVI9XCIkKEhNQUNESVIpXCIKLWZpcHNjaGVja19MREFERCA9
IEBMSUJDUllQVE9AIGxpYmZpcHNjaGVjay5sYQorZmlwc2NoZWNrX0NQUEZMQUdTID0gLURQQVRI
X0hNQUNESVI9XCIkKEhNQUNESVIpXCIgQENSWVBUT19DRkxBR1NACitmaXBzY2hlY2tfTERBREQg
PSBsaWJmaXBzY2hlY2subGEgQENSWVBUT19MSUJTQAogCiBmaXBzaG1hY19TT1VSQ0VTID0gZmlw
c2htYWMuYyAkKGNvbW1vbl9zcmMpCi1maXBzaG1hY19MREFERCA9IEBMSUJDUllQVE9ACitmaXBz
aG1hY19DUFBGTEFHUyA9IEBDUllQVE9fQ0ZMQUdTQAorZmlwc2htYWNfTERBREQgPSBAQ1JZUFRP
X0xJQlNACiAKIGxpYmZpcHNjaGVja19sYV9TT1VSQ0VTID0gbGlicmFyeS5jIGZpcHNjaGVjay5o
ICQoaG1hY3BhdGhfc3JjKQotbGliZmlwc2NoZWNrX2xhX0NQUEZMQUdTID0gLURQQVRIX0ZJUFND
SEVDSz1cIiQoYmluZGlyKS9maXBzY2hlY2tcIiAtRFBBVEhfSE1BQ0RJUj1cIiQoSE1BQ0RJUilc
IgorbGliZmlwc2NoZWNrX2xhX0NQUEZMQUdTID0gLURQQVRIX0ZJUFNDSEVDSz1cIiQoYmluZGly
KS9maXBzY2hlY2tcIiAtRFBBVEhfSE1BQ0RJUj1cIiQoSE1BQ0RJUilcIiBAQ1JZUFRPX0NGTEFH
U0AKIGxpYmZpcHNjaGVja19sYV9MSUJBREQgPSBATElCRExACiBsaWJmaXBzY2hlY2tfbGFfTERG
TEFHUyA9IC1uby11bmRlZmluZWQgLXZlcnNpb24taW5mbyAzOjE6MgogCmRpZmYgLXIgODJlNTIw
MzI3MTVkIC1yIDYwYzhkZTdjMTBjOCBzcmMvZmlsZWhtYWMuYwotLS0gYS9zcmMvZmlsZWhtYWMu
YwlNb24gRmViIDEwIDE2OjU0OjQyIDIwMTQgKzAxMDAKKysrIGIvc3JjL2ZpbGVobWFjLmMJV2Vk
IE1hciAyMyAxMzoyMDo1MiAyMDE2IC0wNDAwCkBAIC0xLDUgKzEsOCBAQAogLyogZmlsZWhtYWMu
YyAqLwogLyoKKyAqIENvcHlyaWdodCAoQykgMjAwOCwgMjAwOSwgMjAxMCwgMjAxMyBSZWQgSGF0
IEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KKyAqIENvcHlyaWdodCAoQykgMjAxNiBBbmRyZXcg
Q2FnbmV5CisgKgogICogUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFy
eSBmb3Jtcywgd2l0aCBvciB3aXRob3V0CiAgKiBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQg
cHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKICAqIApAQCAt
MzYsOSArMzksMjAgQEAKICNpbmNsdWRlIDxzeXNsb2cuaD4KICNpbmNsdWRlIDxzeXMvdHlwZXMu
aD4KICNpbmNsdWRlIDxzeXMvd2FpdC5oPgorCisjaWYgZGVmaW5lZChXSVRIX09QRU5TU0wpCiAj
aW5jbHVkZSA8b3BlbnNzbC9maXBzLmg+CiAjaW5jbHVkZSA8b3BlbnNzbC9ldnAuaD4KICNpbmNs
dWRlIDxvcGVuc3NsL2htYWMuaD4KKyNlbGlmIGRlZmluZWQoV0lUSF9OU1MpCisjaW5jbHVkZSA8
bnNzLmg+CisjaW5jbHVkZSA8c2VjaGFzaC5oPgorI2luY2x1ZGUgPGFsZ2htYWMuaD4KKyNpbmNs
dWRlIDxwazExcHViLmg+CisjaW5jbHVkZSA8c2VjbW9kLmg+CisjZWxzZQorI2Vycm9yICJubyBj
cnlwdG8gbGlicmFyeSBkZWZpbmVkIgorI2VuZGlmCiAKICNpbmNsdWRlICJmaWxlaG1hYy5oIgog
CkBAIC0xNjYsMTkgKzE4MCw1OSBAQAogCWludCBwcmVsaW5rID0gMDsKICNlbmRpZgogCWludCBy
diA9IC0xOwotCUhNQUNfQ1RYIGM7CiAJdW5zaWduZWQgY2hhciByYnVmW1JFQURfQlVGRkVSX0xF
TkdUSF07CiAJc2l6ZV90IGxlbjsKIAl1bnNpZ25lZCBpbnQgaGxlbjsKIAotCWlmIChmb3JjZV9m
aXBzICYmICFGSVBTX21vZGUoKSkgewotCQlpZiAoIUZJUFNfbW9kZV9zZXQoMSkpIHsKLQkJCWRl
YnVnX2xvZygiRklQU19tb2RlX3NldCgpIGZhaWxlZCIpOwotCQkJcmV0dXJuIC0xOworI2lmIGRl
ZmluZWQoV0lUSF9OU1MpCisJLyoKKwkgKiBXaGlsZSwgdGVjaG5pY2FsbHksIE5TU19Ob0RCX0lu
aXQoKSBpcyBpZGVucG90ZW50LCBwZXJmb3JtCisJICogYW4gZXhwbGljaXQgdGVzdC4KKwkgKi8K
KwlpZiAoIU5TU19Jc0luaXRpYWxpemVkKCkpIHsKKwkJZXJybm8gPSAwOyBkZWJ1Z19sb2coIklu
aXRpYWxpemluZyBOU1MiKTsgCisJCU5TU19Ob0RCX0luaXQoIi4iKTsKKwl9CisjZW5kaWYKKwor
CWlmIChmb3JjZV9maXBzKSB7CisjaWYgZGVmaW5lZChXSVRIX09QRU5TU0wpCisJCWlmICghRklQ
U19tb2RlKCkpIHsKKwkJCWlmICghRklQU19tb2RlX3NldCgxKSkgeworCQkJCWRlYnVnX2xvZygi
RklQU19tb2RlX3NldCgpIGZhaWxlZCIpOworCQkJCXJldHVybiAtMTsKKwkJCX0KIAkJfQorI2Vs
aWYgZGVmaW5lZChXSVRIX05TUykKKwkJaWYgKCFQSzExX0lzRklQUygpKSB7CisJCQllcnJubyA9
IDA7IGRlYnVnX2xvZygiRW5hYmxpbmcgTlNTIEZJUFMgbW9kZSIpOworCQkJU0VDTU9ETW9kdWxl
ICppbnRlcm5hbCA9IFNFQ01PRF9HZXRJbnRlcm5hbE1vZHVsZSgpOworCQkJaWYgKGludGVybmFs
ID09IE5VTEwpIHsKKwkJCQllcnJubyA9IDA7IGRlYnVnX2xvZygiU0VDTU9EX0dldEludGVybmFs
TW9kdWxlKCkgZmFpbGVkIik7CisJCQkJcmV0dXJuIC0xOworCQkJfQorCQkJaWYgKFNFQ01PRF9E
ZWxldGVJbnRlcm5hbE1vZHVsZShpbnRlcm5hbC0+Y29tbW9uTmFtZSkgIT0gU0VDU3VjY2Vzcykg
eworCQkJCWVycm5vID0gMDsgZGVidWdfbG9nKCJTRUNNT0RfRGVsZXRlSW50ZXJuYWxNb2R1bGUo
JXMpIGZhaWxlZCIsCisJCQkJCQkgICAgIGludGVybmFsLT5jb21tb25OYW1lKTsKKwkJCQlyZXR1
cm4gLTE7CisJCQl9CisJCQlpZiAoIVBLMTFfSXNGSVBTKCkpIHsKKwkJCQllcnJubyA9IDA7IGRl
YnVnX2xvZygiTlNTIEZJUFMgbW9kZSB0b2dnbGUgZmFpbGVkIik7CisJCQkJcmV0dXJuIC0xOwor
CQkJfQorCQl9CisJCXN0YXRpYyBpbnQgbG9nZ2VkID0gMDsKKwkJaWYgKCFsb2dnZWQpIHsKKwkJ
CWVycm5vID0gMDsgZGVidWdfbG9nKCJOU1MgRklQUyBtb2RlIGVuYWJsZWQiKTsKKwkJCWxvZ2dl
ZCA9IDE7CisJCX0KKyNlbmRpZgogCX0KIAorI2lmIGRlZmluZWQoV0lUSF9PUEVOU1NMKQorCUhN
QUNfQ1RYIGM7CiAJSE1BQ19DVFhfaW5pdCgmYyk7CisjZW5kaWYKIAogI2lmZGVmIENBTExfUFJF
TElOSwogCWlmIChhY2Nlc3MoUEFUSF9QUkVMSU5LLCBYX09LKSA9PSAwKSB7CkBAIC0xOTcsMTUg
KzI1MSwzOSBAQAogCQlnb3RvIGVuZDsKIAl9CiAKKyNpZiBkZWZpbmVkKFdJVEhfT1BFTlNTTCkK
IAlITUFDX0luaXQoJmMsIGhtYWNrZXksIHNpemVvZihobWFja2V5KS0xLCBFVlBfc2hhMjU2KCkp
OworI2VsaWYgZGVmaW5lZChXSVRIX05TUykKKwllcnJubyA9IDA7IGRlYnVnX2xvZygiQ29tcHV0
aW5nIEhNQUMgb2YgJXMiLCBwYXRoKTsKKwljb25zdCBTRUNIYXNoT2JqZWN0ICpoYXNoID0gSEFT
SF9HZXRIYXNoT2JqZWN0KEhBU0hfQWxnU0hBMjU2KTsKKwlpZiAoaGFzaCA9PSBOVUxMKSB7CisJ
CWVycm5vID0gMDsgZGVidWdfbG9nKCJIQVNIX0dldEhhc2hPYmplY3QoSEFTSF9BbGdTSEEyNTYp
IGZhaWxlZCIpOworCQlnb3RvIGVuZDsKKwl9CisJSE1BQ0NvbnRleHQgKmMgPSBITUFDX0NyZWF0
ZShoYXNoLCBobWFja2V5LCBzaXplb2YoaG1hY2tleSkgLSAxLAorCQkJCSAgICAgZm9yY2VfZmlw
cyA/IFBSX1RSVUUgOiBQUl9GQUxTRSk7CisJaWYgKGMgPT0gTlVMTCkgeworCQllcnJubyA9IDA7
IGRlYnVnX2xvZygiSE1BQ19DcmVhdGUoKSBmYWlsZWQiKTsKKwkJZ290byBlbmQ7CisJfQorCUhN
QUNfQmVnaW4oYyk7CisjZW5kaWYKIAogCXdoaWxlICgobGVuPWZyZWFkKHJidWYsIDEsIHNpemVv
ZihyYnVmKSwgZikpICE9IDApIHsKKyNpZiBkZWZpbmVkKFdJVEhfT1BFTlNTTCkKIAkJSE1BQ19V
cGRhdGUoJmMsIHJidWYsIGxlbik7CisjZWxpZiBkZWZpbmVkKFdJVEhfTlNTKQorCQlITUFDX1Vw
ZGF0ZShjLCByYnVmLCBsZW4pOworI2VuZGlmCiAJfQogCiAJbGVuID0gc2l6ZW9mKHJidWYpOwog
CS8qIHJldXNlIHJidWYgZm9yIGhtYWMgKi8KKyNpZiBkZWZpbmVkKFdJVEhfT1BFTlNTTCkKIAlI
TUFDX0ZpbmFsKCZjLCByYnVmLCAmaGxlbik7CisjZWxpZiBkZWZpbmVkKFdJVEhfTlNTKQorCUhN
QUNfRmluaXNoKGMsIHJidWYsICZobGVuLCBzaXplb2YocmJ1ZikgLSAxKTsKKyNlbmRpZgogCiAJ
KmJ1ZiA9IG1hbGxvYyhobGVuKTsKIAlpZiAoKmJ1ZiA9PSBOVUxMKSB7CkBAIC0yMTksNyArMjk3
LDE0IEBACiAKIAlydiA9IDA7CiBlbmQ6CisKKyNpZiBkZWZpbmVkKFdJVEhfT1BFTlNTTCkKIAlI
TUFDX0NUWF9jbGVhbnVwKCZjKTsKKyNlbGlmIGRlZmluZWQoV0lUSF9OU1MpCisJaWYgKGMgIT0g
TlVMTCkgeworCQlITUFDX0Rlc3Ryb3koYywgUFJfVFJVRSk7CisJfQorI2VuZGlmCiAKIAlpZiAo
ZikKIAkJZmNsb3NlKGYpOwo=
</data>

          </attachment>
      

    </bug>

</bugzilla>