<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1409175</bug_id>
          
          <creation_ts>2016-12-29 20:40:00 -0500</creation_ts>
          <short_desc>`npm search` always fails with messages about Mark-sweep, allocation failure</short_desc>
          <delta_ts>2016-12-29 21:04:05 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>npm</component>
          <version>25</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>CANTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Andrew Toskin">andrew</reporter>
          <assigned_to name="NodeJS Packaging SIG">nodejs-sig</assigned_to>
          <cc>jamielinux</cc>
    
    
    <cc>nodejs-sig</cc>
    
    
    <cc>tchollingsworth</cc>
    
    
    <cc>zsvetlik</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in></cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-12-29 21:04:05</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10024715</commentid>
    <comment_count>0</comment_count>
    <who name="Andrew Toskin">andrew</who>
    <bug_when>2016-12-29 20:40:13 -0500</bug_when>
    <thetext>I&apos;m using NodeJS 6.9.2 and npm 3.10.9 on Fedora 25 Workstation (64-bit). In case this makes any difference, I have configured npm to install global packages to a subdirectory of my home folder, by adding this line to my ~/.npmrc

    prefix = ${HOME}/apps/npm

I am able to install and uninstall global and project-specific packages with no problem. But I cannot *search*...

↪  npm search coffee

[..................] - : verb config Skipping project config: /home/terrycloth/.npmrc. (matches userconfig)
&lt;--- Last few GCs ---&gt;

   45931 ms: Mark-sweep 1107.0 (1434.7) -&gt; 1107.0 (1434.7) MB, 2973.5 / 0.0 ms [allocation failure] [GC in old space requested].
   48846 ms: Mark-sweep 1107.0 (1434.7) -&gt; 1107.0 (1434.7) MB, 2914.7 / 0.0 ms [allocation failure] [GC in old space requested].
   51659 ms: Mark-sweep 1107.0 (1434.7) -&gt; 1116.0 (1414.7) MB, 2812.1 / 0.0 ms [last resort gc].
   54254 ms: Mark-sweep 1116.0 (1414.7) -&gt; 1125.1 (1414.7) MB, 2594.3 / 0.0 ms [last resort gc].


&lt;--- JS stacktrace ---&gt;

==== JS stack trace =========================================

Security context: 0x1aa8b13cfb51 &lt;JS Object&gt;
    1: parse [native json.js:~61] [pc=0x15f6283d36a1] (this=0x1aa8b13c9111 &lt;a JSON with map 0x272e4750a0e1&gt;,C=0x36ebb2604201 &lt;Very long string[244889155]&gt;,w=0x1aa8b1304381 &lt;undefined&gt;)
    2: arguments adaptor frame: 1-&gt;2
    3: /* anonymous */(aka /* anonymous */) [/usr/lib/node_modules/npm/lib/utils/parse-json.js:3] [pc=0x15f628410f18] (this=0x1aa8b1304381 &lt;undefined&gt;,content=0x27a611304701 &lt;...

FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
 1: node::Abort() [npm]
 2: 0xddcece [npm]
 3: v8::Utils::ReportApiFailure(char const*, char const*) [npm]
 4: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [npm]
 5: v8::internal::Factory::NewRawOneByteString(int, v8::internal::PretenureFlag) [npm]
 6: v8::internal::Handle&lt;v8::internal::String&gt; v8::internal::JsonParser&lt;false&gt;::ScanJsonString&lt;true&gt;() [npm]
 7: v8::internal::JsonParser&lt;false&gt;::ParseJsonValue() [npm]
 8: v8::internal::JsonParser&lt;false&gt;::ParseJsonObject() [npm]
 9: v8::internal::JsonParser&lt;false&gt;::ParseJsonValue() [npm]
10: v8::internal::JsonParser&lt;false&gt;::ParseJsonObject() [npm]
11: v8::internal::JsonParser&lt;false&gt;::ParseJsonValue() [npm]
12: v8::internal::JsonParser&lt;false&gt;::ParseJsonObject() [npm]
13: v8::internal::JsonParser&lt;false&gt;::ParseJsonValue() [npm]
14: v8::internal::JsonParser&lt;false&gt;::ParseJson() [npm]
15: v8::internal::Runtime_ParseJson(int, v8::internal::Object**, v8::internal::Isolate*) [npm]
16: 0x15f6282092a7
fish: “npm search coffee” terminated by signal SIGABRT (Abort)

&lt;exit code 134&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10024726</commentid>
    <comment_count>1</comment_count>
    <who name="Andrew Toskin">andrew</who>
    <bug_when>2016-12-29 21:04:05 -0500</bug_when>
    <thetext>...Hmm, I&apos;d assumed a major problem like this *must* have been either a problem with how Node/NPM are packaged, or how I configured it on my system. However, apparently it&apos;s a design flaw within NPM itself?

https://github.com/npm/npm/issues/12619

Hopefully the NPM team will figure out a solution soon. Suggestions of &quot;trying the search again&quot; or cleaning the npm cache have not worked for me. The only workaround is to do search from &lt;npmjs.com&gt; or one of the community-run search websites.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>