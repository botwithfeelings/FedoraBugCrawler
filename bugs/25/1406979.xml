<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1406979</bug_id>
          
          <creation_ts>2016-12-21 20:23:00 -0500</creation_ts>
          <short_desc>SELinux is preventing qemu-system-x86 from &apos;open&apos; accesses on the file /proc/&lt;pid&gt;/cmdline.</short_desc>
          <delta_ts>2017-05-19 19:02:50 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>selinux-policy</component>
          <version>25</version>
          <rep_platform>x86_64</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>abrt_hash:76d51377e35efbcadbf304aaedde8b03094b1b1a1a62a2b8a48d66f074603333;VARIANT_ID=workstation;</status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Cole Robinson">crobinso</reporter>
          <assigned_to name="Lukas Vrabec">lvrabec</assigned_to>
          <cc>dominick.grift</cc>
    
    
    <cc>dwalsh</cc>
    
    
    <cc>libvirt-maint</cc>
    
    
    <cc>lvrabec</cc>
    
    
    <cc>mgrepl</cc>
    
    
    <cc>mprivozn</cc>
    
    
    <cc>plautrba</cc>
    
    
    <cc>pmoore</cc>
    
    
    <cc>ssekidde</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>selinux-policy-3.13.1-225.16.fc25</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-05-19 19:02:50</cf_last_closed>
          <cf_type>---</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10012761</commentid>
    <comment_count>0</comment_count>
    <who name="Cole Robinson">crobinso</who>
    <bug_when>2016-12-21 20:23:14 -0500</bug_when>
    <thetext>Description of problem:
qemu 2.8.0 triggers this on shutdown. Seems to be due to this qemu commit. Not sure how to handle this from selinux perspective in a generic way, since we could be dealing with any label here.


commit fbe7e3327a8cfa1b08664c2cda7a0a341cf0530a
Author: Michal Privoznik &lt;mprivozn@redhat.com&gt;
Date:   Tue Sep 27 17:24:57 2016 +0200

    qemu_kill_report: Report PID name too
    
    When qemu is being killed, its last words are:
    
    2016-08-31T11:48:15.293587Z qemu-system-x86_64: terminating on signal 15 from pid 11180
    
    That&apos;s nice, but what process is 11180? What if I told you we can
    do better:
    
    2016-08-31T11:48:15.293587Z qemu-system-x86_64: terminating on signal 15 from pid 11180 (/usr/sbin/libvirtd)
    
    And that&apos;s exactly what this patch does.
SELinux is preventing qemu-system-x86 from &apos;open&apos; accesses on the file /proc/&lt;pid&gt;/cmdline.

*****  Plugin catchall (100. confidence) suggests   **************************

If you believe that qemu-system-x86 should be allowed open access on the cmdline file by default.
Then you should report this as a bug.
You can generate a local policy module to allow this access.
Do
allow this access for now by executing:
# ausearch -c &apos;qemu-system-x86&apos; --raw | audit2allow -M my-qemusystemx86
# semodule -X 300 -i my-qemusystemx86.pp

Additional Information:
Source Context                system_u:system_r:svirt_t:s0:c551,c1023
Target Context                system_u:system_r:virtd_t:s0-s0:c0.c1023
Target Objects                /proc/&lt;pid&gt;/cmdline [ file ]
Source                        qemu-system-x86
Source Path                   qemu-system-x86
Port                          &lt;Unknown&gt;
Host                          (removed)
Source RPM Packages           
Target RPM Packages           
Policy RPM                    selinux-policy-3.13.1-225.3.fc25.noarch
Selinux Enabled               True
Policy Type                   targeted
Enforcing Mode                Permissive
Host Name                     (removed)
Platform                      Linux (removed) 4.8.14-300.fc25.x86_64 #1 SMP Mon
                              Dec 12 16:31:04 UTC 2016 x86_64 x86_64
Alert Count                   1
First Seen                    2016-12-21 20:20:35 EST
Last Seen                     2016-12-21 20:20:35 EST
Local ID                      09ca515e-6b53-41d7-91ba-39de73123948

Raw Audit Messages
type=AVC msg=audit(1482369635.38:965): avc:  denied  { open } for  pid=4805 comm=&quot;qemu-system-x86&quot; path=&quot;/proc/1024/cmdline&quot; dev=&quot;proc&quot; ino=22312 scontext=system_u:system_r:svirt_t:s0:c551,c1023 tcontext=system_u:system_r:virtd_t:s0-s0:c0.c1023 tclass=file permissive=1


Hash: qemu-system-x86,svirt_t,virtd_t,file,open

Version-Release number of selected component:
selinux-policy-3.13.1-225.3.fc25.noarch

Additional info:
reporter:       libreport-2.8.0
hashmarkername: setroubleshoot
kernel:         4.8.14-300.fc25.x86_64
type:           libreport</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10198625</commentid>
    <comment_count>1</comment_count>
    <who name="Cole Robinson">crobinso</who>
    <bug_when>2017-03-01 13:22:21 -0500</bug_when>
    <thetext>Note this happens every time a VM is &apos;destroy&apos;d by libvirt. Doesn&apos;t have any real effect but annoying since it pops up sealert.

CCing Michal who implemented the qemu side of this.

Anyone have an idea to avoid upsetting selinux here?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10198635</commentid>
    <comment_count>2</comment_count>
    <who name="Cole Robinson">crobinso</who>
    <bug_when>2017-03-01 13:24:37 -0500</bug_when>
    <thetext>CCing Michal since he implemented the qemu side of this</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10200594</commentid>
    <comment_count>3</comment_count>
    <who name="Michal Privoznik">mprivozn</who>
    <bug_when>2017-03-02 01:48:38 -0500</bug_when>
    <thetext>(In reply to Cole Robinson from comment #2)
&gt; CCing Michal since he implemented the qemu side of this

Cole, I think selinux policy can be made so that not certain label is allowed to read /proc/$pid/cmdline, but also a binary can be allowed to do the read. For instance qemu-system-x86_64 could read /proc/*/cmdline.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10201309</commentid>
    <comment_count>4</comment_count>
    <who name="Cole Robinson">crobinso</who>
    <bug_when>2017-03-02 05:31:08 -0500</bug_when>
    <thetext>(In reply to Michal Privoznik from comment #3)
&gt; (In reply to Cole Robinson from comment #2)
&gt; &gt; CCing Michal since he implemented the qemu side of this
&gt; 
&gt; Cole, I think selinux policy can be made so that not certain label is
&gt; allowed to read /proc/$pid/cmdline, but also a binary can be allowed to do
&gt; the read. For instance qemu-system-x86_64 could read /proc/*/cmdline.

lvrabec does that sound doable here?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10402098</commentid>
    <comment_count>5</comment_count>
    <who name="Cole Robinson">crobinso</who>
    <bug_when>2017-05-10 18:29:24 -0400</bug_when>
    <thetext>ping, can we get a comment here from selinux guys?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10404751</commentid>
    <comment_count>6</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2017-05-11 11:11:00 -0400</bug_when>
    <thetext>Hi, 

SELinux denied this because virt machined was trying to read process information in /proc/&lt;pid&gt;/ directory. If we would like to allow this, we need to allow svirt_t (domain for virt machines) read all libvirtd process information in /proc/&lt;pid&gt;/* . 

I think it&apos;s good to isolate virt machine from host as much as possible. 

We have 2 options here how to fix it. 
1. Allow virt machined read process information of libvirtd process. 
2. Dontaudit this access. SELinux will deny it in future if will be in enforcing mode but there will be no AVC record about this action.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10405602</commentid>
    <comment_count>7</comment_count>
    <who name="Cole Robinson">crobinso</who>
    <bug_when>2017-05-11 15:35:49 -0400</bug_when>
    <thetext>So there&apos;s no path based &apos;allow&apos; rules like Michal suggests in Comment #3? If that exists it sounds like the best option to me

If not, I agree that letting svirt_t open/read any virtd_t files is too much, so I&apos;d go with the dontaudit. It completely kills the qemu debugging feature though so it would be ideal to find a better solution</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10407258</commentid>
    <comment_count>8</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2017-05-12 07:29:27 -0400</bug_when>
    <thetext>Cole, 

Unfortunately, I cannot create allow rules which just allow reading /proc/&lt;pid&gt;/cmdline because all files in /proc/&lt;pid&gt;/ has same label. e.g.: 

$ ls -Z 
system_u:system_r:virtd_t:s0-s0:c0.c1023 attr
system_u:system_r:virtd_t:s0-s0:c0.c1023 autogroup
system_u:system_r:virtd_t:s0-s0:c0.c1023 auxv
system_u:system_r:virtd_t:s0-s0:c0.c1023 cgroup
system_u:system_r:virtd_t:s0-s0:c0.c1023 clear_refs
system_u:system_r:virtd_t:s0-s0:c0.c1023 cmdline
system_u:system_r:virtd_t:s0-s0:c0.c1023 comm
system_u:system_r:virtd_t:s0-s0:c0.c1023 coredump_filter
system_u:system_r:virtd_t:s0-s0:c0.c1023 cpuset
system_u:system_r:virtd_t:s0-s0:c0.c1023 cwd
system_u:system_r:virtd_t:s0-s0:c0.c1023 environ
system_u:system_r:virtd_t:s0-s0:c0.c1023 exe
system_u:system_r:virtd_t:s0-s0:c0.c1023 fd
system_u:system_r:virtd_t:s0-s0:c0.c1023 fdinfo
system_u:system_r:virtd_t:s0-s0:c0.c1023 gid_map
system_u:system_r:virtd_t:s0-s0:c0.c1023 io
system_u:system_r:virtd_t:s0-s0:c0.c1023 latency
system_u:system_r:virtd_t:s0-s0:c0.c1023 limits
system_u:system_r:virtd_t:s0-s0:c0.c1023 loginuid
system_u:system_r:virtd_t:s0-s0:c0.c1023 map_files
system_u:system_r:virtd_t:s0-s0:c0.c1023 maps
system_u:system_r:virtd_t:s0-s0:c0.c1023 mem
system_u:system_r:virtd_t:s0-s0:c0.c1023 mountinfo
system_u:system_r:virtd_t:s0-s0:c0.c1023 mounts
system_u:system_r:virtd_t:s0-s0:c0.c1023 mountstats
system_u:system_r:virtd_t:s0-s0:c0.c1023 net
system_u:system_r:virtd_t:s0-s0:c0.c1023 ns
system_u:system_r:virtd_t:s0-s0:c0.c1023 numa_maps
system_u:system_r:virtd_t:s0-s0:c0.c1023 oom_adj
system_u:system_r:virtd_t:s0-s0:c0.c1023 oom_score
system_u:system_r:virtd_t:s0-s0:c0.c1023 oom_score_adj
system_u:system_r:virtd_t:s0-s0:c0.c1023 pagemap
system_u:system_r:virtd_t:s0-s0:c0.c1023 personality
system_u:system_r:virtd_t:s0-s0:c0.c1023 projid_map
system_u:system_r:virtd_t:s0-s0:c0.c1023 root
system_u:system_r:virtd_t:s0-s0:c0.c1023 sched
system_u:system_r:virtd_t:s0-s0:c0.c1023 schedstat
system_u:system_r:virtd_t:s0-s0:c0.c1023 sessionid
system_u:system_r:virtd_t:s0-s0:c0.c1023 setgroups
system_u:system_r:virtd_t:s0-s0:c0.c1023 smaps
system_u:system_r:virtd_t:s0-s0:c0.c1023 stack
system_u:system_r:virtd_t:s0-s0:c0.c1023 stat
system_u:system_r:virtd_t:s0-s0:c0.c1023 statm
system_u:system_r:virtd_t:s0-s0:c0.c1023 status
system_u:system_r:virtd_t:s0-s0:c0.c1023 syscall
system_u:system_r:virtd_t:s0-s0:c0.c1023 task
system_u:system_r:virtd_t:s0-s0:c0.c1023 timers
system_u:system_r:virtd_t:s0-s0:c0.c1023 timerslack_ns
system_u:system_r:virtd_t:s0-s0:c0.c1023 uid_map
system_u:system_r:virtd_t:s0-s0:c0.c1023 wchan

We need to have different label for:
system_u:system_r:virtd_t:s0-s0:c0.c1023 cmdline

I&apos;m for dontauditing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10414539</commentid>
    <comment_count>9</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-05-15 17:18:51 -0400</bug_when>
    <thetext>selinux-policy-3.13.1-225.16.fc25 has been submitted as an update to Fedora 25. https://bodhi.fedoraproject.org/updates/FEDORA-2017-9a20533d62</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10418897</commentid>
    <comment_count>10</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-05-16 21:08:13 -0400</bug_when>
    <thetext>selinux-policy-3.13.1-225.16.fc25 has been pushed to the Fedora 25 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2017-9a20533d62</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10430408</commentid>
    <comment_count>11</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-05-19 19:02:50 -0400</bug_when>
    <thetext>selinux-policy-3.13.1-225.16.fc25 has been pushed to the Fedora 25 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>