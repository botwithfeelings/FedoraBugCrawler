<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1434420</bug_id>
          
          <creation_ts>2017-03-21 09:22:00 -0400</creation_ts>
          <short_desc>Session renegotiation fails with client certificates</short_desc>
          <delta_ts>2017-04-19 19:20:18 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>gnutls</component>
          <version>25</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Frantisek Sumsal">fsumsal</reporter>
          <assigned_to name="Nikos Mavrogiannopoulos">nmavrogi</assigned_to>
          <cc>nmavrogi</cc>
    
    
    <cc>qe-baseos-security</cc>
    
    
    <cc>szidek</cc>
    
    
    <cc>tmraz</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>gnutls-3.5.11-1.fc25</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          <cf_clone_of>1434091</cf_clone_of>
          <cf_environment></cf_environment>
          <cf_last_closed>2017-04-19 19:20:18</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10261017</commentid>
    <comment_count>0</comment_count>
    <who name="Frantisek Sumsal">fsumsal</who>
    <bug_when>2017-03-21 09:22:53 -0400</bug_when>
    <thetext>The same scenario below is applicable to GnuTLS packages in Fedora 25 (gnutls-3.5.10-1.fc25), 26 (gnutls-3.5.10-1.fc26) and rawhide (gnutls-3.5.10-1.fc27).

+++ This bug was initially created as a clone of Bug #1434091 +++

Description of problem:
When OpenSSL acts as a server and client certificates are used, session renegotiation ends with an unexpected error.

Version-Release number of selected component (if applicable):
openssl-1.0.2k-4.el7.x86_64

How reproducible:
always

Steps to Reproduce:
See attached reproducer.

Actual results:
## Full log can be found in the attachments
# openssl s_server -www -key server.key -cert server.pem -CAfile ca.pem -Verify 1 -verify_return_error &gt;server.log 2&gt;server.err &amp;
# sleep 2
# gnutls-cli --rehandshake --x509cafile ca.pem --x509keyfile client.key --x509certfile client.pem --port 4433 -d 500 localhost &lt; /dev/null
&lt;...TRUNCATED...&gt;
|&lt;4&gt;| HSK[0x1f93210]: FINISHED (20) was received. Length 12[12], frag offset 0, frag length: 12, sequence: 0
|&lt;5&gt;| REC[0x1f93210]: Start of epoch cleanup
|&lt;5&gt;| REC[0x1f93210]: Epoch #0 freed
|&lt;5&gt;| REC[0x1f93210]: End of epoch cleanup
- Description: (TLS1.2)-(ECDHE-RSA-SECP256R1)-(AES-128-GCM)
- Session ID: 3C:D3:86:B4:28:FD:4A:46:F0:73:A1:87:9C:53:BF:CA:A9:96:D9:26:58:31:A2:B8:97:11:9B:35:36:31:5E:2E
|&lt;3&gt;| ASSERT: server_name.c:292
- Ephemeral EC Diffie-Hellman parameters
 - Using curve: SECP256R1
 - Curve size: 256 bits
- Version: TLS1.2
- Key Exchange: ECDHE-RSA
- Server Signature: RSA-SHA256
- Client Signature: RSA-SHA512
- Cipher: AES-128-GCM
- MAC: AEAD
- Compression: NULL
|&lt;3&gt;| ASSERT: status_request.c:382
- Options: safe renegotiation,
|&lt;3&gt;| ASSERT: srtp.c:317
|&lt;3&gt;| ASSERT: alpn.c:222
- Handshake was completed

- Simple Client Mode:

|&lt;3&gt;| ASSERT: gnutls_constate.c:586
|&lt;5&gt;| REC[0x1f93210]: Allocating epoch #2
&lt;..TRUNCATED...&gt;
|&lt;5&gt;| REC[0x1f93210]: Preparing Packet ChangeCipherSpec(20) with length: 1 and min pad: 0
|&lt;9&gt;| ENC[0x1f93210]: cipher: AES-128-GCM, MAC: AEAD, Epoch: 1
|&lt;11&gt;| WRITE: enqueued 30 bytes for 0x4. Total 1123 bytes.
|&lt;5&gt;| REC[0x1f93210]: Sent Packet[6] ChangeCipherSpec(20) in epoch 1 and length: 30
|&lt;11&gt;| HWRITE: wrote 1 bytes, 16 bytes left.
|&lt;5&gt;| REC[0x1f93210]: Preparing Packet Handshake(22) with length: 16 and min pad: 0
|&lt;9&gt;| ENC[0x1f93210]: cipher: AES-128-GCM, MAC: AEAD, Epoch: 2
|&lt;11&gt;| WRITE: enqueued 45 bytes for 0x4. Total 1168 bytes.
|&lt;5&gt;| REC[0x1f93210]: Sent Packet[1] Handshake(22) in epoch 2 and length: 45
|&lt;11&gt;| HWRITE: wrote 1 bytes, 0 bytes left.
|&lt;11&gt;| WRITE FLUSH: 1168 bytes in buffer.
|&lt;11&gt;| WRITE: wrote 1168 bytes, 0 bytes left.
|&lt;3&gt;| ASSERT: gnutls_buffers.c:1138
|&lt;10&gt;| READ: Got 5 bytes from 0x4
|&lt;10&gt;| READ: read 5 bytes from 0x4
|&lt;10&gt;| RB: Have 0 bytes into buffer. Adding 5 bytes.
|&lt;10&gt;| RB: Requested 5 bytes
|&lt;5&gt;| REC[0x1f93210]: SSL 3.3 Alert packet received. Epoch 0, length: 26
|&lt;5&gt;| REC[0x1f93210]: Expected Packet Handshake(22)
|&lt;5&gt;| REC[0x1f93210]: Received Packet Alert(21) with length: 26
|&lt;10&gt;| READ: Got 26 bytes from 0x4
|&lt;10&gt;| READ: read 26 bytes from 0x4
|&lt;10&gt;| RB: Have 5 bytes into buffer. Adding 26 bytes.
|&lt;10&gt;| RB: Requested 31 bytes
|&lt;5&gt;| REC[0x1f93210]: Decrypted Packet[5] Alert(21) with length: 2
|&lt;5&gt;| REC[0x1f93210]: Alert[2|10] - Unexpected message - was received
|&lt;3&gt;| ASSERT: gnutls_record.c:800
|&lt;3&gt;| ASSERT: gnutls_record.c:807
|&lt;3&gt;| ASSERT: gnutls_record.c:1327
|&lt;3&gt;| ASSERT: gnutls_buffers.c:1392
|&lt;3&gt;| ASSERT: gnutls_handshake.c:1428
|&lt;3&gt;| ASSERT: session_ticket.c:663
|&lt;3&gt;| ASSERT: gnutls_handshake.c:2846
*** Fatal error: A TLS fatal alert has been received.
*** Received alert [10]: Unexpected message
|&lt;5&gt;| REC: Sending Alert[2|80] - Internal error
&lt;...TRUNCATED...&gt;

# cat server.err
verify depth is 1, must return a certificate
depth=1 CN = CA
verify return:1
depth=0 CN = client
verify return:1
139873875388320:error:1408E0F4:SSL routines:ssl3_get_message:unexpected message:s3_both.c:408:

Expected results:
Renegotiation should not fail (which currently happens only when OpenSSL acts as a client).

--- Additional comment from Nikos Mavrogiannopoulos on 2017-03-21 09:27:23 CET ---

Adding the -state to the server, it gives the following output:

verify depth is 1, must return a certificate
SSL_accept:before/accept initialization
SSL_accept:SSLv3 read client hello A
SSL_accept:SSLv3 write server hello A
SSL_accept:SSLv3 write certificate A
SSL_accept:SSLv3 write key exchange A
SSL_accept:SSLv3 write certificate request A
SSL_accept:SSLv3 flush data
depth=1 CN = CA
verify return:1
depth=0 CN = client
verify return:1
SSL_accept:SSLv3 read client certificate A
SSL_accept:SSLv3 read client key exchange A
SSL_accept:SSLv3 read certificate verify A
SSL_accept:SSLv3 read finished A
SSL_accept:SSLv3 write session ticket A
SSL_accept:SSLv3 write change cipher spec A
SSL_accept:SSLv3 write finished A
SSL_accept:SSLv3 flush data
SSL_accept:before accept initialization
SSL_accept:SSLv3 read client hello A
SSL_accept:SSLv3 write server hello A
SSL_accept:SSLv3 write certificate A
SSL_accept:SSLv3 write key exchange A
SSL_accept:SSLv3 write server done A
SSL_accept:SSLv3 flush data
SSL_accept:SSLv3 read client certificate A
SSL3 alert write:fatal:unexpected_message
SSL_accept:error in SSLv3 read client key exchange A
139897927280504:error:1408E0F4:SSL routines:ssl3_get_message:unexpected message:s3_both.c:408:

So it seems that gnutls sends a client certificate in a renegotiation, even if it was not requested (no certificate request was sent). I guess that&apos;s an issue on gnutls rather than openssl.

--- Additional comment from Frantisek Sumsal on 2017-03-21 11:37:53 CET ---

Thank you, Nikos, I wasn&apos;t sure which side is to blame here as I couldn&apos;t reproduce this with NSS server - that was actually caused by a typo on my side. Regarding the new results, the issue indeed seems to be in GnuTLS:

## Server and client settings
# /usr/lib64/nss/unsupported-tools/selfserv -v -rr -d sql:./nssdb -p 4433 -V tls1.0: -S server
# gnutls-cli --rehandshake --x509cafile ca.pem --x509keyfile client.key --x509certfile client.pem --port 4433 -d 500 localhost

## NSS logs
selfserv: About to call accept.

selfserv: About to call accept.
selfserv: -- SSL3: Certificate Invalid, err -8172.
Peer&apos;s certificate issuer has been marked as not trusted by the user.
selfserv: HDX PR_Read returned error -8172:
Peer&apos;s certificate issuer has been marked as not trusted by the user.

However, when selfserv is started with -rr and -rrrr arguments (request and require a client certificate on initial (-rr) and second (-rrrr) handshake) the handshake is completed successfully.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10261133</commentid>
    <comment_count>1</comment_count>
    <who name="Nikos Mavrogiannopoulos">nmavrogi</who>
    <bug_when>2017-03-21 09:37:38 -0400</bug_when>
    <thetext>https://gitlab.com/gnutls/gnutls/merge_requests/320</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10315741</commentid>
    <comment_count>2</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-04-07 17:13:32 -0400</bug_when>
    <thetext>gnutls-3.5.11-1.fc25 has been submitted as an update to Fedora 25. https://bodhi.fedoraproject.org/updates/FEDORA-2017-b19d9e3c3d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10316891</commentid>
    <comment_count>3</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-04-09 00:24:03 -0400</bug_when>
    <thetext>gnutls-3.5.11-1.fc25 has been pushed to the Fedora 25 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2017-b19d9e3c3d</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10347638</commentid>
    <comment_count>4</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-04-19 19:20:18 -0400</bug_when>
    <thetext>gnutls-3.5.11-1.fc25 has been pushed to the Fedora 25 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>