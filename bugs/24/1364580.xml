<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1364580</bug_id>
          
          <creation_ts>2016-08-05 15:58:00 -0400</creation_ts>
          <short_desc>wxGTK3 warnings &quot;flooding&quot; the terminal</short_desc>
          <delta_ts>2017-04-08 18:19:11 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>wxGTK3</component>
          <version>24</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>CURRENTRELEASE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="markusN">neteler</reporter>
          <assigned_to name="Scott Talbert">swt</assigned_to>
          <cc>alexjnewt</cc>
    
    
    <cc>swt</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in></cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-04-08 18:19:11</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9589894</commentid>
    <comment_count>0</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-08-05 15:58:21 -0400</bug_when>
    <thetext>After updating to F24, I get lots of such issues with wxPython-3.0.2.0-10.fc24.x86_64 in GRASS GIS 7.

(an upstream report is at https://trac.osgeo.org/grass/ticket/3117; they suggested to report here)


At startup of a wx window (graphical output): tons of these warnings appear:

(main.py:6274): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size &gt;= 0&apos; failed in GtkCheckButton
...


When doing wx window resize: many of these warnings are printed:

(main.py:6274): Gtk-WARNING **: Allocating size to wxPizza 0x558b2ed9d9a0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?

This pollutes the terminal a lot...

Version-Release number of selected component (if applicable):
wxPython-3.0.2.0-10.fc24.x86_64

I have self-compiled GRASS GIS as I do for decades :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9590305</commentid>
    <comment_count>1</comment_count>
    <who name="Scott Talbert">swt</who>
    <bug_when>2016-08-05 21:25:54 -0400</bug_when>
    <thetext>Is there a way to run that &quot;d.mon wx0&quot; command more directly?  I would like to run it under GDB but it seems like it&apos;s a separate process that gets started.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9590398</commentid>
    <comment_count>2</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-08-06 03:37:49 -0400</bug_when>
    <thetext>Using 
ps -aef | grep grass

you will see one process &quot;...gui/wxpython/mapdisp/main.py...&quot; running to which
GDB could be attached? 

(If that doesn&apos;t work I&apos;ll check with the GRASS devs who wrote this command)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9590402</commentid>
    <comment_count>3</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-08-06 03:44:01 -0400</bug_when>
    <thetext>I just noted that starting &quot;g.gui.mapswipe&quot; (a Python script, looks like this [1]) also leads to these Gtk-CRITICAL messages.

[1] https://grass.osgeo.org/grass72/manuals/g.gui.mapswipe.html</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9590865</commentid>
    <comment_count>4</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-08-06 18:01:23 -0400</bug_when>
    <thetext>(In reply to Scott Talbert from comment #1)
&gt; Is there a way to run that &quot;d.mon wx0&quot; command more directly?  I would like
&gt; to run it under GDB but it seems like it&apos;s a separate process that gets
&gt; started.

Would this help?

# needed to generate a PID
d.mon wx0

# one line:
python `g.gisenv GISBASE`/gui/wxpython/mapdisp/main.py wx0 `g.gisenv GISDBASE,LOCATION_NAME,MAPSET sep=/`/.tmp/$HOSTNAME/MONITORS/wx0 640 480 0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9688521</commentid>
    <comment_count>5</comment_count>
    <who name="Scott Talbert">swt</who>
    <bug_when>2016-09-07 19:10:51 -0400</bug_when>
    <thetext>(In reply to markusN from comment #0)
&gt; At startup of a wx window (graphical output): tons of these warnings appear:
&gt; 
&gt; (main.py:6274): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size
&gt; &gt;= 0&apos; failed in GtkCheckButton

This error can be avoided by making the window wider, e.g.:
d.mon wx0 width=700

It is complaining that there isn&apos;t enough space for the checkbox.

I&apos;m not sure yet about the wxPizza errors.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9708831</commentid>
    <comment_count>6</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-09-14 17:03:04 -0400</bug_when>
    <thetext>(In reply to Scott Talbert from comment #5)
&gt; (In reply to markusN from comment #0)
&gt; &gt; At startup of a wx window (graphical output): tons of these warnings appear:
&gt; &gt; 
&gt; &gt; (main.py:6274): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size
&gt; &gt; &gt;= 0&apos; failed in GtkCheckButton
&gt; 
&gt; This error can be avoided by making the window wider, e.g.:
&gt; d.mon wx0 width=700

Thanks for the hint, fixed in GRASS GIS trunk, 7.2.svn (for 7.2.0) and 7.0.svn (for 7.0.5).

&gt; It is complaining that there isn&apos;t enough space for the checkbox.
&gt; 
&gt; I&apos;m not sure yet about the wxPizza errors.

... also flooding the terminal...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9890472</commentid>
    <comment_count>7</comment_count>
    <who name="Scott Talbert">swt</who>
    <bug_when>2016-11-14 20:20:08 -0500</bug_when>
    <thetext>I think the wxPizza errors might have been fixed by one of the patches in wxGTK3-3.0.2-29.  At least I can&apos;t reproduce them any more.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9901498</commentid>
    <comment_count>8</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-11-17 16:49:17 -0500</bug_when>
    <thetext>GRASS 7.2.svn (nc_climate_spm_2000_2012):~ &gt; d.mon wx0
GRASS 7.2.svn (nc_climate_spm_2000_2012):~ &gt; 

# enlarging the window
GRASS 7.2.svn (nc_climate_spm_2000_2012):~ &gt; 
(main.py:2407): Gtk-WARNING **: Allocating size to wxPizza 0x55b09a36f9d0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?

(main.py:2407): Gtk-WARNING **: Allocating size to wxPizza 0x55b09a36f9d0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?

(main.py:2407): Gtk-WARNING **: Allocating size to wxPizza 0x55b09a36f9d0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?

(main.py:2407): Gtk-WARNING **: Allocating size to wxPizza 0x55b09a36f9d0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?

(main.py:2407): Gtk-WARNING **: Allocating size to wxPizza 0x55b09a36f9d0 without calling gtk_widget_get_preferred_width/height(). How does the code know the size to allocate?

The package is wxGTK3-3.0.2-26.fc24.x86_64 - where would I get wxGTK3-3.0.2-29? Thanks!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9901527</commentid>
    <comment_count>9</comment_count>
    <who name="Scott Talbert">swt</who>
    <bug_when>2016-11-17 17:05:51 -0500</bug_when>
    <thetext>(In reply to markusN from comment #8)
&gt; The package is wxGTK3-3.0.2-26.fc24.x86_64 - where would I get
&gt; wxGTK3-3.0.2-29? Thanks!

It&apos;s in updates-testing:

wxGTK3-3.0.2-29.fc24 has been pushed to the Fedora 24 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-da57f5c618</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9905281</commentid>
    <comment_count>10</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-11-19 05:23:08 -0500</bug_when>
    <thetext>Great, the &quot;wxPizza&quot; msg is gone with that update.

Still I get these two messages:

GRASS 7.2.svn (nc_spm_08_grass7):~ &gt; g.gui
Launching &lt;wxpython&gt; GUI in the background, please wait...
GRASS 7.2.svn (nc_spm_08_grass7):~ &gt; 11:18:10 AM: Debug: Failed to connect to session manager: SESSION_MANAGER environment variable not defined
(wxgui.py:11292): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size &gt;= 0&apos; failed in GtkScrollbar


For the former msg, I found
http://trac.wxwidgets.org/ticket/16024

The latter is probably here:
http://trac.wxwidgets.org/ticket/17585
https://bugzilla.gnome.org/show_bug.cgi?id=754976

I also found some patch here (dunno if to be implemented in GRASS GIS like that):
https://sourceforge.net/p/scintilla/code/ci/63f89102ae1608777ddb9a22d1d644af7c9320db/

Should I anyway leave positive feedback in https://bodhi.fedoraproject.org/updates/FEDORA-2016-da57f5c618 ?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9931192</commentid>
    <comment_count>11</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-11-26 09:30:44 -0500</bug_when>
    <thetext>Unfortunately a new problem occurred (happens in GRASS GIS):

(wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

(wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

(wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

(wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

(wxgui.py:20719): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size &gt;= 0&apos; failed in GtkSpinButton

(wxgui.py:20719): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size &gt;= 0&apos; failed in GtkSpinButton

(wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

The upper one even hammers the CPU... I am using
wxGTK3-3.0.2-29.fc24.x86_64

It was earlier also reported here in Bug 1304681</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9931343</commentid>
    <comment_count>12</comment_count>
    <who name="Scott Talbert">swt</who>
    <bug_when>2016-11-26 12:39:24 -0500</bug_when>
    <thetext>(In reply to markusN from comment #11)
&gt; Unfortunately a new problem occurred (happens in GRASS GIS):
&gt; 
&gt; (wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously
&gt; requested, giving up after 4 tries
&gt; 
&gt; (wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously
&gt; requested, giving up after 4 tries
&gt; 
&gt; (wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously
&gt; requested, giving up after 4 tries
&gt; 
&gt; (wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously
&gt; requested, giving up after 4 tries
&gt; 
&gt; (wxgui.py:20719): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion
&gt; &apos;size &gt;= 0&apos; failed in GtkSpinButton
&gt; 
&gt; (wxgui.py:20719): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion
&gt; &apos;size &gt;= 0&apos; failed in GtkSpinButton
&gt; 
&gt; (wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously
&gt; requested, giving up after 4 tries
&gt; 
&gt; The upper one even hammers the CPU... I am using
&gt; wxGTK3-3.0.2-29.fc24.x86_64
&gt; 
&gt; It was earlier also reported here in Bug 1304681

How do you reproduce this in GRASS?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9931350</commentid>
    <comment_count>13</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-11-26 12:51:37 -0500</bug_when>
    <thetext>You can reproduce it like this (here via &quot;shortcut&quot; to user interface for easy reproduction):

GRASS 7.2.0svn (nc_spm_08_grass7):~ &gt; d.vect --ui

(forms.py:20410): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size &gt;= 0&apos; failed in GtkCheckButton

(forms.py:20410): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size &gt;= 0&apos; failed in GtkSpinButton

(forms.py:20410): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size &gt;= 0&apos; failed in GtkSpinButton

(forms.py:20410): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

(forms.py:20410): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

(forms.py:20410): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

(forms.py:20410): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

(forms.py:20410): Gdk-WARNING **: gdk-frame-clock: layout continuously requested, giving up after 4 tries

[...]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9932212</commentid>
    <comment_count>14</comment_count>
    <who name="Scott Talbert">swt</who>
    <bug_when>2016-11-27 10:26:39 -0500</bug_when>
    <thetext>OK, I can reproduce that.  Is it a regression, or did you just not notice it until now?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9932311</commentid>
    <comment_count>15</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2016-11-27 12:20:11 -0500</bug_when>
    <thetext>It is a new problem which I never got: CPU at 100%

[neteler@oboe ]$ top

top - 18:18:25 up 3 days, 21:55,  2 users,  load average: 0.65, 0.25, 0.13
Tasks: 237 total,   2 running, 235 sleeping,   0 stopped,   0 zombie
%Cpu(s): 35.5 us,  2.5 sy,  0.0 ni, 60.4 id,  1.0 wa,  0.4 hi,  0.2 si,  0.0 st
KiB Mem :  3929956 total,   114448 free,  1821816 used,  1993692 buff/cache
KiB Swap:  3932156 total,  3487340 free,   444816 used.  1583088 avail Mem 

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
 3846 neteler   20   0 1022696 100392  55380 R  99.3  2.6   0:26.44 python
 1131 root      20   0  726276 195008 178732 S  26.9  5.0  60:12.59 Xorg
 3628 neteler   20   0  680488  33468  16884 S  13.3  0.9   4:33.52 xfce4-terminal
 1859 neteler   20   0 10.803g 1.000g 115700 S   3.7 26.7 304:13.13 firefox
 1455 neteler   20   0  491200  12608   9240 S   1.7  0.3   0:58.18 xfwm4
[...]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10050915</commentid>
    <comment_count>16</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2017-01-10 18:10:00 -0500</bug_when>
    <thetext>(In reply to markusN from comment #11)
&gt; Unfortunately a new problem occurred (happens in GRASS GIS):
&gt; 
&gt; (wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously
&gt; requested, giving up after 4 tries
&gt; 
&gt; (wxgui.py:20719): Gdk-WARNING **: gdk-frame-clock: layout continuously
&gt; requested, giving up after 4 tries

[...]

&gt; The upper one even hammers the CPU... I am using
&gt; wxGTK3-3.0.2-29.fc24.x86_64

I just updated to F25 and the CPU issue is gone (i.e. wxGTK3-3.0.2-31.fc25.x86_64). Nice!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10051099</commentid>
    <comment_count>17</comment_count>
    <who name="Scott Talbert">swt</who>
    <bug_when>2017-01-10 19:47:54 -0500</bug_when>
    <thetext>(In reply to markusN from comment #16)
&gt; I just updated to F25 and the CPU issue is gone (i.e.
&gt; wxGTK3-3.0.2-31.fc25.x86_64). Nice!

Great!  Do you think that we can close this ticket, now?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10063574</commentid>
    <comment_count>18</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2017-01-14 12:24:26 -0500</bug_when>
    <thetext>... I spoke to soon: Having done a fresh GRASS GIS 7.2.svn recompile on F25, the standard GUI (g.gui) starts a python process with high CPU usage (d.vect now behaves).

In the terminal I see:

(wxgui.py:802): Gtk-CRITICAL **: gtk_box_gadget_distribute: assertion &apos;size &gt;= 0&apos; failed in GtkScrollbar


strace of the python process shows:

...
recvmsg(3, {msg_namelen=0}, 0)          = -1 EAGAIN (Resource temporarily unavailable)
poll([{fd=3, events=POLLIN|POLLOUT}], 1, -1) = 1 ([{fd=3, revents=POLLOUT}])
writev(3, [{iov_base=&quot;5 \4\0\301K\224\1II\224\1\261\0\27\0\212\4\6\0\302K\224\1\301K\224\1&amp;\0\0\0&quot;..., iov_len=16372}, {iov_base=NULL, iov_len=0}, {iov_base=&quot;&quot;, iov_len=0}], 3) = 16372
recvmsg(3, {msg_namelen=0}, 0)          = -1 EAGAIN (Resource temporarily unavailable)
poll([{fd=3, events=POLLIN|POLLOUT}], 1, -1) = 1 ([{fd=3, revents=POLLOUT}])
writev(3, [{iov_base=&quot;\212\4\6\0~L\224\1}L\224\1&amp;\0\0\0\0\4\0\0\1\0\0\0\212\32\7\0\0\0\0\0&quot;..., iov_len=16380}, {iov_base=NULL, iov_len=0}, {iov_base=&quot;&quot;, iov_len=0}], 3) = 16380
recvmsg(3, {msg_namelen=0}, 0)          = -1 EAGAIN (Resource temporarily unavailable)
poll([{fd=3, events=POLLIN|POLLOUT}], 1, -1) = 1 ([{fd=3, revents=POLLOUT}])
writev(3, [{iov_base=&quot;\212\32\7\0\0L\224\1:M\224\1\0\0\0\0\0\0\0\0\0\0\0\0\261\0\27\0\212\32\7\0&quot;..., iov_len=16384}, {iov_base=NULL, iov_len=0}, {iov_base=&quot;&quot;, iov_len=0}], 3) = 16384
recvmsg(3, {msg_namelen=0}, 0)          = -1 EAGAIN (Resource temporarily unavailable)
poll([{fd=3, events=POLLIN|POLLOUT}], 1, -1) = 1 ([{fd=3, revents=POLLOUT}])
writev(3, [{iov_base=&quot;\212\32\7\0\1L\224\1\366M\224\1\350\350\350\350\347\347\377\377\0\0\0\0\261\0\27\0005\10\4\0&quot;..., iov_len=16384}, {iov_base=NULL, iov_len=0}, {iov_base=&quot;&quot;, iov_len=0}], 3) = 16384
recvmsg(3, {msg_namelen=0}, 0)          = -1 EAGAIN (Resource temporarily unavailable)
poll([{fd=3, events=POLLIN|POLLOUT}], 1, -1) = 1 ([{fd=3, revents=POLLOUT}])
writev(3, [{iov_base=&quot;5\10\4\0\263N\224\1\321G\224\1\261\0\27\0\212\4\6\0\264N\224\1\263N\224\1$\0\0\0&quot;..., iov_len=16372}, {iov_base=NULL, iov_len=0}, {iov_base=&quot;&quot;, iov_len=0}], 3) = 16372
recvmsg(3, {msg_namelen=0}, 0)          = -1 EAGAIN (Resource temporarily unavailable)
poll([{fd=3, events=POLLIN|POLLOUT}], 1, -1) = 1 ([{fd=3, revents=POLLOUT}])
writev(3, [{iov_base=&quot;\212\4\6\0pO\224\1oO\224\1$\0\0\0\0\4\0\0\1\0\0\0\212\32\7\0\0\0\0\0&quot;..., iov_len=16380}, {iov_base=NULL, iov_len=0}, {iov_base=&quot;&quot;, iov_len=0}], 3) = 16380
recvmsg(3, {msg_namelen=0}, 0)          = -1 EAGAIN (Resource temporarily unavailable)
poll([{fd=3, events=POLLIN|POLLOUT}], 1, -1) = 1 ([{fd=3, revents=POLLOUT}])
writev(3, [{iov_base=&quot;\212\32\7\0\0O\224\1,P\224\1\0\0\0\0\0\0\0\0\0\0\0\0\261\0\27\0\212\10\t\0&quot;..., iov_len=16384}, {iov_base=NULL, iov_len=0}, {iov_base=&quot;&quot;, iov_len=0}], 3) = 16384
recvmsg(3, {msg_namelen=0}, 0)          = -1 EAGAIN (Resource temporarily unavailable)
---

Closing the g.gui eliminates this python process.
Note that I was only *opening* the GUI, not even loading a map.

If needed, I made an (S)RPM of GRASS GIS 7.2.0:
https://copr.fedoraproject.org/coprs/neteler/grass72</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10310870</commentid>
    <comment_count>19</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2017-04-06 09:08:45 -0400</bug_when>
    <thetext>(In reply to markusN from comment #18)
&gt; ... I spoke to soon: Having done a fresh GRASS GIS 7.2.svn recompile on F25,
&gt; the standard GUI (g.gui) starts a python process with high CPU usage

... this is still an issue (freshly installed F25 maschine) and rather ruins the performance.
Shall I open a separate ticket for this problem?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10312071</commentid>
    <comment_count>20</comment_count>
    <who name="Scott Talbert">swt</who>
    <bug_when>2017-04-06 15:21:03 -0400</bug_when>
    <thetext>(In reply to markusN from comment #19)
&gt; (In reply to markusN from comment #18)
&gt; &gt; ... I spoke to soon: Having done a fresh GRASS GIS 7.2.svn recompile on F25,
&gt; &gt; the standard GUI (g.gui) starts a python process with high CPU usage
&gt; 
&gt; ... this is still an issue (freshly installed F25 maschine) and rather ruins
&gt; the performance.
&gt; Shall I open a separate ticket for this problem?

Yes, I think we&apos;ve long since digressed from the original problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10316684</commentid>
    <comment_count>21</comment_count>
    <who name="markusN">neteler</who>
    <bug_when>2017-04-08 18:19:11 -0400</bug_when>
    <thetext>ok, opened as bug 1440434, closing this one.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>