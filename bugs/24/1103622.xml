<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1103622</bug_id>
          
          <creation_ts>2014-06-02 04:38:00 -0400</creation_ts>
          <short_desc>sandbox -X is completely broken</short_desc>
          <delta_ts>2016-07-20 03:18:21 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>policycoreutils</component>
          <version>24</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1357115</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Petr Lautrbach">plautrba</reporter>
          <assigned_to name="Petr Lautrbach">plautrba</assigned_to>
          <cc>alphsteiner</cc>
    
    
    <cc>amessina</cc>
    
    
    <cc>aminoiu</cc>
    
    
    <cc>amit.shah</cc>
    
    
    <cc>aph</cc>
    
    
    <cc>bgoncalv</cc>
    
    
    <cc>bugzilla</cc>
    
    
    <cc>cyrusyzgtt</cc>
    
    
    <cc>dimitris</cc>
    
    
    <cc>dominick.grift</cc>
    
    
    <cc>dwalsh</cc>
    
    
    <cc>eparis</cc>
    
    
    <cc>fweimer</cc>
    
    
    <cc>icon</cc>
    
    
    <cc>jfrieben</cc>
    
    
    <cc>jpokorny</cc>
    
    
    <cc>kahlil.hodgson</cc>
    
    
    <cc>luto</cc>
    
    
    <cc>lvrabec</cc>
    
    
    <cc>mcsontos</cc>
    
    
    <cc>mdavis</cc>
    
    
    <cc>mgrepl</cc>
    
    
    <cc>mmalik</cc>
    
    
    <cc>ollieteasley</cc>
    
    
    <cc>pasik</cc>
    
    
    <cc>pcfe</cc>
    
    
    <cc>plautrba</cc>
    
    
    <cc>pmoore</cc>
    
    
    <cc>pvrabec</cc>
    
    
    <cc>rhbz2</cc>
    
    
    <cc>rsawhill</cc>
    
    
    <cc>rz</cc>
    
    
    <cc>sds</cc>
    
    
    <cc>sgrubb</cc>
    
    
    <cc>slukasik</cc>
    
    
    <cc>ssorce</cc>
    
    
    <cc>ttrinks</cc>
    
    
    <cc>wdh</cc>
    
    
    <cc>wtogami</cc>
    
    
    <cc>xtr.xtrnet</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>policycoreutils-2.5-12.fc24</cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-07-19 20:21:03</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>7136789</commentid>
    <comment_count>0</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2014-06-02 04:38:17 -0400</bug_when>
    <thetext>policycoreutils-python-2.3-5.fc21.x86_64
selinux-policy-3.13.1-55.fc21.noarch

command:
$ sandbox -X -t sandbox_web_t firefox 

AVCs in permissive mode:

----
time-&gt;Mon Jun  2 10:33:18 2014
type=UNKNOWN[1327] msg=audit(1401697998.436:562): proctitle=2F7573722F62696E2F586570687972002D726573697A6561626C65002D7469746C650053616E64626F782073616E64626F785F7765625F743A73303A63313030312C6331303232202D2D20202F7573722F62696E2F66697265666F7820002D7465726D696E617465002D73637265656E003130303078373030002D6470690039
type=SYSCALL msg=audit(1401697998.436:562): arch=c000003e syscall=42 success=yes exit=0 a0=0 a1=7fffe29aebd0 a2=14 a3=107 items=0 ppid=2925 pid=2934 auid=1000 uid=1000 gid=1000 euid=1000 suid=1000 fsuid=1000 egid=1000 sgid=1000 fsgid=1000 tty=(none) ses=1 comm=&quot;Xephyr&quot; exe=&quot;/usr/bin/Xephyr&quot; subj=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 key=(null)
type=AVC msg=audit(1401697998.436:562): avc:  denied  { connectto } for  pid=2934 comm=&quot;Xephyr&quot; path=002F746D702F2E5831312D756E69782F5830 scontext=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 tcontext=system_u:system_r:xserver_t:s0-s0:c0.c1023 tclass=unix_stream_socket
----
time-&gt;Mon Jun  2 10:33:19 2014
type=UNKNOWN[1327] msg=audit(1401697999.471:563): proctitle=&quot;/usr/lib64/firefox/firefox&quot;
type=SYSCALL msg=audit(1401697999.471:563): arch=c000003e syscall=2 success=yes exit=28 a0=7fe8f2f59a40 a1=42 a2=180 a3=120 items=0 ppid=2949 pid=2953 auid=1000 uid=1000 gid=1000 euid=1000 suid=1000 fsuid=1000 egid=1000 sgid=1000 fsgid=1000 tty=(none) ses=1 comm=&quot;firefox&quot; exe=&quot;/usr/lib64/firefox/firefox&quot; subj=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 key=(null)
type=AVC msg=audit(1401697999.471:563): avc:  denied  { open } for  pid=2953 comm=&quot;firefox&quot; path=&quot;/run/user/1000/dconf/user&quot; dev=&quot;tmpfs&quot; ino=25427 scontext=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 tcontext=unconfined_u:object_r:config_home_t:s0 tclass=file
----
time-&gt;Mon Jun  2 10:33:19 2014
type=UNKNOWN[1327] msg=audit(1401697999.478:564): proctitle=&quot;/usr/lib64/firefox/firefox&quot;
type=SYSCALL msg=audit(1401697999.478:564): arch=c000003e syscall=42 success=no exit=-115 a0=20 a1=7fe8fab1ba00 a2=1c a3=107 items=0 ppid=2949 pid=2989 auid=1000 uid=1000 gid=1000 euid=1000 suid=1000 fsuid=1000 egid=1000 sgid=1000 fsgid=1000 tty=(none) ses=1 comm=536F636B657420546872656164 exe=&quot;/usr/lib64/firefox/firefox&quot; subj=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 key=(null)
type=AVC msg=audit(1401697999.478:564): avc:  denied  { name_connect } for  pid=2989 comm=536F636B657420546872656164 dest=9050 scontext=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 tcontext=system_u:object_r:tor_port_t:s0 tclass=tcp_socket
----
time-&gt;Mon Jun  2 10:33:20 2014
type=UNKNOWN[1327] msg=audit(1401698000.068:565): proctitle=&quot;/usr/lib64/firefox/firefox&quot;
type=SYSCALL msg=audit(1401698000.068:565): arch=c000003e syscall=42 success=no exit=-115 a0=2e a1=7fe8fab1b9f0 a2=10 a3=0 items=0 ppid=2949 pid=2989 auid=1000 uid=1000 gid=1000 euid=1000 suid=1000 fsuid=1000 egid=1000 sgid=1000 fsgid=1000 tty=(none) ses=1 comm=536F636B657420546872656164 exe=&quot;/usr/lib64/firefox/firefox&quot; subj=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 key=(null)
type=AVC msg=audit(1401698000.068:565): avc:  denied  { name_connect } for  pid=2989 comm=536F636B657420546872656164 dest=443 scontext=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 tcontext=system_u:object_r:http_port_t:s0 tclass=tcp_socket
----
time-&gt;Mon Jun  2 10:33:24 2014
type=UNKNOWN[1327] msg=audit(1401698004.598:566): proctitle=&quot;/usr/libexec/at-spi-bus-launcher&quot;
type=SYSCALL msg=audit(1401698004.598:566): arch=c000003e syscall=42 success=no exit=-111 a0=a a1=2410d10 a2=1c a3=7fff3521ed94 items=0 ppid=1 pid=3018 auid=1000 uid=1000 gid=1000 euid=1000 suid=1000 fsuid=1000 egid=1000 sgid=1000 fsgid=1000 tty=(none) ses=1 comm=&quot;at-spi-bus-laun&quot; exe=&quot;/usr/libexec/at-spi-bus-launcher&quot; subj=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 key=(null)
type=AVC msg=audit(1401698004.598:566): avc:  denied  { name_connect } for  pid=3018 comm=&quot;at-spi-bus-laun&quot; dest=6001 scontext=unconfined_u:unconfined_r:sandbox_web_t:s0:c1001,c1022 tcontext=system_u:object_r:xserver_port_t:s0 tclass=tcp_socket</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7136902</commentid>
    <comment_count>1</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2014-06-02 05:00:41 -0400</bug_when>
    <thetext>Ok we are getting these issues with updated libcap-ng but it works with older libcap-ng version + latest policycoreutils/selinux-policy sandbox fixes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7138859</commentid>
    <comment_count>2</comment_count>
    <who name="Steve Grubb">sgrubb</who>
    <bug_when>2014-06-02 10:21:14 -0400</bug_when>
    <thetext>There were 3 fixes needed. One was libcap-ng needed to set no_new_privs. The next was policycoreutils needed from bug 1091761. That in turn required a selinux policy update.

So, is this bz saying that when a user has all 3 packages updated, we have a problem?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7138867</commentid>
    <comment_count>3</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2014-06-02 10:23:54 -0400</bug_when>
    <thetext>I updated my rawhide this morning and I can&apos;t run sandbox

libcap-ng-0.7.4-3.fc21.x86_64
selinux-policy-3.13.1-55.fc21.noarch
policycoreutils-python-2.3-5.fc21.x86_64</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7139017</commentid>
    <comment_count>4</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2014-06-02 10:59:50 -0400</bug_when>
    <thetext>sandbox works using https://kojipkgs.fedoraproject.org//packages/libcap-ng/0.7.4/2.fc21/x86_64/libcap-ng-0.7.4-2.fc21.x86_64.rpm</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7139036</commentid>
    <comment_count>5</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2014-06-02 11:06:24 -0400</bug_when>
    <thetext>&gt; So, is this bz saying that when a user has all 3 packages updated, we have a
&gt; problem?

Yes. And we are getting AVC msgs which Petr reported.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7139175</commentid>
    <comment_count>6</comment_count>
    <who name="Steve Grubb">sgrubb</who>
    <bug_when>2014-06-02 11:47:09 -0400</bug_when>
    <thetext>Can this be fixed with more work on dynamic transitions like done on bug 1091761? Its pretty clear that because of CVE-2014-3215 we have to set no new privs. I had questioned if no_new_privs really was the right solution or if the kernel needed something different. But if dynamic transitions can fix it, then we should. If this points to endless fixes as each program gets used in the sandbox, then maybe we should revisit the kernel problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7150013</commentid>
    <comment_count>7</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2014-06-05 05:35:05 -0400</bug_when>
    <thetext>Ok, the problem is we end up in sandbox_web_t instead of sandbox_xserver_t for Xephyr.

[{Xephyr}(`unconfined_u:unconfined_r:sandbox_xserver_t:s0:c123,c354&apos;)]

vs.

[{Xephyr}(`unconfined_u:unconfined_r:sandbox_web_t:s0:c123,c354&apos;)]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7150717</commentid>
    <comment_count>8</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2014-06-05 09:11:44 -0400</bug_when>
    <thetext>So the point is we end up with sandbox_web_t at all if we run 

sandbox -X -t sandbox_web_t firefox

and we don&apos;t have transitions to sandbox_web_client, sandbox_xserver_t for Xephyr, openbox ...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7151070</commentid>
    <comment_count>9</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2014-06-05 10:28:46 -0400</bug_when>
    <thetext>Unfortunately I don&apos;t see a way how to fix it in policycoreutils now. Basically we execute the sandboxX.sh helper script which executes Xephyr, openbox. So no way to use dyntrans in this case.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7152089</commentid>
    <comment_count>10</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2014-06-05 15:41:58 -0400</bug_when>
    <thetext>So we really need a way to tell the kernel that we want transitions to continue to happen but nosuid.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7152151</commentid>
    <comment_count>11</comment_count>
    <who name="Paul Moore">pmoore</who>
    <bug_when>2014-06-05 16:09:11 -0400</bug_when>
    <thetext>(In reply to Daniel Walsh from comment #10)
&gt; So we really need a way to tell the kernel that we want transitions to
&gt; continue to happen but nosuid.

Let me try to summarize this for my own understanding ... the sandbox tool recently enabled NNP which broke all of the SELinux domain transitions, yes?  I am a little confused by Dan&apos;s last comment, does the sandbox tool also try to run programs from a nosuid mounted filesystem?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7155205</commentid>
    <comment_count>12</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2014-06-06 12:32:11 -0400</bug_when>
    <thetext>*** Bug 1105652 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7156658</commentid>
    <comment_count>13</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2014-06-08 06:40:27 -0400</bug_when>
    <thetext>*** Bug 1105798 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7160083</commentid>
    <comment_count>14</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2014-06-09 07:30:26 -0400</bug_when>
    <thetext>Paul what you said is correct,  NNP is breaking sandbox domain transitions which is causing 

sandbox_web_t @ xserver_exec_t -&gt; sandbox_xserver_t to not happen.  This means the Xephyr is running in the sandbox_web_t domain, and attempting to connect to the host X Server.  If we allow this, then the sandbox app can watch keystrokes, read cut buffer and screen scrape the host.  Basically breaks the isolation we were after.

We need to allow NNP and SELinux transitions some how.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7161080</commentid>
    <comment_count>15</comment_count>
    <who name="Eric Paris">eparis</who>
    <bug_when>2014-06-09 10:07:51 -0400</bug_when>
    <thetext>Linus was very clear when he implemented NNP.  NNP = No transitions EVER.

You can&apos;t gain or LOSE permissions after NNP.

(remember the sendmail bug was because of lost permissions...)

This will take some thought.  Maybe you&apos;ll want to solve it by having a specific &apos;transition under NNP&apos; security check?  Which might make Linus happy (or he wouldn&apos;t know)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7171362</commentid>
    <comment_count>16</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2014-06-10 18:32:05 -0400</bug_when>
    <thetext>Um.  I implemented NNP, not Linus.  And you can lose permissions.

I just replied to an old off-list thread to see if we can restart this thing.

Alternatively, someone could rewrite seunshare to use user namespaces instead of being setuid.  That would probably reduce the code size by 80%, make it less scary, and fix this issue as a side effect.  Not to mention significantly improving debugability.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7173483</commentid>
    <comment_count>17</comment_count>
    <who name="Eric Paris">eparis</who>
    <bug_when>2014-06-11 08:55:42 -0400</bug_when>
    <thetext>Andy, so sorry, I meant &apos;when he was dictating what he would accept in an implementation&apos;.  You do deserve the credit.

My words:
&quot;My thought on expanding the SELinux support beyond &apos;no
transition&apos; (which I suggest we do today) would be that we might allow
SELinux transitions if we can show the the &apos;child&apos; domain is a subset of
the &apos;parent&apos; domain.&quot;


His words:
&quot;No, you can&apos;t drop capabilities. You&apos;re in a sandbox, the whole point
is that you&apos;re running untrusted code, you had better not *have* any
capabilities that you worry about dropping.&quot;

Maybe he&apos;s changed his mind, but I&apos;m not seeing the wiggle room...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7175094</commentid>
    <comment_count>18</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2014-06-11 14:22:57 -0400</bug_when>
    <thetext>No offense taken.

For what it&apos;s worth, in every kernel that&apos;s supported no_new_privs, there&apos;s nothing that would prevent you from dropping capabilities after setting no_new_privs.  And sandbox (without -X) can successfully drop privs.

So I&apos;m all for making nnp more flexible as long as the important security part doesn&apos;t break, and I&apos;ll happily defend it to Linus if needed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7266075</commentid>
    <comment_count>19</comment_count>
    <who name="Andras Horvath">mail</who>
    <bug_when>2014-07-04 14:18:04 -0400</bug_when>
    <thetext>subscribe</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7381318</commentid>
    <comment_count>20</comment_count>
    <who name="Richard Z.">rz</who>
    <bug_when>2014-08-13 09:04:09 -0400</bug_when>
    <thetext>Same problem in Fedora 19 btw.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7436865</commentid>
    <comment_count>21</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2014-09-01 17:54:06 -0400</bug_when>
    <thetext>The bounded transition under no_new_privs patch is now in selinux-next:

http://git.infradead.org/users/pcmoore/selinux/commit/7b0d0b40cd78cadb525df760ee4cac151533c2b5

If that patch plus a small policy change could fix that, I wouldn&apos;t be surprised if the kernel team would be willing to backport the patch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7450053</commentid>
    <comment_count>22</comment_count>
    <who name="Šimon Lukašík">slukasik</who>
    <bug_when>2014-09-04 14:40:46 -0400</bug_when>
    <thetext>*** Bug 1111109 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7478870</commentid>
    <comment_count>23</comment_count>
    <who name="Matthew Davis">mdavis</who>
    <bug_when>2014-09-14 23:05:50 -0400</bug_when>
    <thetext>Probably no surprise, but still exists in F20 (selinux-policy-3.12.1-182.fc20.noarch / xorg-x11-server-Xephyr-1.14.4-11.fc20.x86_64).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7486787</commentid>
    <comment_count>24</comment_count>
    <who name="Simo Sorce">ssorce</who>
    <bug_when>2014-09-16 12:07:30 -0400</bug_when>
    <thetext>Matthew, so far the only workaround is to downgrade libcap-ng to the one released at F20 GA ... which is less then ideal.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7641072</commentid>
    <comment_count>25</comment_count>
    <who name="dmunk">ollieteasley</who>
    <bug_when>2014-11-04 15:38:21 -0500</bug_when>
    <thetext>Hello,

I am not a developer. Just wanted that out of the way. 

So, what is the plan b? I mean, is it not possible to restrict a &apos;firefox

chome\|browser&apos; to a sandboxed environment? I have seen the sandfox script. However, it would be ideal to have a chrooted, selinux enforced environment to use a browser from. How cool would be to isolate java and flash from anything on the local system in the off chance that some breach comes about?

I almost set up a one off policy going off all the &quot;how-to&quot; documentation floating around for firefox sandboxing. I helpd back once I came across this. Would the patch that Andy Lutomirski posted be the solution?

Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7641079</commentid>
    <comment_count>26</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2014-11-04 15:42:28 -0500</bug_when>
    <thetext>I think that the right solution long term doesn&apos;t involve selinux at all.  I keep meaning to write a little &quot;nsbox&quot; program to create a sandbox using user namespaces and put something in it.  No privilege would be needed, nor would there be any setuid root things, and all of the incomprehensibilities that make the selinux sandbox hard to maintain would be irrelevant.

Of course, you could later selinux on top of that, too, but if it broke, you could turn it off.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7641116</commentid>
    <comment_count>27</comment_count>
    <who name="dmunk">ollieteasley</who>
    <bug_when>2014-11-04 15:59:55 -0500</bug_when>
    <thetext>So, if I am understanding correctly, the below would totally negate the sandbox?

====
module mypol 1.0;

require {
	type sandbox_web_t;
	type http_port_t;
	class tcp_socket name_connect;
}

#============= sandbox_web_t ==============

#!!!! This avc can be allowed using the boolean &apos;nis_enabled&apos;
allow sandbox_web_t http_port_t:tcp_socket name_connect;

====

I am still going through reading https://www.packtpub.com/networking-and-servers/selinux-system-administration. So, I dont have a full grasp of the implications of many of the rules that would be broken when using what is suggested by using line from setroubleshootd.

Thanks for your time.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7681999</commentid>
    <comment_count>28</comment_count>
    <who name="Alphonse Steiner">alphsteiner</who>
    <bug_when>2014-11-18 04:19:16 -0500</bug_when>
    <thetext>Until this bug is fixed, please could you:
 - put &amp; keep libcap-ng 0.7.3-6 in the repository;
 - mark a conflict or version dependancy in the packages.

The idea here is to let the users informed of the problem, and to give them a workaround (&quot;yum dowgrade libcap-ng&quot;), so that users can still use &apos;sandbox -X&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7769861</commentid>
    <comment_count>29</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2014-12-16 09:43:18 -0500</bug_when>
    <thetext>*** Bug 1173590 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7899252</commentid>
    <comment_count>30</comment_count>
    <who name="Marian Csontos">mcsontos</who>
    <bug_when>2015-02-02 04:22:12 -0500</bug_when>
    <thetext>*** Bug 1176022 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7900194</commentid>
    <comment_count>31</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2015-02-02 09:57:35 -0500</bug_when>
    <thetext>Dan, do you know what&apos;s going on here?  I have the impression that this is broken for users who upgraded to F21 but is working for new installs, but I could be wrong about that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7901383</commentid>
    <comment_count>32</comment_count>
    <who name="Richard Z.">rz</who>
    <bug_when>2015-02-02 15:47:53 -0500</bug_when>
    <thetext>I did upgrade to F21 and it worked as long as I kept the old versionlock. After removing the versionlock and doing update it no longer worked.

So back to 
# yum versionlock
0:libcap-ng-0.7.3-3.fc19.*</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7995080</commentid>
    <comment_count>33</comment_count>
    <who name="Jaroslav Reznik">jreznik</who>
    <bug_when>2015-03-03 10:51:44 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 22 development cycle.
Changing version to &apos;22&apos;.

More information and reason for this action is here:
https://fedoraproject.org/wiki/Fedora_Program_Management/HouseKeeping/Fedora22</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8017156</commentid>
    <comment_count>34</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2015-03-05 21:55:54 -0500</bug_when>
    <thetext>*** Bug 1093702 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8017173</commentid>
    <comment_count>35</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2015-03-05 22:00:29 -0500</bug_when>
    <thetext>I&apos;ve confirmed that the Fedora 22 Alpha TC 8 live cd has this problem.

Moving to policycoreutils, which is closer than libcap-ng to describing the actual problem.  Renaming, too.

For those that haven&apos;t followed the history, this issue started as a result of the fix to rhbz 885288 aka CVE-2014-3215.  If you work around it by downgrading libcap-ng, then you have a working selinux sandbox but you&apos;re also vulnerable to a privilege escalation attack.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8017953</commentid>
    <comment_count>36</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-03-06 04:43:58 -0500</bug_when>
    <thetext>Ok we have bounded transitions here and we need to make sandbox working with it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8020394</commentid>
    <comment_count>37</comment_count>
    <who name="Joachim Frieben">jfrieben</who>
    <bug_when>2015-03-07 01:14:06 -0500</bug_when>
    <thetext>Description of problem:
I ran &apos;sandbox -X evince&apos;.

Version-Release number of selected component:
selinux-policy-3.13.1-105.3.fc21.noarch

Additional info:
reporter:       libreport-2.3.0
hashmarkername: setroubleshoot
kernel:         3.18.7-200.fc21.x86_64
type:           libreport</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8079828</commentid>
    <comment_count>38</comment_count>
    <who name="Joachim Frieben">jfrieben</who>
    <bug_when>2015-03-24 17:44:10 -0400</bug_when>
    <thetext>Description of problem:
I ran &apos;sandbox -X xterm&apos;.

Version-Release number of selected component:
selinux-policy-3.13.1-105.6.fc21.noarch

Additional info:
reporter:       libreport-2.3.0
hashmarkername: setroubleshoot
kernel:         3.19.1-201.fc21.x86_64
type:           libreport</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8086335</commentid>
    <comment_count>39</comment_count>
    <who name="Marian Csontos">mcsontos</who>
    <bug_when>2015-03-26 08:25:44 -0400</bug_when>
    <thetext>Still the issue on F22 Beta TC4:

kernel-4.0.0-0.rc3.git0.1.fc22.x86_64
selinux-policy-targeted-3.13.1-116.fc22.noarch

Andy, the kernel already has the patch from comment 21. Are there changes to policy necessary?

What are our current options?

- use VMs (memory/CPU intensive)
- use an old version of libcap-ng

Is there any better option at the moment?

/me wonders what&apos;s Dan Walsh using instead...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8086726</commentid>
    <comment_count>40</comment_count>
    <who name="Stephen Smalley">sds</who>
    <bug_when>2015-03-26 09:20:29 -0400</bug_when>
    <thetext>Requires a policy change to use typebounds and ensure that the new domain is strictly bounded by the parent.  Fedora policy spec file has SEMOD_EXP=&quot;/usr/bin/semodule_expand -a&quot; which disables build-time validation; please remove.  Also would be nice to re-enable expand-check=1 in /etc/selinux/semanage.conf in Fedora (neverallow check time significantly improved if using libsepol 2.4).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8087178</commentid>
    <comment_count>41</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2015-03-26 10:56:56 -0400</bug_when>
    <thetext>As far as I know, all this needs is to do what Stephen just described.  My grasp of the policy language is pretty bad, though, so I really don&apos;t want to make the policy change myself.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8087250</commentid>
    <comment_count>42</comment_count>
    <who name="Marian Csontos">mcsontos</who>
    <bug_when>2015-03-26 11:18:30 -0400</bug_when>
    <thetext>Peter, any chance getting this into F22? Seems GNOME application sandboxes are still far away, and this may be the only sane way at the moment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8098652</commentid>
    <comment_count>43</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-03-30 15:23:51 -0400</bug_when>
    <thetext>Trying to make this working. We can get proper transitions wit rules like

typebounds sandbox_web_t sandbox_xserver_t;

but it means we still need to define

allow sandbox_web_t xserver_t:unix_stream_socket connectto;

=&gt; bounding domains still require some additional rules because of typebounds. 

It is much more complicated without CIL. I mean these subset rules.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8098867</commentid>
    <comment_count>44</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-03-30 16:45:28 -0400</bug_when>
    <thetext>And bigger issue is with

typebounds staff_seunshare_t staff_t;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8101773</commentid>
    <comment_count>45</comment_count>
    <who name="Stephen Smalley">sds</who>
    <bug_when>2015-03-31 10:14:26 -0400</bug_when>
    <thetext>If you have problems with typebounds, take it to the selinux list.
There has been some prior discussion on whether the current logic is correct/optimal, e.g. see:
http://marc.info/?t=142627079300007&amp;r=1&amp;w=2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8159377</commentid>
    <comment_count>46</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2015-04-20 07:08:22 -0400</bug_when>
    <thetext>*** Bug 1212984 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8182941</commentid>
    <comment_count>47</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-04-27 13:07:17 -0400</bug_when>
    <thetext>Not sure if it is typebounds issue or sandbox issue. Playing with CIL to see if I am able to make it working.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8429425</commentid>
    <comment_count>48</comment_count>
    <who name="Konstantin Ryabitsev">icon</who>
    <bug_when>2015-07-11 14:41:59 -0400</bug_when>
    <thetext>Discouraging to see sandbox still unusable in Fedora, especially after a spate of 0-day flash issues. :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8584120</commentid>
    <comment_count>49</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-08-28 07:37:28 -0400</bug_when>
    <thetext>We have some fixes in F22/F23 Fedora SELinux policy to make &quot;sandbox -X&quot; working with a single type. Basically it allows to run &quot;sandbox -X&quot; in enforcing mode and turn benefits of name spacing on. In Fedora 23, it should be also working with Python 3. 

Another problem is sandbox+typebounds. Basically it can not be working with the current sandbox concept where more types are bounded to the same parent. There we should think about a new client-server architecture for example.

I am moving this bug to rawhide as RFE since we should have sandbox working in F22/F23 how I described above. If not, please add a comment here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8584251</commentid>
    <comment_count>50</comment_count>
    <who name="Šimon Lukašík">slukasik</who>
    <bug_when>2015-08-28 08:16:10 -0400</bug_when>
    <thetext>This is great achievement.

Thank You Miroslav &amp; Petr!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8584755</commentid>
    <comment_count>51</comment_count>
    <who name="Stephen Smalley">sds</who>
    <bug_when>2015-08-28 10:29:17 -0400</bug_when>
    <thetext>Can you clarify why typebounds cannot be used with the current sandbox?  Feel free to take it up on selinux@tycho.nsa.gov list.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8587167</commentid>
    <comment_count>52</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-08-30 17:05:48 -0400</bug_when>
    <thetext>(In reply to Stephen Smalley from comment #51)
&gt; Can you clarify why typebounds cannot be used with the current sandbox? 
&gt; Feel free to take it up on selinux@tycho.nsa.gov list.

Sure, the problem is with the following use cases:

$ sandbox -X -t sandbox_web_t firefox

needs to have

(typebounds sandbox_web_t sandbox_xserver_t)
(typebounds sandbox_web_t sandbox_web_client_t)

to reach expected functionality


 |  |  `-sandbox(`staff_u:staff_r:staff_t:s0-s0:c0.c1023&apos;)
 |  |     |  `-sandboxX.sh(`staff_u:staff_r:sandbox_web_t:s0:c328,c845&apos;)
 |  |     |     |-Xephyr(`staff_u:staff_r:sandbox_xserver_t:s0:c328,c845&apos;)

..

 |  |     |  `-sandboxX.sh(`staff_u:staff_r:sandbox_web_t:s0:c328,c845&apos;)
 |  |     |    `-start(`staff_u:staff_r:sandbox_web_client_t:s0:c328,c845&apos;)


But you can call it also for another types:

$ sandbox -X -t sandbox_net_t firefox 

and it needs to have

(typebounds sandbox_net_t sandbox_xserver_t)
(typebounds sandbox_net_t sandbox_web_client_t)

and there is a conflict.

# semodule -i mysandbox.cil

Type sandbox_xserver_t already bound by parent at line 46 of /var/lib/selinux/targeted/tmp/modules/100/sandboxX/cil
Now being bound to parent sandbox_web_t at line 8 of /var/lib/selinux/targeted/tmp/modules/400/mysandbox/cil
Bad bounds statement at line 8 of /var/lib/selinux/targeted/tmp/modules/400/mysandbox/cil
Failed to resolve typebounds statement at 8 of /var/lib/selinux/targeted/tmp/modules/400/mysandbox/cil
Failed to resolve ast
semodule:  Failed!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8589706</commentid>
    <comment_count>53</comment_count>
    <who name="Stephen Smalley">sds</who>
    <bug_when>2015-08-31 09:53:46 -0400</bug_when>
    <thetext>Ok, so this is a limitation of typebounds, i.e. that a type can only be bounded by a single other type.  You could of course define separate sandbox_web_xserver_t vs sandbox_net_xserver_t types, each bounded by their respective parent domains (i.e. typebounds sandbox_web_t sandbox_web_xserver_t; typebounds sandbox_net_t sandbox_net_xserver_t;) and likewise for the client types, and set up domain transitions to the right child type for each.  Not sure how difficult that would be, but it could certainly be macroized.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8590650</commentid>
    <comment_count>54</comment_count>
    <who name="Paul Moore">pmoore</who>
    <bug_when>2015-08-31 14:23:52 -0400</bug_when>
    <thetext>I&apos;m starting to think the allowing bounded domain transitions inside the sandbox tool is always going to be problematic.  I think it is good that we support it for those that want to make use of it (this should be easier to customize now with CIL, yes?), but I think providing a set of bounded domains in the default Fedora policy is always going to be a losing battle.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8590791</commentid>
    <comment_count>55</comment_count>
    <who name="Andy Lutomirski">luto</who>
    <bug_when>2015-08-31 14:52:01 -0400</bug_when>
    <thetext>Given how much of a mess this has been, I&apos;m starting to wonder if the right way to fix this is to switch to a namespace-based approach instead of trying to use SELinux to build the sandbox.  Both mbox and firejail take this approach, although I haven&apos;t used either.  Sandstorm works great (disclaimer: I helped write its sandbox), but it&apos;s not even close to being usable as a selinux sandbox replacement.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8590909</commentid>
    <comment_count>56</comment_count>
    <who name="Stephen Smalley">sds</who>
    <bug_when>2015-08-31 15:13:28 -0400</bug_when>
    <thetext>(In reply to Paul Moore from comment #54)
&gt; I&apos;m starting to think the allowing bounded domain transitions inside the
&gt; sandbox tool is always going to be problematic.  I think it is good that we
&gt; support it for those that want to make use of it (this should be easier to
&gt; customize now with CIL, yes?), but I think providing a set of bounded
&gt; domains in the default Fedora policy is always going to be a losing battle.

I don&apos;t think it is unachievable given the small number of discrete sandbox domains.  I&apos;m not even sure if we truly need all of the different sandbox types that are defined today (if the user has to manually specify one via -t, then I think you&apos;ve already failed usability).  But running the nested X server (Xephyr) in a separate domain from the X application is useful for security, so supporting that domain transition through appropriate definitions of bounded types seems worthwhile to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8590989</commentid>
    <comment_count>57</comment_count>
    <who name="Paul Moore">pmoore</who>
    <bug_when>2015-08-31 15:52:02 -0400</bug_when>
    <thetext>(In reply to Andy Lutomirski from comment #55)
&gt; Given how much of a mess this has been, I&apos;m starting to wonder if the right
&gt; way to fix this is to switch to a namespace-based approach instead of trying
&gt; to use SELinux to build the sandbox.  Both mbox and firejail take this
&gt; approach, although I haven&apos;t used either.  Sandstorm works great
&gt; (disclaimer: I helped write its sandbox), but it&apos;s not even close to being
&gt; usable as a selinux sandbox replacement.

I suspect at some point in the future we will probably end up with something that is Docker based, but I&apos;d still like to fix the SELinux sandbox in its current form.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8593931</commentid>
    <comment_count>58</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2015-09-01 07:43:17 -0400</bug_when>
    <thetext>xdg-app is probably the future not Docker.

selinux sandbox uses namespaces and SELinux and I suspect in the future we will do the same.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8593955</commentid>
    <comment_count>59</comment_count>
    <who name="Florian Weimer">fweimer</who>
    <bug_when>2015-09-01 07:46:59 -0400</bug_when>
    <thetext>(In reply to Daniel Walsh from comment #58)
&gt; xdg-app is probably the future not Docker.

xdg-app does not sandbox access to the display hardware, so it sidesteps this issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8594208</commentid>
    <comment_count>60</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2015-09-01 08:28:54 -0400</bug_when>
    <thetext>We have not added security to xdg-app yet, we need wayland to have a good experience with this.   But that is the future.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8594597</commentid>
    <comment_count>61</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-09-01 09:45:01 -0400</bug_when>
    <thetext>(In reply to Stephen Smalley from comment #53)
&gt; Ok, so this is a limitation of typebounds, i.e. that a type can only be
&gt; bounded by a single other type.  You could of course define separate
&gt; sandbox_web_xserver_t vs sandbox_net_xserver_t types, each bounded by their
&gt; respective parent domains (i.e. typebounds sandbox_web_t
&gt; sandbox_web_xserver_t; typebounds sandbox_net_t sandbox_net_xserver_t;) and
&gt; likewise for the client types, and set up domain transitions to the right
&gt; child type for each.  Not sure how difficult that would be, but it could
&gt; certainly be macroized.

Yes, I agree with you that we could try to go this way.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8765554</commentid>
    <comment_count>62</comment_count>
    <who name="Patrick C. F. Ernzer">pcfe</who>
    <bug_when>2015-10-29 09:34:13 -0400</bug_when>
    <thetext>JFYI; sandbox works again for me (tested with my main usecase for this tool; opening a sandboxed firefox)

$ getenforce 
Enforcing
$ rpm -q policycoreutils-sandbox
policycoreutils-sandbox-2.3-18.fc22.x86_64
$ sandbox -t sandbox_web_t -w 900x690 -X firefox &apos;http://www.redhat.com/&apos;

works as expected. Thank you for the fix!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8766427</commentid>
    <comment_count>63</comment_count>
    <who name="Dimitris">dimitris</who>
    <bug_when>2015-10-29 12:07:10 -0400</bug_when>
    <thetext>(In reply to Patrick C. F. Ernzer from comment #62)
&gt; JFYI; sandbox works again for me (tested with my main usecase for this tool;
&gt; opening a sandboxed firefox)

Doesn&apos;t work here:

$ getenforce 
Enforcing
$ rpm -q policycoreutils-sandbox
policycoreutils-sandbox-2.3-18.fc22.x86_64
$ sandbox -t sandbox_web_t -w 900x690 -X firefox &apos;http://www.redhat.com/&apos;

results in

SELinux is preventing /usr/bin/Xephyr from connectto access on the unix_stream_socket @/tmp/.X11-unix/X0.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8766708</commentid>
    <comment_count>64</comment_count>
    <who name="Stephen Smalley">sds</who>
    <bug_when>2015-10-29 13:41:20 -0400</bug_when>
    <thetext>(In reply to Dimitris from comment #63)
&gt; (In reply to Patrick C. F. Ernzer from comment #62)
&gt; &gt; JFYI; sandbox works again for me (tested with my main usecase for this tool;
&gt; &gt; opening a sandboxed firefox)
&gt; 
&gt; Doesn&apos;t work here:
&gt; 
&gt; $ getenforce 
&gt; Enforcing
&gt; $ rpm -q policycoreutils-sandbox
&gt; policycoreutils-sandbox-2.3-18.fc22.x86_64
&gt; $ sandbox -t sandbox_web_t -w 900x690 -X firefox &apos;http://www.redhat.com/&apos;
&gt; 
&gt; results in
&gt; 
&gt; SELinux is preventing /usr/bin/Xephyr from connectto access on the
&gt; unix_stream_socket @/tmp/.X11-unix/X0.

Make sure your selinux-policy-targeted is up-to-date.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8766720</commentid>
    <comment_count>65</comment_count>
    <who name="Dimitris">dimitris</who>
    <bug_when>2015-10-29 13:47:50 -0400</bug_when>
    <thetext>In the meantime I switched to the new F23 laptop.  sandbox now works:

$ rpm -q policycoreutils-sandbox
policycoreutils-sandbox-2.4-14.fc23.x86_64
$ getenforce 
Enforcing
$ sandbox -t sandbox_web_t -w 900x690 -X firefox &apos;http://www.redhat.com/&apos;

browser comes up but I also get this:

Raw Audit Messages
type=AVC msg=audit(1446140628.631:813): avc:  denied  { connectto } for  pid=13846 comm=&quot;dbus-daemon&quot; path=&quot;/run/systemd/journal/stdout&quot; scontext=unconfined_u:unconfined_r:sandbox_web_t:s0:c500,c973 tcontext=system_u:system_r:kernel_t:s0 tclass=unix_stream_socket permissive=0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9091680</commentid>
    <comment_count>66</comment_count>
    <who name="Jan Kurik">jkurik</who>
    <bug_when>2016-02-24 08:15:22 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 24 development cycle.
Changing version to &apos;24&apos;.

More information and reason for this action is here:
https://fedoraproject.org/wiki/Fedora_Program_Management/HouseKeeping/Fedora24#Rawhide_Rebase</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9456052</commentid>
    <comment_count>67</comment_count>
    <who name="Alphonse Steiner">alphsteiner</who>
    <bug_when>2016-06-27 11:58:44 -0400</bug_when>
    <thetext>Everything worked fine in fedora 23, but it is broken again in fedora 24...

First, I need to set the &apos;-d 96&apos; option to avoid the error:
-------------------------------------------------------------
Traceback (most recent call last):
  File &quot;/usr/bin/sandbox&quot;, line 514, in &lt;module&gt;
    rc = sandbox.main()
  File &quot;/usr/bin/sandbox&quot;, line 502, in main
    return self.__execute()
  File &quot;/usr/bin/sandbox&quot;, line 454, in __execute
    import gtk
ImportError: No module named &apos;gtk&apos;
-------------------------------------------------------------


With this option set, I can see briefly the window frame before it disappears.
The audit log shows:
-------------------------------------------------------------
type=SELINUX_ERR msg=audit(1467042404.463:4963): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:sandbox_web_t:s0:c109,c1023 newcontext=staff_u:staff_r:sandbox_xserver_t:s0:c109,c1023
type=SELINUX_ERR msg=audit(1467042404.755:4964): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:sandbox_web_t:s0:c109,c1023 newcontext=staff_u:staff_r:sandbox_web_client_t:s0:c109,c1023
type=SELINUX_ERR msg=audit(1467042404.847:4965): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
type=SELINUX_ERR msg=audit(1467042404.868:4966): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
type=SELINUX_ERR msg=audit(1467042404.874:4967): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
-------------------------------------------------------------

I have tried to add the policy:
(typebounds sandbox_web_t sandbox_xserver_t)
(typebounds sandbox_web_t sandbox_web_client_t)


but then the log reports:
-------------------------------------------------------------
type=SELINUX_ERR msg=audit(1467041652.116:4954): op=security_compute_av reason=bounds scontext=staff_u:staff_r:sandbox_web_t:s0:c462,c664 tcontext=staff_u:staff_r:sandbox_xserver_t:s0:c462,c664 tclass=process perms=transition
type=AVC msg=audit(1467041652.116:4955): avc:  denied  { transition } for  pid=20174 comm=&quot;sandboxX.sh&quot; path=&quot;/usr/bin/Xephyr&quot; dev=&quot;dm-0&quot; ino=962641 scontext=staff_u:staff_r:sandbox_web_t:s0:c462,c664 tcontext=staff_u:staff_r:sandbox_xserver_t:s0:c462,c664 tclass=process permissive=0
type=SELINUX_ERR msg=audit(1467041652.133:4956): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
type=SELINUX_ERR msg=audit(1467041652.148:4957): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
type=SELINUX_ERR msg=audit(1467041652.154:4958): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
-------------------------------------------------------------

Can someone explain what happened and fix it?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9456120</commentid>
    <comment_count>68</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2016-06-27 12:18:21 -0400</bug_when>
    <thetext>(In reply to Alphonse Steiner from comment #67)
&gt; Everything worked fine in fedora 23, but it is broken again in fedora 24...
&gt; 
&gt; First, I need to set the &apos;-d 96&apos; option to avoid the error:
&gt; -------------------------------------------------------------
&gt; Traceback (most recent call last):
&gt;   File &quot;/usr/bin/sandbox&quot;, line 514, in &lt;module&gt;
&gt;     rc = sandbox.main()
&gt;   File &quot;/usr/bin/sandbox&quot;, line 502, in main
&gt;     return self.__execute()
&gt;   File &quot;/usr/bin/sandbox&quot;, line 454, in __execute
&gt;     import gtk
&gt; ImportError: No module named &apos;gtk&apos;
&gt; -------------------------------------------------------------

This is already fixed in Rawhide and I&apos;ll push an update to Fedora 24 soon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9507727</commentid>
    <comment_count>69</comment_count>
    <who name="Timo Trinks">ttrinks</who>
    <bug_when>2016-07-14 00:53:15 -0400</bug_when>
    <thetext>Hi Petr - any ETA when you&apos;ll push this to the updates for Fedora 24? Being able to sandbox Firefox has been a pretty useful feature up until recently. Thanks, Timo</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9512508</commentid>
    <comment_count>70</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-07-15 07:54:05 -0400</bug_when>
    <thetext>checkpolicy-2.5-6.fc24, libselinux-2.5-9.fc24, libsemanage-2.5-5.fc24, libsepol-2.5-8.fc24, policycoreutils-2.5-12.fc24, secilc-2.5-4.fc24 has been pushed to the Fedora 24 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-84d1f77e58</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9512992</commentid>
    <comment_count>71</comment_count>
    <who name="Alphonse Steiner">alphsteiner</who>
    <bug_when>2016-07-15 10:00:10 -0400</bug_when>
    <thetext>Good point: the gtk part is fixed!
Bad point: the sandbox is still broken. Here is the log:

=============================================================================
type=SELINUX_ERR msg=audit(1468590543.030:801): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:sandbox_web_t:s0:c378,c750 newcontext=staff_u:staff_r:sandbox_xserver_t:s0:c378,c750
type=AVC msg=audit(1468590543.069:802): avc:  denied  { unix_read } for  pid=2594 comm=&quot;Xwayland&quot; key=0  scontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023 tcontext=staff_u:staff_r:sandbox_web_t:s0:c378,c750 tclass=shm permissive=0
type=SELINUX_ERR msg=audit(1468590543.246:803): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:sandbox_web_t:s0:c378,c750 newcontext=staff_u:staff_r:sandbox_web_client_t:s0:c378,c750
type=SELINUX_ERR msg=audit(1468590543.420:804): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
type=SELINUX_ERR msg=audit(1468590543.437:805): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
type=SELINUX_ERR msg=audit(1468590543.446:806): op=security_bounded_transition seresult=denied oldcontext=staff_u:staff_r:staff_seunshare_t:s0-s0:c0.c1023 newcontext=staff_u:staff_r:staff_t:s0-s0:c0.c1023
=============================================================================

Note: the command used was &apos;sandbox -X -t sandbox_web_t -w 1248x1024  -- gnome-terminal&apos; on gnome-wayland.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9515162</commentid>
    <comment_count>72</comment_count>
    <who name="Joachim Frieben">jfrieben</who>
    <bug_when>2016-07-17 03:26:40 -0400</bug_when>
    <thetext>(In reply to Fedora Update System from comment #70)
Command &apos;sandbox -X ..&apos; is still broken:

/usr/bin/sandbox:454: PyGIWarning: Gtk was imported without specifying a version first. Use gi.require_version(&apos;Gtk&apos;, &apos;3.0&apos;) before import to ensure that the right version gets loaded.
  from gi.repository import Gtk</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9530015</commentid>
    <comment_count>73</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-07-19 20:20:36 -0400</bug_when>
    <thetext>checkpolicy-2.5-6.fc24, libselinux-2.5-9.fc24, libsemanage-2.5-5.fc24, libsepol-2.5-8.fc24, policycoreutils-2.5-12.fc24, secilc-2.5-4.fc24 has been pushed to the Fedora 24 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9530892</commentid>
    <comment_count>74</comment_count>
    <who name="Joachim Frieben">jfrieben</who>
    <bug_when>2016-07-20 03:18:21 -0400</bug_when>
    <thetext>(In reply to Joachim Frieben from comment #72)
Issue has been reported in new bug 1358138.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>