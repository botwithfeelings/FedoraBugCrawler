<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1362477</bug_id>
          
          <creation_ts>2016-08-02 06:22:00 -0400</creation_ts>
          <short_desc>Add Recommends: pinentry-gtk in the .spec file</short_desc>
          <delta_ts>2017-01-13 08:31:45 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>evolution-data-server</component>
          <version>24</version>
          <rep_platform>x86_64</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>NEXTRELEASE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>urgent</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Nuno Dias">nuno.dias</reporter>
          <assigned_to name="Milan Crha">mcrha</assigned_to>
          <cc>bcl</cc>
    
    
    <cc>jamielinux</cc>
    
    
    <cc>lucilanga</cc>
    
    
    <cc>mbarnes</cc>
    
    
    <cc>mcrha</cc>
    
    
    <cc>nuno.dias</cc>
    
    
    <cc>tmraz</cc>
    
    
    <cc>tpopela</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>evolution-data-server-3.23.4</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-01-13 08:31:45</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9576236</commentid>
    <comment_count>0</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-08-02 06:22:02 -0400</bug_when>
    <thetext>Description of problem:
When I try to sign a mail with gpg I get this error in the window where I&apos;m writing the mail, after press the sent button

Because &quot;gpg: writing to &apos;-&apos;
gpg: signing failed: Inappropriate ioctl for device
gpg: signing failed: Inappropriate ioctl for device
&quot;, you may need to select different mail options.

Version-Release number of selected component (if applicable):
evolution-3.20.4-1.fc24.x86_64


How reproducible:
I can reproduce this every time

Steps to Reproduce:
1. Create an email, sign and sent
2.
3.

Actual results:


Expected results:


Additional info:</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9576534</commentid>
    <comment_count>1</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-08-02 08:01:59 -0400</bug_when>
    <thetext>Thanks for a bug report. Maybe this thread is partly related:
http://www.zsh.org/mla/users/2015/msg01175.html
together with its follow up message with the user&apos;s confirmation.

Could you try to open a terminal and run there:

   $ echo test | gpg2 --sign --armor -u $USER

eventually use gpg, instead of gpg2, to check whether the issue can be reproduced also from a terminal, completely out of the evolution? Of course, the terminal can change environment variables mentioned at the above thread, but I believe it does worth a try.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9576757</commentid>
    <comment_count>2</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-08-02 08:55:05 -0400</bug_when>
    <thetext> It works with gpg in terminal, with gpg2 I have the same error in the
terminal that I have in evolution.

gpg: signing failed: Inappropriate ioctl for device</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9580301</commentid>
    <comment_count>3</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-08-03 03:13:38 -0400</bug_when>
    <thetext>Thanks for testing it. The gpg2 is the default gpg client these days. You can use:

 $ gsettings set org.gnome.evolution-data-server camel-gpg-binary &quot;/usr/bin/gpg&quot;

to override the binary being used, as a temporary workaround (note that the keys are not shared between gpg2 and gpg1).

As you can reproduce this out of the evolution, I&apos;m moving this bug report to the gpg2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9580777</commentid>
    <comment_count>4</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-08-03 06:01:21 -0400</bug_when>
    <thetext> You say gpg2 and gpg1 are not compatible, so maybe that&apos;s the reason this is not working, because my key was generated a long time ago with gpg1.

 But when trying to generate a new one using gpg2 I have this 

gpg: agent_genkey failed: No such file or directory
Key generation failed: No such file or directory

 A no key are generated.

(In reply to Milan Crha from comment #3)
&gt; Thanks for testing it. The gpg2 is the default gpg client these days. You
&gt; can use:
&gt; 
&gt;  $ gsettings set org.gnome.evolution-data-server camel-gpg-binary
&gt; &quot;/usr/bin/gpg&quot;
&gt; 
&gt; to override the binary being used, as a temporary workaround (note that the
&gt; keys are not shared between gpg2 and gpg1).
&gt; 
&gt; As you can reproduce this out of the evolution, I&apos;m moving this bug report
&gt; to the gpg2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9580820</commentid>
    <comment_count>5</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-08-03 06:17:39 -0400</bug_when>
    <thetext>Could be a duplicate of bug 1362572. Isn&apos;t there some stale gpg-agent running?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9580821</commentid>
    <comment_count>6</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-08-03 06:18:35 -0400</bug_when>
    <thetext>Also you should be able to migrate the old key to gpg2 for example via export/import.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9580958</commentid>
    <comment_count>7</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-08-03 06:54:07 -0400</bug_when>
    <thetext>yes, if the gpg-agent is running (and was) I can&apos;t generate a new key pair, after kill it I generate a new key pair and the error is the same

gpg: signing failed: Inappropriate ioctl for device</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9581031</commentid>
    <comment_count>8</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-08-03 07:24:48 -0400</bug_when>
    <thetext>Unfortunately I cannot reproduce the problem 

$ echo test | gpg2 --sign --armor -u $USER

works fine here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9675063</commentid>
    <comment_count>9</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-02 08:19:08 -0400</bug_when>
    <thetext>Is this still problem for you with gnupg2-2.1.13?

Unfortunately I cannot do much with this without reproducer.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9691154</commentid>
    <comment_count>10</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-09-08 11:00:50 -0400</bug_when>
    <thetext>Right now I don&apos;t have problems generate a new key even if the agent is running, but I continue with the problem of can&apos;t sign email, so maybe this can be assigned again to evolution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9691224</commentid>
    <comment_count>11</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-08 11:18:52 -0400</bug_when>
    <thetext>And does command in comment 8 work for you or not?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9691300</commentid>
    <comment_count>12</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-09-08 11:38:04 -0400</bug_when>
    <thetext>Opps sorry, you are right :( still can&apos;t sign in the command line


gpg: signing failed: Inappropriate ioctl for device
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

gpg: signing failed: Inappropriate ioctl for device</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9691478</commentid>
    <comment_count>13</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-08 12:22:26 -0400</bug_when>
    <thetext>Do you have GPG_TTY set? What is in your gpg.conf?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9691610</commentid>
    <comment_count>14</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-09-08 13:26:41 -0400</bug_when>
    <thetext>I never changed this file so this is the defaults 

listing everything not commented
grep -v &quot;^#&quot; .gnupg/gpg.conf

keyserver hkp://subkeys.pgp.net
utf8-strings
auto-key-locate local</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9691652</commentid>
    <comment_count>15</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-09-08 13:36:26 -0400</bug_when>
    <thetext>I forgot to say that GPG_TTY is empty</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9693122</commentid>
    <comment_count>16</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-09 03:56:29 -0400</bug_when>
    <thetext>What&apos;s the output of:
rpm -qa | grep pinentry</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9693389</commentid>
    <comment_count>17</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-09-09 05:14:34 -0400</bug_when>
    <thetext>rpm -qa | grep pinentry
pinentry-0.9.7-2.fc24.x86_64</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9693653</commentid>
    <comment_count>18</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-09 06:59:43 -0400</bug_when>
    <thetext>So you do not have pinentry-gtk or pinentry-qt installed. Installing it should fix the problem. The question is how did you get into this state, how did you install the system, was it a fresh install or upgrade?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9693656</commentid>
    <comment_count>19</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-09 07:01:05 -0400</bug_when>
    <thetext>Perhaps evolution should have pinentry-gtk or pinentry-qt as Requires or Recommends dependency?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9693698</commentid>
    <comment_count>20</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-09-09 07:17:10 -0400</bug_when>
    <thetext>Thats it, thanks

How do I come to not having pinentry-gtk installed? simple, this system was upgraded from version to version since ... I don&apos;t know maybe Fedora 10, maybe evolution should have pinentry-gtk as dependency</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9693771</commentid>
    <comment_count>21</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-09-09 07:50:05 -0400</bug_when>
    <thetext>Right, there is no such dependency and it is correct, from my point of view. While the evolution uses gtk+ and some GNOME-related libraries, it is not stuck with GNOME, it can run also under KDE or any other, where particularly the KDE may prefer the qt version of the pinentry, instead of the gtk version.

Another problem is that the code where this is running resides in the evolution-data-server, as a public library, which anyone can use (libcamel). Thus even if I add the pinentry-gtk/-qt to the .spec file of the evolution, it won&apos;t help to the other application(s) using the library from the evolution-data-server.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9693847</commentid>
    <comment_count>22</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-09 07:59:23 -0400</bug_when>
    <thetext>Then feel free to close this as wontfix. I do not see how it could be fixed in gpg2 either. Putting the dependency there would be even less appropriate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9694033</commentid>
    <comment_count>23</comment_count>
    <who name="Nuno Dias">nuno.dias</who>
    <bug_when>2016-09-09 08:59:16 -0400</bug_when>
    <thetext>so, then this is simple broken, gpg2 and evolution, because without pinentry-gtk/-qt I can&apos;t sign anything, in the command line, because I don&apos;t have a popup asking me for the password.

gpg2 should work with or without pinentry-gtk and right now doesn&apos;t work, right now if gpg-agent is running and pinentry-gtk is not installed doesn&apos;t work.

So, which component in Fedora(Gnome) is responsible for passing the request of unlock the key from the terminal to the graphical popup? maybe we can assign this to them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9694094</commentid>
    <comment_count>24</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-09 09:12:18 -0400</bug_when>
    <thetext>Is libcamel used by non-GUI applications at all?

If not, then the dependency could be set in evolution-data-server. We could add some virtual provides to both pinentry-gtk and pinentry-qt - pinentry-gui or something that could be required by the evolution-data-server so there is no explicit preference to particular pinentry.

gpg2 works fine on command-line without GUI pinentry if you either do not redirect the standard input or set GPG_TTY=$(tty) before running the command with redirection.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9697836</commentid>
    <comment_count>25</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-09-12 03:32:07 -0400</bug_when>
    <thetext>(In reply to Nuno Dias from comment #23)
&gt; right now if gpg-agent is running and pinentry-gtk is not installed doesn&apos;t
&gt; work.

I think this is the core of the issue. It&apos;s the gpg-agent, which requires pinentry-gtk/-qt to work properly in all cases. Evolution is able to ask for a gpg password when the gpg-agent is not active. The problem is that the gpg-agent isn&apos;t a package, right?

(In reply to Tomas Mraz from comment #24)
&gt; Is libcamel used by non-GUI applications at all?

I&apos;m not aware of any. I know that Geary (or its fork) will use libcamel &quot;soon&quot;, through its GObject introspection code. It&apos;s a GUI application too.

&gt; If not, then the dependency could be set in evolution-data-server.

The libcamel doesn&apos;t need any GUI, it doesn&apos;t link against gtk+ or anything X/Wayland related. The evolution-data-server has a sublibrary which requires gtk+, but the processes it runs are independent of GUI as well.

&gt; We could add some virtual provides to both pinentry-gtk and pinentry-qt -
&gt; pinentry-gui or something that could be required by the
&gt; evolution-data-server so there is no explicit preference to particular
&gt; pinentry.

Yeah, the pinentry-gui will be better, thus we do not dictate which version the users should use (gtk or qt).

&gt; gpg2 works fine on command-line without GUI pinentry if you either do not
&gt; redirect the standard input or set GPG_TTY=$(tty) before running the command
&gt; with redirection.

Is it meant to &quot;disable&quot; gpg-agent without touching the configuration file? Hmm, even, I think it&apos;s not good to disable user preference here. It would lead to another confusion for them. Though the evolution has no tty assigned usually.

That said, nothing fits the best here. Adding the soft dependency to the evolution package won&apos;t work long term. Then the logical place is the evolution-data-server. It&apos;s a core package, thus it may bring more dependencies on the live image or similar places. It needs a discussion with the FESCo or something, I&apos;m afraid (but I&apos;m not sure).

The most correct thing, from my point of view, is to make the gpg-agent depend on the pinentry-gui, because in reality it&apos;s the gpg-agent which requires it, not the evolution, neither libcamel, nor anything else which runs /usr/bin/gpg2 (see comment #2). But the gpg-agent is part of the gnupg2 package.

If the gpg-agent requires some implementation of certain interface, why would it be wrong to mandate it itself, rather than relying on something else to bring it in for it?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9697863</commentid>
    <comment_count>26</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-12 03:42:04 -0400</bug_when>
    <thetext>No, that&apos;s a nonsense. gpg-agent does not require GUI pinentry to work properly. It can be used in either loopback mode or with tty pinentry if it knows which tty is to be used to display the PIN entry.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9698269</commentid>
    <comment_count>27</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-09-12 05:35:32 -0400</bug_when>
    <thetext>The GUI applications do not have any tty usually. You also said that certain conditions should be met to make it working, where the comment #2 proves that &quot;it can be used...&quot;, but it doesn&apos;t work out of the box and requires quite some work to be done first. Evolution also _can_ work properly with gpg2&apos;s agent without changes in the .spec file.

My main point here is to not have a duplicate bug report in the future, for other applications which will need to use gpg2, but will not have installed evolution (I mean to use gpg2 directly, without libcamel or anything, like had been proved in comment #2, where only the command line had been used).

The comment #14 also states that it&apos;s the default configuration of the gpg2. If there is any setting which can make gpg-agent work always, with or without any pinentry-gui being installed, regardless whether it&apos;s run with or without TTY or anything, then the default config of the gpg2 doesn&apos;t reflect that.

Alternatively, call this a gpg2 bug, because it should, instead of meaning less &quot;gpg: signing failed: Inappropriate ioctl for device&quot;, claim &quot;I need password&quot;, when it fails to contact the GUI variant of the pinentry. It can claim this error _as a hint_ in the status stream, but nothing else.

Also, I just noticed, the libcamel calls gpg with --no-tty argument:
https://git.gnome.org/browse/evolution-data-server/tree/camel/camel-gpg-context.c#n585</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9698309</commentid>
    <comment_count>28</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-12 05:46:44 -0400</bug_when>
    <thetext>Yes, there is a cosmetic issue or it could be called a bug in gpg2 - that is the error message should be made more clear. Otherwise there is no bug - you have to call gpg2 properly to get successful results. If you want it to prompt via GUI, you have to have something installed that can prompt via GUI. If you do not want to, you have to provide a TTY or call it in a way so it requests the passphrase other way (use --passphrase-fd option). The --no-tty option is unrelated, see the manual page.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9698334</commentid>
    <comment_count>29</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-09-12 05:57:28 -0400</bug_when>
    <thetext>Reported upstream: https://bugs.gnupg.org/gnupg/issue2680</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9698371</commentid>
    <comment_count>30</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-09-12 06:07:08 -0400</bug_when>
    <thetext>Thanks, but the report is misleading. First of all the evolution doesn&apos;t call gpg that way, what you quoted was only a minimal test command I offered for a quick test. If you check the code link from the end of the comment #27, then you&apos;ll see that the evolution calls the gpg much more complicated.

&gt; Would it be possible to detect such situation and provide more meaningful
&gt; error message? Such as &apos;Missing tty for displaying passphrase entry.&apos;

I would rather like to see a fallback on the gnupg2 to instruct the caller that the password is missing, like it does when gpg-agent is turned off (there was a use-agent option in the past, maybe only in gpg1?).

The --passphrase-fd option works only with conjunction with --batch command in gpg2, but the libcamel uses --batch only if no password is needed. There is used the --command-fd to provide passwords, which worked for years. Really, the problem is that gpg2 doesn&apos;t claim that it requires password, it simply fails, because gpg-agent failed when it was supposed to ask for the password.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10010059</commentid>
    <comment_count>31</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-12-21 02:58:02 -0500</bug_when>
    <thetext>Could you please follow up with gnupg2 upstream?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10010291</commentid>
    <comment_count>32</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-12-21 04:22:54 -0500</bug_when>
    <thetext>What is their bugzilla, if any, please? As I do not know, I doubt I&apos;ve an account there and I do not know whether it makes sense to create one just for this single issue, which we discussed in detail here already. (I also ask reporters to file bugs upstream, but I do not force them if they cannot or do not want for whatever reason. In that case I file the bug for them and offer them to CC there.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10010449</commentid>
    <comment_count>33</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-12-21 05:17:27 -0500</bug_when>
    <thetext>The bug tracker is mentioned in comment 29 - I&apos;ve already reported the bug there but you wrote the issue is more complex and I do not fully understand the details here so that&apos;s why I am asking you to follow up with upstream directly.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10011695</commentid>
    <comment_count>34</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-12-21 11:10:38 -0500</bug_when>
    <thetext>Ouch, I&apos;m sorry, that was a long time and I didn&apos;t bother to read the previous comments at all. My fault.

I see the bug didn&apos;t receive any attraction for the past three months. Could you copy my response from the comment #30 there, all below the cited part, including the two citation lines, and if they would have any additional questions, then just ping me and I&apos;ll do my best to follow up? I would even create an account there, bug seeing no interest in the issue by nobody but you and me, it seems like a &quot;waste of time&quot; to create an account there, at lease at the moment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10011957</commentid>
    <comment_count>35</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-12-21 12:07:30 -0500</bug_when>
    <thetext>OK, copied info from comment 30 to upstream bugzilla.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10015708</commentid>
    <comment_count>36</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2016-12-22 06:18:07 -0500</bug_when>
    <thetext>Milan, please read the latest comment from Werner on the upstream bug. Note that we have gnupg2-2.1.17 in rawhide, but we are still at pinentry-0.9.7.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10016375</commentid>
    <comment_count>37</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2016-12-22 10:17:42 -0500</bug_when>
    <thetext>Thanks Tomas. If I try on rawhide with an older gnupg2-2.1.13-2 without any pinentry, then I receive in the Evolution:

   gpg: no running gpg-agent - starting &apos;/usr/bin/gpg-agent&apos;
   gpg: waiting for the agent to come up ... (5s)
   gpg: connection to agent established
   gpg: writing to &apos;-&apos;
   gpg: signing failed: No pinentry
   gpg: signing failed: No pinentry

Then I install only the pinentry package, not any of its sub-packages and I receive:

   gpg: writing to &apos;-&apos;
   gpg: signing failed: Inappropriate ioctl for device
   gpg: signing failed: Inappropriate ioctl for device

This is expected, it is the older gnupg2. I updated to 2.1.16 with `dnf update gnupg2` (yours today build is not part of the repo yet), and it resulted in:

   gpg: Fatal: libgcrypt is too old (need 1.7.0, have 1.6.6)

Some package version issues there, it seems, not properly handled by dnf.
I just run a complete rawhide update, and I&apos;ll let you know the next year. I&apos;ll have the 2.1.17 by that time too.

I&apos;m currently trying to see what it&apos;ll claim, if the error truly improved in the 2.1.17 or not (I know you mentioned there&apos;s an older version of pinentry).

With respect of the request for pinentry-gtk in the evolution package, I did have installed it before I tried the test and it was the seahorse package, which brought it in. Or at least the seahorse package had been removed, when I removed pinentry-gtk. Interestingly nothing required pinentry itself, I could safely remove it too (that was with 2.1.13-2 gnupg2).

I&apos;m thinking of requesting pinentry-gtk/-qt somewhere lower in the stack, because the evolution is too high. The thing is that the whole functionality is part of the evolution-data-server&apos;s libcamel. There are introspection bindings and vala bindings of it right now, and I&apos;ve one user whom helped a lot with the introspection, to be able to use the libcamel in his own application, thus without having the evolution installed at all. Another problem I see is that while the Evolution is developed under GNOME umbrella, it&apos;s not tight to GNOME at all. There are users running the Evolution under KDE. There makes more sense for them to install pinentry-qt, than pinentry-gtk (I do not know what pinentry picks, when it has both variants, or whether the both can be installed at all).  For this I do not think the Evolution should force an install of either of the pinetry-* subpackage. But maybe this is better to deal with in the gnupg-devel list, as suggested in the upstream bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10028772</commentid>
    <comment_count>38</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2017-01-02 11:37:50 -0500</bug_when>
    <thetext>(In reply to Milan Crha from comment #37)
&gt; I&apos;m currently trying to see what it&apos;ll claim, if the error truly improved in
&gt; the 2.1.17 or not (I know you mentioned there&apos;s an older version of pinentry).

I&apos;ve installed gnupg2 2.1.17-1.fc26 and pinentry 0.9.7-2.fc24 and with it I get:

   gpg: no running gpg-agent - starting &apos;/usr/bin/gpg-agent&apos;
   gpg: waiting for the agent to come up ... (5s)
   gpg: connection to agent established
   gpg: writing to &apos;-&apos;
   gpg: pinentry launched (pid 2174, flavor unknown, version 0.9.7)
   gpg: signing failed: Inappropriate ioctl for device
   gpg: signing failed: Inappropriate ioctl for device

I suppose it&apos;s the reason why you said that the pinentry is too old in the Fedora. I also see that there are 4 different variants of the pinentry subpackages.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10029830</commentid>
    <comment_count>39</comment_count>
    <who name="Tomas Mraz">tmraz</who>
    <bug_when>2017-01-03 04:11:57 -0500</bug_when>
    <thetext>The pinentry subpackages are installable in parallel and the pinentry script has some logic to choose the best pinentry dialog according to the execution environment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10060937</commentid>
    <comment_count>40</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2017-01-13 08:31:45 -0500</bug_when>
    <thetext>I&apos;m going to add
   Recommends: pinentry-gtk
into the evolution-data-server.spec for the rawhide, 3.23.4+.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>