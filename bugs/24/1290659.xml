<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1290659</bug_id>
          
          <creation_ts>2015-12-11 00:15:00 -0500</creation_ts>
          <short_desc>selinux policy move to /var conflicts with ostree</short_desc>
          <delta_ts>2017-01-12 14:59:37 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>selinux-policy</component>
          <version>24</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          <see_also>https://bugzilla.redhat.com/show_bug.cgi?id=1381588</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Reopened</keywords>
          <priority>high</priority>
          <bug_severity>urgent</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Peter">pvolpe</reporter>
          <assigned_to name="Lukas Vrabec">lvrabec</assigned_to>
          <cc>adimania</cc>
    
    
    <cc>aurelien</cc>
    
    
    <cc>dominick.grift</cc>
    
    
    <cc>dustymabe</cc>
    
    
    <cc>dwalsh</cc>
    
    
    <cc>eparis</cc>
    
    
    <cc>giovanni.tirloni</cc>
    
    
    <cc>imcleod</cc>
    
    
    <cc>jbrooks</cc>
    
    
    <cc>jlebon</cc>
    
    
    <cc>jwcart2</cc>
    
    
    <cc>lsm5</cc>
    
    
    <cc>lvrabec</cc>
    
    
    <cc>mattdm</cc>
    
    
    <cc>mgrepl</cc>
    
    
    <cc>miabbott</cc>
    
    
    <cc>plautrba</cc>
    
    
    <cc>pmoore</cc>
    
    
    <cc>pvolpe</cc>
    
    
    <cc>sds</cc>
    
    
    <cc>stefw</cc>
    
    
    <cc>walters</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>selinux-policy-3.13.1-191.16.fc24 selinux-policy-3.13.1-218.fc25</cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-10-08 22:42:56</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          <external_bugs name="GNOME Desktop">761620</external_bugs>
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>8910260</commentid>
    <comment_count>0</comment_count>
    <who name="Peter">pvolpe</who>
    <bug_when>2015-12-11 00:15:41 -0500</bug_when>
    <thetext>Description of problem:

On the latest fedora atomic, running a semanage command errors:

Version-Release number of selected component (if applicable):

OS: Fedora Atomic, version 23.30, ID d147058d67

libsemanage-2.4-4.fc23.x86_64
libsemanage-python-2.4-4.fc23.x86_64
libsemanage-python3-2.4-4.fc23.x86_64

How reproducible:

Everytime

Steps to Reproduce:
1. semanage port -a -t ssh_port_t -p tcp 2222

Actual results:

libsemanage.semanage_direct_get_module_info: Unable to open docker module lang ext file at /var/lib/selinux/targeted/tmp/modules/400/docker/lang_ext. (No such file or directory).

Expected results:

Selinux allows ssh connections on port 2222.

Additional info:</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8910592</commentid>
    <comment_count>1</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-12-11 03:22:26 -0500</bug_when>
    <thetext>Could you try to reinstall docker-selinux package?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911513</commentid>
    <comment_count>2</comment_count>
    <who name="Peter">pvolpe</who>
    <bug_when>2015-12-11 09:42:32 -0500</bug_when>
    <thetext>On atomic you can&apos;t really just install packages, you update the system and it pulls the prebuilt tree. 
The currently installed package is docker-selinux-1.9.1-4.git6ec29ef.fc23.x86_64, which does appear to be the latest for f23. Since with the same package on standard fedora 23 this is working, I assume that this issues is caused by something getting removed during the tree compose process.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911623</commentid>
    <comment_count>3</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2015-12-11 10:08:48 -0500</bug_when>
    <thetext>I am not sure you are allowed to run semanage on atomic host.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911667</commentid>
    <comment_count>4</comment_count>
    <who name="Peter">pvolpe</who>
    <bug_when>2015-12-11 10:19:13 -0500</bug_when>
    <thetext>Is that by design? Or just something that hasn&apos;t been fully implemented yet? I think that users probably should be able to change the ssh port on a atomic system</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911678</commentid>
    <comment_count>5</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2015-12-11 10:20:48 -0500</bug_when>
    <thetext>(In reply to Peter from comment #2)
&gt; On atomic you can&apos;t really just install packages, you update the system and
&gt; it pulls the prebuilt tree. 
&gt; The currently installed package is
&gt; docker-selinux-1.9.1-4.git6ec29ef.fc23.x86_64, which does appear to be the
&gt; latest for f23.
Agree with Peter. I already tried it. F23 workstation looks fine with actual selinux-policy and docker-policy packages. 

In Atomic, problem is that selinux modules in /var/lib/selinux/targeted/active/modules/100 / /var/lib/selinux/targeted/active/modules/400/ are empty. 


bash-4.3# ls /var/lib/selinux/targeted/active/modules/100/openvpn
bash-4.3# ls /var/lib/selinux/targeted/active/modules/100/abrt
bash-4.3# ls /var/lib/selinux/targeted/active/modules/400/docker


&gt; Since with the same package on standard fedora 23 this is
&gt; working, 
&gt; I assume that this issues is caused by something getting removed
&gt; during the tree compose process.
Atomic guys, any hint here?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911683</commentid>
    <comment_count>6</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2015-12-11 10:23:42 -0500</bug_when>
    <thetext>This is at least partly due to the fact that the move of SELinux policy to /var simply conflicts with the OSTree design of having /var empty.

I mentioned this in https://lists.fedoraproject.org/pipermail/devel/2015-June/211308.html 

The phase
&quot;However, we&apos;ll probably need to provide  systemd-tmpfiles units in each
selinux-policy-* subpackage to create necessary directory structure.&quot;
was probably not implemented.  I honestly think it&apos;d be a lot saner to keep the sources in /usr (again), and have /etc be overrides.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911697</commentid>
    <comment_count>7</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2015-12-11 10:28:45 -0500</bug_when>
    <thetext>Should the defaults be stored in /usr/lib/selinux and then semanage would look in /var/lib/selinux first and fall back to /usr/lib/selinux?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911699</commentid>
    <comment_count>8</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2015-12-11 10:29:17 -0500</bug_when>
    <thetext>(In reply to Lukas Vrabec from comment #5)

&gt; &gt; Since with the same package on standard fedora 23 this is
&gt; &gt; working, 
&gt; &gt; I assume that this issues is caused by something getting removed
&gt; &gt; during the tree compose process.
&gt; Atomic guys, any hint here?

Also there really shouldn&apos;t be a separate &quot;Atomic guys&quot; - the model is part of Fedora the same way that other parts are - and Atomic Host is also part of the Fedora release and is just as &quot;standard&quot;.

There are just two update models now, and we need to work to align them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911716</commentid>
    <comment_count>9</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2015-12-11 10:36:25 -0500</bug_when>
    <thetext>(In reply to Daniel Walsh from comment #7)
&gt; Should the defaults be stored in /usr/lib/selinux and then semanage would
&gt; look in /var/lib/selinux first and fall back to /usr/lib/selinux?

It won&apos;t help if you want your changes to be persistent after reboot.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911717</commentid>
    <comment_count>10</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2015-12-11 10:36:32 -0500</bug_when>
    <thetext>(In reply to Daniel Walsh from comment #7)
&gt; Should the defaults be stored in /usr/lib/selinux and then semanage would
&gt; look in /var/lib/selinux first and fall back to /usr/lib/selinux?

I don&apos;t understand why they&apos;re in /var now - the systemd model of /usr is immutable defaults and /etc is overrides is quite good IMO.

If we can do that and just add some backwards compatibility to &quot;look in /var first, then /usr&quot;, that seems like it&apos;d work.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911726</commentid>
    <comment_count>11</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2015-12-11 10:39:30 -0500</bug_when>
    <thetext>(In reply to Petr Lautrbach from comment #9)
&gt; (In reply to Daniel Walsh from comment #7)
&gt; &gt; Should the defaults be stored in /usr/lib/selinux and then semanage would
&gt; &gt; look in /var/lib/selinux first and fall back to /usr/lib/selinux?
&gt; 
&gt; It won&apos;t help if you want your changes to be persistent after reboot.

Okay, a bit of confusion here - Atomic Host/OSTree wants to support a &quot;factory reset&quot; by deleting /var, but by default /var *is* persistent.

The most important thing to understand is rpm-ostree converts /var from RPM content into systemd-tmpfiles units only for directories as a nod to some backwards compatiblity.  Many packages include stub directories, but a lot fewer had/have static files in /var.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911780</commentid>
    <comment_count>12</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2015-12-11 11:01:21 -0500</bug_when>
    <thetext>So, would it be possible to teach the userspace tools about the &quot;systemd model&quot; of /usr = ro defaults, /etc = persistent overrides?  (And maybe one step farther of /run = transient override)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911789</commentid>
    <comment_count>13</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2015-12-11 11:04:29 -0500</bug_when>
    <thetext>(In reply to Colin Walters from comment #11)
&gt; (In reply to Petr Lautrbach from comment #9)
&gt; &gt; (In reply to Daniel Walsh from comment #7)
&gt; &gt; &gt; Should the defaults be stored in /usr/lib/selinux and then semanage would
&gt; &gt; &gt; look in /var/lib/selinux first and fall back to /usr/lib/selinux?
&gt; &gt; 
&gt; &gt; It won&apos;t help if you want your changes to be persistent after reboot.
&gt; 
&gt; Okay, a bit of confusion here - Atomic Host/OSTree wants to support a
&gt; &quot;factory reset&quot; by deleting /var, but by default /var *is* persistent.
&gt; 
I&apos;m able reproduce the issue with fresh created atomic host.

&gt; The most important thing to understand is rpm-ostree converts /var from RPM
&gt; content into systemd-tmpfiles units only for directories as a nod to some
&gt; backwards compatiblity.  Many packages include stub directories, but a lot
&gt; fewer had/have static files in /var.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911903</commentid>
    <comment_count>14</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2015-12-11 11:43:06 -0500</bug_when>
    <thetext>

(In reply to Colin Walters from comment #12)
&gt; So, would it be possible to teach the userspace tools about the &quot;systemd
&gt; model&quot; of /usr = ro defaults, /etc = persistent overrides?  (And maybe one
&gt; step farther of /run = transient override)?


To change libsemanage to create the /var/lib/selinux store from the system default /usr/lib/selinux when the /var/lib/selinux is empty should be feasible. I&apos;ll take a look at that.

Or there&apos;s a possibility to set store_path=/etc/selinux in /etc/selinux/semanage.conf but it would need to have a special version of selinux-policy-targetd  with the modules stored there.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8911983</commentid>
    <comment_count>15</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2015-12-11 12:20:01 -0500</bug_when>
    <thetext>(In reply to Colin Walters from comment #6)
&gt; This is at least partly due to the fact that the move of SELinux policy to
&gt; /var simply conflicts with the OSTree design of having /var empty.
&gt; 
&gt; I mentioned this in
&gt; https://lists.fedoraproject.org/pipermail/devel/2015-June/211308.html 
&gt; 
&gt; The phase
&gt; &quot;However, we&apos;ll probably need to provide  systemd-tmpfiles units in each
&gt; selinux-policy-* subpackage to create necessary directory structure.&quot;

That&apos;s actually something that could work.

selinux-policy-targeted would ship /usr/lib/selinux/targeted and /usr/lib/tmpfiles.d/selinux.conf with:

C /var/lib/selinux/targeted -    -    -    -  /usr/lib/selinux/targeted

So that after a factory reset when /var/lib/selinux/targeted doesn&apos;t exist, all files from /usr/lib/selinux/targeted would be copied to /var/lib/selinux/targeted.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8912018</commentid>
    <comment_count>16</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2015-12-11 12:30:53 -0500</bug_when>
    <thetext>(In reply to Petr Lautrbach from comment #15)

&gt; selinux-policy-targeted would ship /usr/lib/selinux/targeted and
&gt; /usr/lib/tmpfiles.d/selinux.conf with:
&gt; 
&gt; C /var/lib/selinux/targeted -    -    -    -  /usr/lib/selinux/targeted
&gt; 
&gt; So that after a factory reset when /var/lib/selinux/targeted doesn&apos;t exist,
&gt; all files from /usr/lib/selinux/targeted would be copied to
&gt; /var/lib/selinux/targeted.

I think the concern then is - do you change the RPM to start shipping the files in /usr?  I wonder if RPM would delete the old ones on upgrades?

That aside, this would be an easy change to make now.  

The downsides though: It means we double the disk usage though even if you haven&apos;t made any policy customizations.  Which is again why I think the systemd model is best - you only use disk space proportionate to your modifications, it&apos;s easy to see what changes you have, etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8912033</commentid>
    <comment_count>17</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-12-11 12:37:34 -0500</bug_when>
    <thetext>Late on the party :).

Yes, easy change for now. Or we could ship a new subpackage - selinux-policy-atomic which would ship policy files in /usr/lib and would be based on selinux-policy-minimum until we get seatomic working.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8912042</commentid>
    <comment_count>18</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2015-12-11 12:42:56 -0500</bug_when>
    <thetext>(In reply to Miroslav Grepl from comment #17)
&gt; Late on the party :).
&gt; 
&gt; Yes, easy change for now. Or we could ship a new subpackage -
&gt; selinux-policy-atomic which would ship policy files in /usr/lib and would be
&gt; based on selinux-policy-minimum until we get seatomic working.
Exactly, 
Petr mentioned this in comment 14, just called selinux-policy-atomic as  &quot; special targeted version&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8912122</commentid>
    <comment_count>19</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-12-11 13:19:39 -0500</bug_when>
    <thetext>(In reply to Lukas Vrabec from comment #18)
&gt; (In reply to Miroslav Grepl from comment #17)
&gt; &gt; Late on the party :).
&gt; &gt; 
&gt; &gt; Yes, easy change for now. Or we could ship a new subpackage -
&gt; &gt; selinux-policy-atomic which would ship policy files in /usr/lib and would be
&gt; &gt; based on selinux-policy-minimum until we get seatomic working.
&gt; Exactly, 
&gt; Petr mentioned this in comment 14, just called selinux-policy-atomic as  &quot;
&gt; special targeted version&quot;.

Yeap and I would be more strict than Targeted policy is. It would be a great first step to have minimized policy on Atomic.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8913833</commentid>
    <comment_count>20</comment_count>
    <who name="Stef Walter">stefw</who>
    <bug_when>2015-12-13 01:01:20 -0500</bug_when>
    <thetext>Besides affecting any user who wants to change the port of a service, this affects Cockpit integration tests that try to change ssh the port. We&apos;ll likely mark these test failures as known issues until the issue is resolved.

https://github.com/cockpit-project/cockpit/issues/3326</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8915628</commentid>
    <comment_count>21</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2015-12-14 07:09:23 -0500</bug_when>
    <thetext>(In reply to Colin Walters from comment #16)
&gt; (In reply to Petr Lautrbach from comment #15)
&gt; 
&gt; &gt; selinux-policy-targeted would ship /usr/lib/selinux/targeted and
&gt; &gt; /usr/lib/tmpfiles.d/selinux.conf with:
&gt; &gt; 
&gt; &gt; C /var/lib/selinux/targeted -    -    -    -  /usr/lib/selinux/targeted
&gt; &gt; 
&gt; &gt; So that after a factory reset when /var/lib/selinux/targeted doesn&apos;t exist,
&gt; &gt; all files from /usr/lib/selinux/targeted would be copied to
&gt; &gt; /var/lib/selinux/targeted.
&gt; 
&gt; I think the concern then is - do you change the RPM to start shipping the
&gt; files in /usr?  I wonder if RPM would delete the old ones on upgrades?

It should.

&gt; 
&gt; That aside, this would be an easy change to make now.  
&gt; 
&gt; The downsides though: It means we double the disk usage though even if you
&gt; haven&apos;t made any policy customizations. 

As a workaround, we can make the system modules directory /var/lib/selinux/targeted/active/modules/100 to be a symlink to /usr/lib/selinux/targeted/active/modules/100. It would break &apos;semodule -r&apos; in cases where /usr is read-only but I guess that it&apos;s not widely used technique as these modules would be reinstalled on seliunx-policy update anyway.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8920612</commentid>
    <comment_count>22</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2015-12-15 12:29:51 -0500</bug_when>
    <thetext>What the &quot;systemd conffiles model&quot; does for deletion is to have a symlink to /dev/null with the same filename.  See `systemctl mask`.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8921249</commentid>
    <comment_count>23</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-12-15 16:47:26 -0500</bug_when>
    <thetext>As Petr mentioned above we can use a different store location for policy files. We had a discussion with SELinux folks about that and we would be able to get selinux-policy-atomic.rpm package with policy store located back to /etc.

It would require a change in /etc/selinux/config to

SELINUXTYPE=atomic

and in /etc/selinux/semanage.conf

store-root=/etc/selinux

when Atomic host image is created together with requiring selinux-policy-atomic.

We would get a clean solution. We could play with selinux-policy-atomic to get a minimal set of policies until we have seatomic.

Does it make sense?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8921543</commentid>
    <comment_count>24</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2015-12-15 21:15:16 -0500</bug_when>
    <thetext>I&apos;m a little worried about conflating this bug with a switch to an entirely new policy.  I&apos;m not strongly objecting to it if we think fixing the existing Fedora 23 stream is too hard, but it wasn&apos;t sounding above like it would be.

If we have to we can change the rpm-ostree compose to `mv /var/lib/selinux /usr/share/selinux` or so.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8922511</commentid>
    <comment_count>25</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-12-16 06:30:34 -0500</bug_when>
    <thetext>Actually this is not a new policy. It will be the same as selinux-policy-targeted but it will have a default store location in /etc. Only this change from a policy point of view.

So no hacks are needed. But maybe we are not aware about all compose implications with selinux-polic-atomic solution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8927077</commentid>
    <comment_count>26</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-12-17 11:30:30 -0500</bug_when>
    <thetext>I am working on test builds with selinux-policy-atomic.rpm.

Also the point is we have broken policy because of this issue. So it is a good chance to start with a new policy - based on Targeted but with the module store located in /etc/selinux.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8928731</commentid>
    <comment_count>27</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2015-12-18 02:34:36 -0500</bug_when>
    <thetext>(In reply to Miroslav Grepl from comment #26)
&gt; I am working on test builds with selinux-policy-atomic.rpm.

https://copr.fedoraproject.org/coprs/mgrepl/selinux-policy/build/148502/

&gt; 
&gt; Also the point is we have broken policy because of this issue. So it is a
&gt; good chance to start with a new policy - based on Targeted but with the
&gt; module store located in /etc/selinux.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8950787</commentid>
    <comment_count>28</comment_count>
    <who name="Miroslav Grepl">mgrepl</who>
    <bug_when>2016-01-04 04:09:36 -0500</bug_when>
    <thetext>The latest builds are available on

https://copr.fedoraproject.org/coprs/mgrepl/seatomic/build/151302/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9369978</commentid>
    <comment_count>29</comment_count>
    <who name="Giovanni Tirloni">giovanni.tirloni</who>
    <bug_when>2016-05-30 18:27:45 -0400</bug_when>
    <thetext>Freshly installed F24 Atomic Host (2016-05-29 image).

# semanage port -a -t ssh_port_t -p tcp 4444
libsemanage.semanage_read_policydb: Could not open kernel policy /var/lib/selinux/targeted/active/policy.kern for reading. (No such file or directory).
FileNotFoundError: [Errno 2] No such file or directory

# rpm -qa | egrep &apos;(atomic|selinux)&apos; | sort
atomic-1.8-5.gitcc5997a.fc24.x86_64
atomic-devmode-0.3.3-1.fc24.noarch
docker-selinux-1.10.3-9.git667d6d1.fc24.x86_64
libatomic_ops-7.4.2-9.fc24.x86_64
libselinux-2.5-3.fc24.x86_64
libselinux-python-2.5-3.fc24.x86_64
libselinux-python3-2.5-3.fc24.x86_64
libselinux-utils-2.5-3.fc24.x86_64
rpm-plugin-selinux-4.13.0-0.rc1.27.fc24.x86_64
selinux-policy-3.13.1-189.fc24.noarch
selinux-policy-targeted-3.13.1-189.fc24.noarch

# getenforce 
Enforcing</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9546777</commentid>
    <comment_count>30</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2016-07-25 09:50:14 -0400</bug_when>
    <thetext>(In reply to Miroslav Grepl from comment #26)
&gt; I am working on test builds with selinux-policy-atomic.rpm.
&gt; 
&gt; Also the point is we have broken policy because of this issue. So it is a
&gt; good chance to start with a new policy - based on Targeted but with the
&gt; module store located in /etc/selinux.

/etc/selinux is OK, but the best implementation for ostree would be to have the defaults in /usr/share/selinux, and have /etc override, because by default content in /etc is implemented via physical copy, which makes upgrades slower and takes up more disk space.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9692966</commentid>
    <comment_count>31</comment_count>
    <who name="Stef Walter">stefw</who>
    <bug_when>2016-09-09 02:39:27 -0400</bug_when>
    <thetext>This is still happening every day, and prevents a real world use case from working with SELinux enabled.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9694103</commentid>
    <comment_count>32</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2016-09-09 09:14:00 -0400</bug_when>
    <thetext>Stef what is the problem you are seeing today?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9694191</commentid>
    <comment_count>33</comment_count>
    <who name="Stef Walter">stefw</who>
    <bug_when>2016-09-09 09:37:10 -0400</bug_when>
    <thetext>Users still cannot change the SSH port for the system on Fedora Atomic. This has been the case for a long long time.

Here&apos;s what happens during changing the SSH port on Fedora Atomic:

# atomic host status
● fedora-atomic:fedora-atomic/f23/x86_64/docker-host
       Version: 23.174 (2016-09-01 18:44:32)
        Commit: 8199da014de45a4bd23c45e772535101220d9991f54df74482b00d0efdb40580
        OSName: fedora-atomic
  GPGSignature: (unsigned)
# sed -i &apos;s/.*Port .*/Port 2222/&apos; /etc/ssh/sshd_config
# semanage port -a -t ssh_port_t -p tcp 2222
libsemanage.semanage_direct_get_module_info: Unable to open docker module lang ext file at /var/lib/selinux/targeted/tmp/modules/400/docker/lang_ext. (No such file or directory).

The above works on RHEL atomic. I can then do the following and have sshd listen on an alternate port:

# systemctl restart sshd
# netstat -an | grep 22
tcp        0      0 0.0.0.0:2222            0.0.0.0:*               LISTEN     
tcp6       0      0 :::2222                 :::*                    LISTEN     

We track this as a known issue in our integration tests here:

https://github.com/cockpit-project/cockpit/issues/3326

As noted at the above link, this bug report is the root cause for user facing issue. If this bug report is unrelated to the &quot;can&apos;t change port&quot; issue, then I can open a new bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9694573</commentid>
    <comment_count>34</comment_count>
    <who name="Stef Walter">stefw</who>
    <bug_when>2016-09-09 11:22:02 -0400</bug_when>
    <thetext>Same thing on Fedora 24 Atomic:

# atomic host status
● fedora-atomic:fedora-atomic/24/x86_64/docker-host
       Version: 24.36 (2016-09-06 22:09:42)
        Commit: d9c8b8a31238e857f010c6fdc282f5f611d3c8af3e78caa891f7edb85822771b
        OSName: fedora-atomic
  GPGSignature: (unsigned)
# sed -i &apos;s/.*Port .*/Port 2222/&apos; /etc/ssh/sshd_config
# semanage port -a -t ssh_port_t -p tcp 2222
libsemanage.semanage_read_policydb: Could not open kernel policy /var/lib/selinux/targeted/active/policy.kern for reading. (No such file or directory).
FileNotFoundError: [Errno 2] No such file or directory</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9694630</commentid>
    <comment_count>35</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2016-09-09 11:40:01 -0400</bug_when>
    <thetext>I am wondering if we are about to break this on RHEL also, since RHEL7.3 rebases a lot of the SELinux toolchain and selinux-policy.

Petr what is your current ideas on this?  Is this more of a policycoreutils issue or a selinux-policy issue?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9694633</commentid>
    <comment_count>36</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2016-09-09 11:40:38 -0400</bug_when>
    <thetext>This also blocks the permanent setting of booleans.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9694731</commentid>
    <comment_count>37</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2016-09-09 12:15:54 -0400</bug_when>
    <thetext>(In reply to Daniel Walsh from comment #35)
&gt; I am wondering if we are about to break this on RHEL also, since RHEL7.3
&gt; rebases a lot of the SELinux toolchain and selinux-policy.

RHEL-7.3 uses store-root=/etc/selinux in order to prevent these kind of issues. So everything is in /etc/selinux and /var/lib/selinux is generally empty by default there.
 
&gt; Petr what is your current ideas on this?  Is this more of a policycoreutils
&gt; issue or a selinux-policy issue?

I&apos;d consider this as an issue among SELinux userspace, which uses /var/lib/selinux as a permanent store for modules and local policy modifications; and ostree which deletes /var directory on factory reset.

We agreed on devconf that the best solution would be to change SELinux userspace to be able to use two types of store, read only in /usr/lib and a regular one in /var/lib/selinux. But, there hasn&apos;t been done any work on this yet.


What is feasible to do in few days is the solution from comment #c15 with a minor change. In order not to duplicate all files, we can only store cil module files in /usr/share/selinux/. It should be enough to recreate a store on boot and it would increase the size of selinux-policy-targeted by around 4M. It still has the size downside but at least it would work until there&apos;s a better solution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9702069</commentid>
    <comment_count>38</comment_count>
      <attachid>1200429</attachid>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2016-09-13 05:45:59 -0400</bug_when>
    <thetext>Created attachment 1200429
Do a factory reset when there&apos;s no policy.kern file in a store

It could be liked this. selinux-policy-targeted ships /usr/share/selinux/POLICYTYPE/default - a copy of /var/lib/selinux/POLICYTYPE/active
    
And there&apos;s selinux-factory-reset@targeted.service similar to autorelabel service which copies all files to the store and rebuilds policy.

You can test it using this scratch build:
http://koji.fedoraproject.org/koji/taskinfo?taskID=15611971

The problem can be simulated using this script:

find /var/lib/selinux/targeted -type f | xargs rm</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9710659</commentid>
    <comment_count>39</comment_count>
    <who name="Lukas Vrabec">lvrabec</who>
    <bug_when>2016-09-15 07:55:03 -0400</bug_when>
    <thetext>Patch from Petr was merged and will be part of next selinux-policy update for Fedora 24.

Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9712870</commentid>
    <comment_count>40</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-09-15 20:53:10 -0400</bug_when>
    <thetext>selinux-policy-3.13.1-191.16.fc24 has been pushed to the Fedora 24 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-fe39b806b6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9732069</commentid>
    <comment_count>41</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-09-21 20:24:02 -0400</bug_when>
    <thetext>selinux-policy-3.13.1-191.16.fc24 has been pushed to the Fedora 24 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9765957</commentid>
    <comment_count>42</comment_count>
    <who name="Jonathan Lebon">jlebon</who>
    <bug_when>2016-10-04 15:49:54 -0400</bug_when>
    <thetext>This is causing the latest F25 composes to get stuck in a reboot loop. I haven&apos;t fleshed out the full story, but I see at least the following two issues:

1. Race condition with systemd-tmpfiles-setup: the selinux-factory-reset template service should have systemd-tmpfiles-setup.service in its After= list, so that the rpm-ostree tmpfiles conf has time to create /var/lib/selinux/targeted. Otherwise, the `cp` will just barf. 

2. The call to `semodule -B -n` actually fails with:
Oct 04 19:11:14 localhost.localdomain selinux-factory-reset[770]: libsemanage.semanage_direct_get_module_info: Unable to open docker module lang ext file at /var/lib/selinux/targeted/tmp/modules/400/docker/lang_ext. (No such file or directory).
Oct 04 19:11:14 localhost.localdomain selinux-factory-reset[770]: semodule:  Failed!

This is actually puzzling to me, though I don&apos;t know enough about SELinux modules to debug further. Seems like the factory reset script should also go through every pp in /usr/share/selinux/packages and install them?

At a higher level though, it provides a really sad user experience to have to reboot the system on first boot. Would it be too late to have a tailored selinux-policy-atomic package for F25?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9765970</commentid>
    <comment_count>43</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2016-10-04 15:53:54 -0400</bug_when>
    <thetext>Yeah, it&apos;s not going to be OK to do a reboot.

Let&apos;s back out this change until we can do more integration testing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9765997</commentid>
    <comment_count>44</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2016-10-04 16:07:43 -0400</bug_when>
    <thetext>So yes, the immediate action here should be to go back to the previous state (pre-built selinux policy works, there&apos;s no systemd service, and semanage doesn&apos;t work).

Next, I&apos;d like to scope in moving the policy to /usr, and having files in /etc override.  Like how systemd units work.

If we do a locally-compiled policy, it should also likely go in /etc, because otherwise rollbacks would get the *new* policy.

So basically /var isn&apos;t used for SELinux, which would bring us in line with what RHEL7/CentOS7 do today, except we support read-only defaults in /usr.

(Although this is just an *optimization* over what ostree already does automatically with /usr/etc which contains read-only copies of /etc, including the policy defaults)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9768669</commentid>
    <comment_count>45</comment_count>
    <who name="Ian McLeod">imcleod</who>
    <bug_when>2016-10-05 12:15:38 -0400</bug_when>
    <thetext>Marking as urgent since it appears to be blocking the creation of a working F25-based Atomic Host and will likely break any updated F24 trees.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9769060</commentid>
    <comment_count>46</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2016-10-05 14:55:36 -0400</bug_when>
    <thetext>Reverted on master, f25, and f24:

http://pkgs.fedoraproject.org/cgit/rpms/selinux-policy.git/commit/?id=3b618f3b2e61c071442b5e64d82b4625d0a5363d
etc.

And:
http://koji.fedoraproject.org/koji/buildinfo?buildID=807392
etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9769091</commentid>
    <comment_count>47</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2016-10-05 15:02:46 -0400</bug_when>
    <thetext>In the future, can we please loop in the Atomic Host team to review/test these things before we ship?  You can email https://lists.fedoraproject.org/archives/list/cloud@lists.fedoraproject.org/ in general, but in this specific case I think we have everyone relevant on the bugzilla.

I was busy when the patch was posted in
https://bugzilla.redhat.com/show_bug.cgi?id=1290659#c38
and it just didn&apos;t get on my radar to test.  So let&apos;s be sure for the next patches we&apos;re on the same page.

(FWIW I test with a custom treecompose, and rebase a vagrant box to it)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9771540</commentid>
    <comment_count>48</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2016-10-06 12:02:25 -0400</bug_when>
    <thetext>(In reply to Jonathan Lebon from comment #42)
&gt; This is causing the latest F25 composes to get stuck in a reboot loop. I
&gt; haven&apos;t fleshed out the full story, but I see at least the following two
&gt; issues:

Reboot was chosen as the safest way how to reload a policy and apply all possible changes to already running processes. As there&apos;s only systemd running at the moment it&apos;s probably not the case and &apos;semodule -B -R&apos; could be enough.

&gt; 
&gt; 1. Race condition with systemd-tmpfiles-setup: the selinux-factory-reset
&gt; template service should have systemd-tmpfiles-setup.service in its After=
&gt; list, so that the rpm-ostree tmpfiles conf has time to create
&gt; /var/lib/selinux/targeted. Otherwise, the `cp` will just barf. 

It could be fixed directly in selinux-factory-reset which would prepare needed directory structure itself.

&gt; 
&gt; 2. The call to `semodule -B -n` actually fails with:
&gt; Oct 04 19:11:14 localhost.localdomain selinux-factory-reset[770]:
&gt; libsemanage.semanage_direct_get_module_info: Unable to open docker module
&gt; lang ext file at /var/lib/selinux/targeted/tmp/modules/400/docker/lang_ext.
&gt; (No such file or directory).
&gt; Oct 04 19:11:14 localhost.localdomain selinux-factory-reset[770]: semodule: 
&gt; Failed!

This is caused by the rpm-ostree-1-autovar.conf which creates an empty directory for docker module.

At the same time, it  reveals the fact that the factory SELinux policy is not only selinux-policy-targeted but it&apos;s docker policy too. And it would need to be reinstalled during boot after factory reset together with the system policy.

&gt; 
&gt; This is actually puzzling to me, though I don&apos;t know enough about SELinux
&gt; modules to debug further. Seems like the factory reset script should also go
&gt; through every pp in /usr/share/selinux/packages and install them?

Since it&apos;s called factory reset, it probably make sense.
 
&gt; At a higher level though, it provides a really sad user experience to have
&gt; to reboot the system on first boot. Would it be too late to have a tailored
&gt; selinux-policy-atomic package for F25?

There were some concerns about transitions from -targeted to -atomic for existing users.

If the process which puts /usr/lib/tmpfiled.s/rpm-ostree* files can change /etc/selinux/semanage.conf to &quot;store-root=/etc/selinux&quot; and /etc/selinux/config to use &quot;SELINUXTYPE=atomic&quot; then we can simply build selinux-policy-atomic will all modules and files in /etc/selinux/atomic and it can be used instead of -targeted.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9771586</commentid>
    <comment_count>49</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2016-10-06 12:24:52 -0400</bug_when>
    <thetext>(In reply to Petr Lautrbach from comment #48)

&gt; If the process which puts /usr/lib/tmpfiled.s/rpm-ostree* files can change
&gt; /etc/selinux/semanage.conf to &quot;store-root=/etc/selinux&quot; 

Yeah, that&apos;s fairly easy.

&gt; /etc/selinux/config to use &quot;SELINUXTYPE=atomic&quot; then we can simply build
&gt; selinux-policy-atomic will all modules and files in /etc/selinux/atomic and
&gt; it can be used instead of -targeted.

Do you think it&apos;d be possible to just `mv /var/lib/selinux/targeted /etc/selinux/targeted` too in the treecompose?  Then we wouldn&apos;t need a new policy package.

Basically, I&apos;d prefer for both of us to avoid the maintenance burden, and try to have the same thing work on yum-managed systems as well as ostree-managed systems.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9771923</commentid>
    <comment_count>50</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2016-10-06 15:19:02 -0400</bug_when>
    <thetext>(In reply to Colin Walters from comment #49)
&gt; Do you think it&apos;d be possible to just `mv /var/lib/selinux/targeted
&gt; /etc/selinux/targeted` too in the treecompose?  Then we wouldn&apos;t need a new
&gt; policy package.
&gt; 

It&apos;s possible to move files and directories from /var/lib/selinux/targeted/ not the targeted directory itself. I will confirm it again tomorrow, but simple test works:

# semanage port -a -t ssh_port_t -p tcp 22100

# semodule -l | wc -l
411

# echo &apos;store-root=/etc/selinux&apos; &gt;&gt; /etc/selinux/semanage.conf

# mv -v /var/lib/selinux/targeted/* /etc/selinux/targeted/    
&apos;/var/lib/selinux/targeted/active&apos; -&gt; &apos;/etc/selinux/targeted/active&apos;
&apos;/var/lib/selinux/targeted/semanage.read.LOCK&apos; -&gt; &apos;/etc/selinux/targeted/semanage.read.LOCK&apos;
&apos;/var/lib/selinux/targeted/semanage.trans.LOCK&apos; -&gt; &apos;/etc/selinux/targeted/semanage.trans.LOCK&apos;

# semodule -l | wc -l                                         
411

# semanage port -C -l
SELinux Port Type              Proto    Port Number

ssh_port_t                     tcp      22100

# ls -l /var/lib/selinux/targeted 
total 0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9772597</commentid>
    <comment_count>51</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-10-07 02:24:49 -0400</bug_when>
    <thetext>selinux-policy-3.13.1-218.fc25 has been pushed to the Fedora 25 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-3b70b59f26</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9773762</commentid>
    <comment_count>52</comment_count>
    <who name="Colin Walters">walters</who>
    <bug_when>2016-10-07 11:33:15 -0400</bug_when>
    <thetext>I worked on implementing comment #50 in https://github.com/projectatomic/rpm-ostree/pull/479

Offhand, it seems to work OK.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9773910</commentid>
    <comment_count>53</comment_count>
    <who name="Jonathan Lebon">jlebon</who>
    <bug_when>2016-10-07 12:45:19 -0400</bug_when>
    <thetext>Successfully rebased F24 to an F25 compose running the PR above and the latest selinux-policy Bodhi update. And able to manage policy.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9775641</commentid>
    <comment_count>54</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-10-08 22:42:56 -0400</bug_when>
    <thetext>selinux-policy-3.13.1-218.fc25 has been pushed to the Fedora 25 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10056174</commentid>
    <comment_count>55</comment_count>
    <who name="aurelien">aurelien</who>
    <bug_when>2017-01-12 03:38:32 -0500</bug_when>
    <thetext>Seems it comes back for 2017!


Linux icesheet 4.8.15-300.fc25.x86_64 #1 SMP Thu Dec 15 23:10:23 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux


libsemanage.semanage_direct_get_module_info: Unable to read firewalld module lang ext file.
semodule:  Failed!

libsemanage.semanage_direct_get_module_info: Unable to read firewalld module lang ext file.
/usr/sbin/semodule:  Failed!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10058639</commentid>
    <comment_count>56</comment_count>
    <who name="Dusty Mabe">dustymabe</who>
    <bug_when>2017-01-12 14:59:37 -0500</bug_when>
    <thetext>(In reply to aurelien from comment #55)
&gt; Seems it comes back for 2017!
&gt; 

I don&apos;t see the issue:

```
-bash-4.3# rpm-ostree status
State: idle
Deployments:
● fedora-atomic:fedora-atomic/25/x86_64/docker-host
       Version: 25.30 (2017-01-06 07:27:20)
        Commit: 547fa56532850a388ff152fa543f05214f7d1da9d1dda471e3e04259a2f5ff86
        OSName: fedora-atomic
-bash-4.3# 
-bash-4.3# rpm -q selinux-policy-targeted 
selinux-policy-targeted-3.13.1-225.3.fc25.noarch
-bash-4.3# 
-bash-4.3# 
-bash-4.3# semanage port -a -t ssh_port_t -p tcp 2222
-bash-4.3# echo $?
0

```</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>1200429</attachid>
            <date>2016-09-13 05:45:00 -0400</date>
            <delta_ts>2016-09-13 05:45:59 -0400</delta_ts>
            <desc>Do a factory reset when there&apos;s no policy.kern file in a store</desc>
            <filename>0001-Do-a-factory-reset-when-there-s-no-policy.kern-file-.patch</filename>
            <type>text/plain</type>
            <size>5627</size>
            <attacher name="Petr Lautrbach">plautrba</attacher>
            
              <data encoding="base64">RnJvbSA5MGE2Y2JmYWEzNzA5ZjhjNzhiOTY0N2QyMGFiZDExOGJmYjg4YmFjIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBQZXRyIExhdXRyYmFjaCA8cGxhdXRyYmFAcmVkaGF0LmNvbT4K
RGF0ZTogTW9uLCAxMiBTZXAgMjAxNiAxODo0NjoxMiArMDIwMApTdWJqZWN0OiBbUEFUQ0hdIERv
IGEgZmFjdG9yeSByZXNldCB3aGVuIHRoZXJlJ3Mgbm8gcG9saWN5Lmtlcm4gZmlsZSBpbiBhCiBz
dG9yZQoKV2l0aCBycG0tb3N0cmVlLCAvdmFyLyBkaXJlY3RvcnkgZG9lc24ndCBjb250YWluIGFu
eSBmaWxlLCBqdXN0CmRpcmVjdG9yaWVzLiBJdCBtZWFucyB0aGF0IFNFTGludXggcG9saWN5IGNh
bid0IGJlIG1hbmFnZWQgb3IgcmVidWlsdAphbmQgdXNlcnMgaGF2ZSB0byB1c2Ugb25seSB0aGUg
ZGVmYXVsdCBwb2xpY3kuCgpUaGlzIHVwZGF0ZSBhZGRzIC91c3Ivc2hhcmUvc2VsaW51eC9QT0xJ
Q1lUWVBFL2RlZmF1bHQgZGlyZWN0b3J5IGFuZApzZWxpbnV4LWZhY3RvcnktcmVzZXRALnNlcnZp
Y2UgdGVtcGxhdGUgYW5kIHNlcnZpY2VzLgoKL3Vzci9zaGFyZS9zZWxpbnV4L1BPTElDWVRZUEUv
ZGVmYXVsIC0gYSBjb3B5IG9mIC92YXIvbGliL3NlbGludXgvUE9MSUNZVFlQRS9hY3RpdmUKdXNl
ZCBieSBzZWxpbnV4LWZhY3RvcnktcmVzZXRALnNlcnZpY2UncyB0byByZXN0b3JlIHRoZSBmYWN0
b3J5IGRlZmF1bHQKCnNlbGludXgtZmFjdG9yeS1yZXNldEAuc2VydmljZSAtIHRlbXBsYXRlIGZv
ciBzZXJ2aWNlcyB3aGljaCBzaG91bGQKcmVzdG9yZSB0aGUgZmFjdG9yeSBkZWZhdWx0IGZvciBh
IHBvbGljeSB0eXBlIHdoZW4gdGhlcmUncyBubwpwb2xpY3kua2VybiBmaWxlCgplLmcuIHNlbGlu
dXgtcG9saWN5LXRhcmdldGVkIHByb3ZpZGVzIHNlbGludXgtZmFjdG9yeS1yZXNldEB0YXJnZXRl
ZC5zZXJ2aWNlCgpGaXhlczogaHR0cDovL2J1Z3ppbGxhLnJlZGhhdC5jb20vMTI5MDY1OQotLS0K
IHNlbGludXgtZmFjdG9yeS1yZXNldCAgICAgICAgICB8IDE0ICsrKysrKysrKysrKysrCiBzZWxp
bnV4LWZhY3RvcnktcmVzZXRALnNlcnZpY2UgfCAxNyArKysrKysrKysrKysrKysrKwogc2VsaW51
eC1wb2xpY3kuc3BlYyAgICAgICAgICAgIHwgMjggKysrKysrKysrKysrKysrKysrKysrKysrKyst
LQogMyBmaWxlcyBjaGFuZ2VkLCA1NyBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQogY3Jl
YXRlIG1vZGUgMTAwNzU1IHNlbGludXgtZmFjdG9yeS1yZXNldAogY3JlYXRlIG1vZGUgMTAwNjQ0
IHNlbGludXgtZmFjdG9yeS1yZXNldEAuc2VydmljZQoKZGlmZiAtLWdpdCBhL3NlbGludXgtZmFj
dG9yeS1yZXNldCBiL3NlbGludXgtZmFjdG9yeS1yZXNldApuZXcgZmlsZSBtb2RlIDEwMDc1NQpp
bmRleCAwMDAwMDAwLi5jNzdhZDFhCi0tLSAvZGV2L251bGwKKysrIGIvc2VsaW51eC1mYWN0b3J5
LXJlc2V0CkBAIC0wLDAgKzEsMTQgQEAKKyMhL2Jpbi9iYXNoCisKK2lmIFsgISAtZiAvZXRjL3Nl
bGludXgvY29uZmlnIF07IHRoZW4KKyAgICBTRUxJTlVYVFlQRT1ub25lCitlbHNlCisgICAgc291
cmNlIC9ldGMvc2VsaW51eC9jb25maWcKK2ZpCisKK2NwIC1SIC0tcHJlc2VydmU9bW9kZSxvd25l
cnNoaXAsdGltZXN0YW1wcyxsaW5rcyAvdXNyL3NoYXJlL3NlbGludXgvJDEvZGVmYXVsdC8qIC92
YXIvbGliL3NlbGludXgvJDEKK3NlbW9kdWxlIC1CIC1uIC1zICQxCisKK2lmIHNlbGludXhlbmFi
bGVkICYmIFsgIiQxIiA9ICIkU0VMSU5VWFRZUEUiIF07IHRoZW4KKyAgICByZWJvb3QKK2ZpCmRp
ZmYgLS1naXQgYS9zZWxpbnV4LWZhY3RvcnktcmVzZXRALnNlcnZpY2UgYi9zZWxpbnV4LWZhY3Rv
cnktcmVzZXRALnNlcnZpY2UKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMC4uZWZj
ODJkNAotLS0gL2Rldi9udWxsCisrKyBiL3NlbGludXgtZmFjdG9yeS1yZXNldEAuc2VydmljZQpA
QCAtMCwwICsxLDE3IEBACitbVW5pdF0KK0Rlc2NyaXB0aW9uPVJlc2V0IFNFTGludXggcG9saWN5
IHRvIGZhY3RvcnkgZGVmYXVsdAorRGVmYXVsdERlcGVuZGVuY2llcz1ubworUmVxdWlyZXM9bG9j
YWwtZnMudGFyZ2V0CitDb25mbGljdHM9c2h1dGRvd24udGFyZ2V0CitBZnRlcj1sb2NhbC1mcy50
YXJnZXQKK0JlZm9yZT1zeXNpbml0LnRhcmdldCBzaHV0ZG93bi50YXJnZXQKK0NvbmRpdGlvblNl
Y3VyaXR5PXNlbGludXgKK0NvbmRpdGlvbktlcm5lbENvbW1hbmRMaW5lPXxzZWxpbnV4LWZhY3Rv
cnktcmVzZXQKK0NvbmRpdGlvblBhdGhFeGlzdHM9fCEvdmFyL2xpYi9zZWxpbnV4LyVJL2FjdGl2
ZS9wb2xpY3kua2VybgorCitbU2VydmljZV0KK0V4ZWNTdGFydD0vdXNyL2xpYmV4ZWMvc2VsaW51
eC9zZWxpbnV4LWZhY3RvcnktcmVzZXQgJUkKK1R5cGU9b25lc2hvdAorVGltZW91dFNlYz0wCitS
ZW1haW5BZnRlckV4aXQ9eWVzCitTdGFuZGFyZElucHV0PXR0eQpkaWZmIC0tZ2l0IGEvc2VsaW51
eC1wb2xpY3kuc3BlYyBiL3NlbGludXgtcG9saWN5LnNwZWMKaW5kZXggMTQzYTZmNy4uZjcyZTIx
MyAxMDA2NDQKLS0tIGEvc2VsaW51eC1wb2xpY3kuc3BlYworKysgYi9zZWxpbnV4LXBvbGljeS5z
cGVjCkBAIC01Niw2ICs1NiwxMiBAQCBTb3VyY2UyOTogc2VyZWZwb2xpY3ktY29udHJpYi0le3Zl
cnNpb259LnRnegogU291cmNlMzA6IGJvb2xlYW5zLnN1YnNfZGlzdAogCiBTb3VyY2UzNTogZG9j
a2VyLXNlbGludXgudGd6CisKKyMgRG8gYSBmYWN0b3J5IHJlc2V0IHdoZW4gdGhlcmUncyBubyBw
b2xpY3kua2VybiBmaWxlIGluIGEgc3RvcmUKKyMgaHR0cDovL2J1Z3ppbGxhLnJlZGhhdC5jb20v
MTI5MDY1OQorU291cmNlMTAwOiBzZWxpbnV4LWZhY3RvcnktcmVzZXQKK1NvdXJjZTEwMTogc2Vs
aW51eC1mYWN0b3J5LXJlc2V0QC5zZXJ2aWNlCisKIFVybDogaHR0cDovL2dpdGh1Yi5jb20vVHJl
c3lzVGVjaG5vbG9neS9yZWZwb2xpY3kvd2lraQogQnVpbGRSb290OiAle190bXBwYXRofS8le25h
bWV9LSV7dmVyc2lvbn0tJXtyZWxlYXNlfS1yb290LSUoJXtfX2lkX3V9IC1uKQogQnVpbGRBcmNo
OiBub2FyY2gKQEAgLTI1MCw2ICsyNTYsMTAgQEAgcm0gLXJmICV7YnVpbGRyb290fSV7X3N5c2Nv
bmZkaXJ9L3NlbGludXgvJTEvbW9kdWxlcy9hY3RpdmUvcG9saWN5Lmtlcm4gXAogJXtfc2hhcmVk
c3RhdGVkaXJ9L3NlbGludXgvJTEvYWN0aXZlL3NldXNlcnMgXAogJXtfc2hhcmVkc3RhdGVkaXJ9
L3NlbGludXgvJTEvYWN0aXZlL2ZpbGVfY29udGV4dHMgXAogJXtfc2hhcmVkc3RhdGVkaXJ9L3Nl
bGludXgvJTEvYWN0aXZlL3BvbGljeS5rZXJuIFwKKyV7X2RhdGFkaXJ9L3NlbGludXgvJTEgXAor
JXtfbGliZXhlY2Rpcn0vc2VsaW51eC9zZWxpbnV4LWZhY3RvcnktcmVzZXQgXAorJXtfdW5pdGRp
cn0vc2VsaW51eC1mYWN0b3J5LXJlc2V0QC5zZXJ2aWNlIFwKKyV7X3VuaXRkaXJ9L2Jhc2ljLnRh
cmdldC53YW50cy9zZWxpbnV4LWZhY3RvcnktcmVzZXRAJTEuc2VydmljZSBcCiAlbmlsCiAKICVk
ZWZpbmUgcmVsYWJlbCgpIFwKQEAgLTMwOSw3ICszMTksMTggQEAgZm9yIGkgaW4gJGNvbnRyaWJf
bW9kdWxlcyAkYmFzZV9tb2R1bGVzOyBkbyBcCiAgICAgaWYgWyAkaSAhPSAic2FuZGJveCIgXTt0
aGVuIFwKICAgICAgICAgZWNobyAiJXZlcmlmeShub3QgbWQ1IHNpemUgbXRpbWUpICV7X3NoYXJl
ZHN0YXRlZGlyfS9zZWxpbnV4LyUxL2FjdGl2ZS9tb2R1bGVzLzEwMC8kaSIgPj4gJXtidWlsZHJv
b3R9LyV7X3Vzcn0vc2hhcmUvc2VsaW51eC8lMS9ub25iYXNlbW9kdWxlcy5sc3QgXAogICAgIGZp
OyBcCi1kb25lCitkb25lOworCislZGVmaW5lIGluc3RhbGxGYWN0b3J5UmVzZXRGaWxlcygpIFwK
K21rZGlyIC1wICV7YnVpbGRyb290fSV7X2RhdGFkaXJ9L3NlbGludXgvJTEvZGVmYXVsdCBcCitj
cCAtUiAtLXByZXNlcnZlPW1vZGUsb3duZXJzaGlwLHRpbWVzdGFtcHMsbGlua3MgJXtidWlsZHJv
b3R9JXtfc2hhcmVkc3RhdGVkaXJ9L3NlbGludXgvJTEvYWN0aXZlICV7YnVpbGRyb290fSV7X2Rh
dGFkaXJ9L3NlbGludXgvJTEvZGVmYXVsdC8gXAorZmluZCAle2J1aWxkcm9vdH0le19kYXRhZGly
fS9zZWxpbnV4LyUxL2RlZmF1bHQvIC1uYW1lIGhsbCB8IHhhcmdzIHJtIFwKK2ZpbmQgJXtidWls
ZHJvb3R9JXtfZGF0YWRpcn0vc2VsaW51eC8lMS9kZWZhdWx0LyAtbmFtZSBsYW5nX2V4dCB8IHhh
cmdzIHNlZCAtaSAncy9wcC9jaWwvJyBcCitta2RpciAtcCAle2J1aWxkcm9vdH0vJXtfbGliZXhl
Y2Rpcn0vc2VsaW51eC8gXAoraW5zdGFsbCAtcCAle1NPVVJDRTEwMH0gJXtidWlsZHJvb3R9LyV7
X2xpYmV4ZWNkaXJ9L3NlbGludXgvIFwKK21rZGlyICAgLW0gNzU1IC1wICV7YnVpbGRyb290fS8l
e191bml0ZGlyfS9iYXNpYy50YXJnZXQud2FudHMvIFwKK2luc3RhbGwgLW0gNjQ0IC1wICV7U09V
UkNFMTAxfSAle2J1aWxkcm9vdH0vJXtfdW5pdGRpcn0vIFwKK2xuIC1zIC4uL3NlbGludXgtZmFj
dG9yeS1yZXNldEAuc2VydmljZSAle2J1aWxkcm9vdH0vJXtfdW5pdGRpcn0vYmFzaWMudGFyZ2V0
LndhbnRzL3NlbGludXgtZmFjdG9yeS1yZXNldEAlMS5zZXJ2aWNlCiAKICVidWlsZAogCkBAIC0z
NjIsOCArMzgzLDkgQEAgcm0gLXJmICV7YnVpbGRyb290fS9wZXJtaXNzaXZlZG9tYWlucy5jaWwK
IHJtIC1yZiAle2J1aWxkcm9vdH0le19zaGFyZWRzdGF0ZWRpcn0vc2VsaW51eC90YXJnZXRlZC9h
Y3RpdmUvbW9kdWxlcy8xMDAvc2FuZGJveAogbWFrZSBVTktfUEVSTVM9JTQgTkFNRT0lMSBUWVBF
PSUyIERJU1RSTz0le2Rpc3Ryb30gVUJBQz1uIERJUkVDVF9JTklUUkM9JTMgTU9OT0xJVEhJQz0l
e21vbm9saXRoaWN9IERFU1RESVI9JXtidWlsZHJvb3R9IE1MU19DQVRTPTEwMjQgTUNTX0NBVFM9
MTAyNCBzYW5kYm94LnBwCiBtdiBzYW5kYm94LnBwICV7YnVpbGRyb290fS91c3Ivc2hhcmUvc2Vs
aW51eC9wYWNrYWdlcy9zYW5kYm94LnBwCi0lbW9kdWxlc0xpc3QgdGFyZ2V0ZWQgCislbW9kdWxl
c0xpc3QgdGFyZ2V0ZWQKICVub25CYXNlTW9kdWxlc0xpc3QgdGFyZ2V0ZWQKKyVpbnN0YWxsRmFj
dG9yeVJlc2V0RmlsZXMgdGFyZ2V0ZWQKICVlbmRpZgogCiAlaWYgJXtCVUlMRF9NSU5JTVVNfQpA
QCAtMzc3LDYgKzM5OSw3IEBAIHJtIC1mICV7YnVpbGRyb290fS8le19zeXNjb25mZGlyfS9zZWxp
bnV4L21pbmltdW0vbW9kdWxlcy9hY3RpdmUvbW9kdWxlcy9zYW5kYm94CiBybSAtcmYgJXtidWls
ZHJvb3R9JXtfc2hhcmVkc3RhdGVkaXJ9L3NlbGludXgvbWluaW11bS9hY3RpdmUvbW9kdWxlcy8x
MDAvc2FuZGJveAogJW1vZHVsZXNMaXN0IG1pbmltdW0KICVub25CYXNlTW9kdWxlc0xpc3QgbWlu
aW11bQorJWluc3RhbGxGYWN0b3J5UmVzZXRGaWxlcyBtaW5pbXVtCiAlZW5kaWYKIAogJWlmICV7
QlVJTERfTUxTfQpAQCAtMzg2LDYgKzQwOSw3IEBAIHJtIC1yZiAle2J1aWxkcm9vdH0le19zaGFy
ZWRzdGF0ZWRpcn0vc2VsaW51eC9taW5pbXVtL2FjdGl2ZS9tb2R1bGVzLzEwMC9zYW5kYm94CiAl
aW5zdGFsbENtZHMgbWxzIG1scyBuIGRlbnkKICVtb2R1bGVzTGlzdCBtbHMKICVub25CYXNlTW9k
dWxlc0xpc3QgbWxzCislaW5zdGFsbEZhY3RvcnlSZXNldEZpbGVzIG1scwogJWVuZGlmCiAKIG1r
ZGlyIC1wICV7YnVpbGRyb290fSV7X21hbmRpcn0KLS0gCjIuOS4zCgo=
</data>

          </attachment>
      

    </bug>

</bugzilla>