<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1351341</bug_id>
          
          <creation_ts>2016-06-29 15:23:00 -0400</creation_ts>
          <short_desc>gcc -fsanitize=address fails to link objects that contain &quot;longjmp&quot; call</short_desc>
          <delta_ts>2016-07-05 00:56:48 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>binutils</component>
          <version>24</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Michael Stahl">mstahl</reporter>
          <assigned_to name="Nick Clifton">nickc</assigned_to>
          <cc>codonell</cc>
    
    
    <cc>fweimer</cc>
    
    
    <cc>jakub</cc>
    
    
    <cc>nickc</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>binutils-2.26.1-1.fc24</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-07-05 00:56:48</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9466049</commentid>
    <comment_count>0</comment_count>
    <who name="Michael Stahl">mstahl</who>
    <bug_when>2016-06-29 15:23:46 -0400</bug_when>
    <thetext>Description of problem:

linking an executable where objects contain a call to &quot;longjmp&quot;
fails when &quot;-fsanitize=address&quot; is used


Version-Release number of selected component (if applicable):

binutils-2.26-18.fc24.x86_64
glibc-2.23.1-8.fc24.x86_64
glibc-devel-2.23.1-8.fc24.i686
glibc-all-langpacks-2.23.1-8.fc24.x86_64
glibc-2.23.1-8.fc24.i686
glibc-headers-2.23.1-8.fc24.x86_64
glibc-common-2.23.1-8.fc24.x86_64
glibc-devel-2.23.1-8.fc24.x86_64
libgcc-6.1.1-3.fc24.x86_64
gcc-c++-6.1.1-3.fc24.x86_64
gcc-6.1.1-3.fc24.x86_64
libgcc-6.1.1-3.fc24.i686
libasan-static-6.1.1-3.fc24.i686
libasan-static-6.1.1-3.fc24.x86_64
libasan-6.1.1-3.fc24.i686
libasan-6.1.1-3.fc24.x86_64


How reproducible:
always

Steps to Reproduce:
1. cat &gt; foo.c

#include &lt;setjmp.h&gt;
int main()
{
    jmp_buf foo;
    longjmp(foo, 0);
}

2. gcc -m32 -fsanitize=address foo.c


Actual results:

/usr/bin/ld: /usr/lib/libasan.so.3.0.0: undefined reference to symbol &apos;longjmp@GLIBC_2.0&apos;
/lib/libpthread.so.0: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status

the 64-bit build fails similarly, with a different symbol version:

/usr/bin/ld: /usr/lib64/libasan.so.3.0.0: undefined reference to symbol &apos;longjmp@GLIBC_2.2.5&apos;
/usr/lib64/libpthread.so.0: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status


Expected results:

executable is linked


Additional info:

this was found by building LibreOffice with &quot;-m32 -fsanitize=address&quot; with Executable_ucpp and Executable_oosplash

this used to work on Fedora 23</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9467980</commentid>
    <comment_count>1</comment_count>
    <who name="Nick Clifton">nickc</who>
    <bug_when>2016-06-30 06:53:44 -0400</bug_when>
    <thetext>The longjmp function has been moved into the pthread library.  (I do not know why).  So if you add -lpthread to your command line, eveyrything should work:

  gcc -m32 -fsanitize=address foo.c -lpthread</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9468009</commentid>
    <comment_count>2</comment_count>
    <who name="Florian Weimer">fweimer</who>
    <bug_when>2016-06-30 07:05:15 -0400</bug_when>
    <thetext>(In reply to Nick Clifton from comment #1)
&gt; The longjmp function has been moved into the pthread library.  (I do not
&gt; know why).

But there is a definition of longjmp in libc.so.6 with a default symbol version, so it should be picked up:

$ eu-readelf -s /lib/libc.so.6 | grep longjmp
  257: 00108ed0     85 FUNC    GLOBAL DEFAULT       13 __longjmp_chk@@GLIBC_2.11
  325: 0002d3e0     81 FUNC    WEAK   DEFAULT       13 _longjmp@@GLIBC_2.0
 1053: 0002d3e0     81 FUNC    WEAK   DEFAULT       13 longjmp@@GLIBC_2.0
…

But anyway, the intent is that the non-version interpositioning definition in libasan is used:

$ eu-readelf -s /lib/libasan.so.3 | grep longjmp
  524: 00028ea0     46 FUNC    WEAK   DEFAULT       12 _longjmp
  580: 00028e70     46 FUNC    WEAK   DEFAULT       12 longjmp
…

The ld command line looks like this:

[&quot;/usr/bin/ld&quot;, &quot;-plugin&quot;, &quot;/usr/libexec/gcc/x86_64-redhat-linux/6.1.1/liblto_plugin.so&quot;, &quot;-plugin-opt=/usr/libexec/gcc/x86_64-redhat-linux/6.1.1/lto-wrapper&quot;, &quot;-plugin-opt=-fresolution=/tmp/ccndqKIy.res&quot;, &quot;-plugin-opt=-pass-through=-lgcc&quot;, &quot;-plugin-opt=-pass-through=-lgcc_s&quot;, &quot;-plugin-opt=-pass-through=-lc&quot;, &quot;-plugin-opt=-pass-through=-lgcc&quot;, &quot;-plugin-opt=-pass-through=-lgcc_s&quot;, &quot;--build-id&quot;, &quot;--no-add-needed&quot;, &quot;--eh-frame-hdr&quot;, &quot;--hash-style=gnu&quot;, &quot;-m&quot;, &quot;elf_i386&quot;, &quot;-dynamic-linker&quot;, &quot;/lib/ld-linux.so.2&quot;, &quot;/usr/lib/gcc/x86_64-redhat-linux/6.1.1/../../../../lib/crt1.o&quot;, &quot;/usr/lib/gcc/x86_64-redhat-linux/6.1.1/../../../../lib/crti.o&quot;, &quot;/usr/lib/gcc/x86_64-redhat-linux/6.1.1/32/crtbegin.o&quot;, &quot;-L/usr/lib/gcc/x86_64-redhat-linux/6.1.1/32&quot;, &quot;-L/usr/lib/gcc/x86_64-redhat-linux/6.1.1/../../../../lib&quot;, &quot;-L/lib/../lib&quot;, &quot;-L/usr/lib/../lib&quot;, &quot;-L/usr/lib/gcc/x86_64-redhat-linux/6.1.1&quot;, &quot;-L/usr/lib/gcc/x86_64-redhat-linux/6.1.1/../../..&quot;, &quot;/usr/lib/gcc/x86_64-redhat-linux/6.1.1/32/libasan_preinit.o&quot;, &quot;-lasan&quot;, &quot;/tmp/cc82m9kC.o&quot;, &quot;-lgcc&quot;, &quot;--as-needed&quot;, &quot;-lgcc_s&quot;, &quot;--no-as-needed&quot;, &quot;-lc&quot;, &quot;-lgcc&quot;, &quot;--as-needed&quot;, &quot;-lgcc_s&quot;, &quot;--no-as-needed&quot;, &quot;/usr/lib/gcc/x86_64-redhat-linux/6.1.1/32/crtend.o&quot;, &quot;/usr/lib/gcc/x86_64-redhat-linux/6.1.1/../../../../lib/crtn.o&quot;]

Why isn&apos;t ld able to find a definition for the longjmp symbol?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9468538</commentid>
    <comment_count>3</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-06-30 09:07:26 -0400</bug_when>
    <thetext>binutils-2.26.1-1.fc24 has been submitted as an update to Fedora 24. https://bodhi.fedoraproject.org/updates/FEDORA-2016-afcbebcc78</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9468546</commentid>
    <comment_count>4</comment_count>
    <who name="Nick Clifton">nickc</who>
    <bug_when>2016-06-30 09:09:28 -0400</bug_when>
    <thetext>Good news, bad bews:

Bad news - the problem is a linker bug.  I think that it is probably because the longjmp symbol in libc.so.6 is weak, but I could not find a binutils PR to match
against this.

Good news - the bug is fixed in the 2.26.1 FSF binutils point release, and yesterday I upgraded the F24 binutils to use these new sources.  So if you try
out:

  binutils-2.26.1-1.fc24

The problem should go away.  I have submitted a bohdi request to have this new
rpm released as an update.

(As an aside, I have not updated rawhide because the new FSF 2.27 release is
due to come out soon).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9474278</commentid>
    <comment_count>5</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-07-02 16:30:58 -0400</bug_when>
    <thetext>binutils-2.26.1-1.fc24 has been pushed to the Fedora 24 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-afcbebcc78</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9479800</commentid>
    <comment_count>6</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-07-05 00:56:44 -0400</bug_when>
    <thetext>binutils-2.26.1-1.fc24 has been pushed to the Fedora 24 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>