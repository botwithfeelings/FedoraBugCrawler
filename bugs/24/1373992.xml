<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1373992</bug_id>
          
          <creation_ts>2016-09-07 11:43:00 -0400</creation_ts>
          <short_desc>[RFE] repo configured using &quot;baseurl&quot; should only be re-downloaded when changed, just like repo with &quot;metalink&quot;</short_desc>
          <delta_ts>2017-03-10 05:59:37 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>dnf</component>
          <version>24</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Triaged, UserExperience</keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alan Jenkins">alan.christopher.jenkins</reporter>
          <assigned_to name="Igor Gnatenko">ignatenko</assigned_to>
          <cc>ignatenko</cc>
    
    
    <cc>jmracek</cc>
    
    
    <cc>mluscon</cc>
    
    
    <cc>packaging-team-maint</cc>
    
    
    <cc>pnemade</cc>
    
    
    <cc>rpm-software-management</cc>
    
    
    <cc>vmukhame</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>dnf-2.0.1-1</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-03-10 05:59:37</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9687307</commentid>
    <comment_count>0</comment_count>
    <who name="Alan Jenkins">alan.christopher.jenkins</who>
    <bug_when>2016-09-07 11:43:55 -0400</bug_when>
    <thetext>Description of problem:

When baseurl is *not* used, dnf apparently checks whether the repo has changed, before re-downloading it.

When dnf is configured with a repo with a baseurl (i.e. for a local repo) and the cache passes it&apos;s maximum age, dnf has to download tens of megabytes.


Version-Release number of selected component (if applicable): 
dnf-1.1.10-1.fc24.noarch

How reproducible: always

Steps to Reproduce:
1. edit /etc/yum.repo.d/fedora.repo, comment out &quot;metalink&quot; and uncomment &quot;baseurl&quot;
2. dnf --refresh check-update
3. dnf --refresh check-update

Actual results:

Step 3 re-downloads 10s of megabytes, despite the repo not having changed since step 2.

Expected results:

Only repomd.xml needs to be re-downloaded to check for changes.


Additional info:

I noticed this after configuring my system with baseurl.  I checked the source code of dnf and found this code, which relies on metalink.

The check could be changed, or a check added, to re-download repomd.xml, if the file contents are identical then the existing cache can be re-used.


        if self.metadata or self._try_cache():
            if self.sync_strategy in (SYNC_ONLY_CACHE, SYNC_LAZY) or \
               not self._expired:
                logger.debug(&apos;repo: using cache for: %s&apos;, self.id)
                return False
        if self.sync_strategy == SYNC_ONLY_CACHE:
            msg = &quot;Cache-only enabled but no cache for &apos;%s&apos;&quot; % self.id
            raise dnf.exceptions.RepoError(msg)
        try:
            if self._try_revive():
                # the expired metadata still reflect the origin:
                self.metadata.reset_age()
                self._expired = False
                return True


    def _try_revive(self):
        &quot;&quot;&quot;Use metalink to check whether our metadata are still current.&quot;&quot;&quot;
        if not self.metadata:
            return False
        if not self.metalink:
            return False</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9698586</commentid>
    <comment_count>1</comment_count>
    <who name="Igor Gnatenko">ignatenko</who>
    <bug_when>2016-09-12 07:21:10 -0400</bug_when>
    <thetext>https://github.com/rpm-software-management/dnf/pull/601</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10227845</commentid>
    <comment_count>2</comment_count>
    <who name="Jaroslav Mracek">jmracek</who>
    <bug_when>2017-03-10 05:59:37 -0500</bug_when>
    <thetext>Fixed in dnf-2.0.1-1 and released into rawhide</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>