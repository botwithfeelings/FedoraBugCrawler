<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1380813</bug_id>
          
          <creation_ts>2016-09-30 12:10:00 -0400</creation_ts>
          <short_desc>Linux capabilities on container have no effect</short_desc>
          <delta_ts>2016-10-04 08:06:02 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>docker</component>
          <version>24</version>
          <rep_platform>x86_64</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>NEXTRELEASE</resolution>
          
          
          <bug_file_loc>https://github.com/docker/docker/pull/22554</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>medium</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jean-Christophe Berthon">huygens</reporter>
          <assigned_to name="Daniel Walsh">dwalsh</assigned_to>
          <cc>adimania</cc>
    
    
    <cc>admiller</cc>
    
    
    <cc>amurdaca</cc>
    
    
    <cc>dwalsh</cc>
    
    
    <cc>huygens</cc>
    
    
    <cc>ichavero</cc>
    
    
    <cc>jcajka</cc>
    
    
    <cc>jchaloup</cc>
    
    
    <cc>lsm5</cc>
    
    
    <cc>marianne</cc>
    
    
    <cc>miminar</cc>
    
    
    <cc>nalin</cc>
    
    
    <cc>riek</cc>
    
    
    <cc>vbatts</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>1.12.0</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-10-04 08:06:02</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9757988</commentid>
    <comment_count>0</comment_count>
    <who name="Jean-Christophe Berthon">huygens</who>
    <bug_when>2016-09-30 12:10:53 -0400</bug_when>
    <thetext>Description of problem:

I have created a Docker container to run a ntpd server. The container is based on Ubuntu 16.04 and install the ntp package from www.ntp.org.
The container can be successfully run on Ubuntu 16.04 (with AppArmor), on CentOS 7 (with SELinux enabled) but fails on Fedora 24 (irrespectively of the status of SELinux).
In order to run a ntp daemon in an unprivileged container, one has to add the SYS_TIME Linux capability. This can be done easily by using the &quot;--cap-add SYS_TIME&quot; option to Docker. It works well on Ubuntu and CentOS (so adjtime works) but fails with permission denied on Fedora 24 (tested with SELinux enforcing and disabled).

Strangely the ntpd process running inside the container has the correct Linux capabilities set. Seen from the host, I can see this:
Capabilities: &quot;= cap_setgid,cap_setuid,cap_net_bind_service,cap_sys_chroot,cap_sys_time+ep&quot;

It seems as if the capability was simply ignored by the Fedora kernel. I&apos;m using kernel 4.7.2 and 4.7.4.

I&apos;ve tried with the official Docker from Fedora repos (1.10.3) and I&apos;ve even installed the latest Docker from Docker website (1.12.1), but it fails with the same error.

Version-Release number of selected component (if applicable):

Kernel 4.7.2 and 4.7.4
Docker 1.10.3 and 1.12.1

How reproducible:

Everytime. And I&apos;ve reproduced it on 2 different Fedora 24 instance (on one computer, and on one VM). 

Steps to Reproduce:
1. You can use my Dockerfile: https://github.com/jcberthon/containers/tree/master/ntp
2. Simply put the Dockerfile in an empty directory, &apos;cd&apos; to that directory
3. Build the image: `docker build -t jcberthon/ntpd` .
4. Run the image a first time and stop it after a few seconds, this will trigger SELinux because ntpd cannot do &apos;module_request&apos; or something (Note: on CentOS 7 with SELinux, I do not have this issue!): check setroubleshoot, it will report this problem. I&apos;ve created a SELinux policy and applied it. To run the image: `docker run --cap-add SYS_TIME --cap-add SYS_RESOURCE jcberthon/ntpd -g -n`
5. Rerun the image with the same syntax. This time SELinux is quiet. But it still shows erros such as &quot;ntp_adjtime: Operation not permitted&quot;.
6. (optional) you can even do `sudo date -s &quot;5 seconds ago&quot;` to put your PC clock 5 seconds backward, you will see that ntp detects it but is unable to correct it. Whereas it work on CentOS 7 or Ubuntu 16.04.

Note: doing the above with SELinux disabled as the same outcome.

Actual results:
There is a permission denied.
The clock is not synchronised if step 6 is performed.

Expected results:
No permission denied printed, and when step 6 is performed, quickly after the clock is again synchronised.

Additional info:</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9758069</commentid>
    <comment_count>1</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2016-09-30 12:47:25 -0400</bug_when>
    <thetext>This must be a missing seccomp field.

Try running it with --security-opt seccomp:unconfined</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9760575</commentid>
    <comment_count>2</comment_count>
    <who name="Jean-Christophe Berthon">huygens</who>
    <bug_when>2016-10-03 06:00:12 -0400</bug_when>
    <thetext>Hi Daniel,

Thank you for the quick reply.

I&apos;ve added the option &apos;--security-opt seccomp:unconfined&apos; as you suggested. Running the container now does not yield the permission denied message.And after a few minutes, my clock is synchronised correctly.

I have no knowledge of seccomp, I understand that the option basically deactivate it. However, if I want to maintain seccomp how should I proceed? Is there a problem with the seccomp profile on Fedora (as opposed to the one on CentOS/Ubuntu)?

How can I further investigate?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9761183</commentid>
    <comment_count>3</comment_count>
    <who name="Jean-Christophe Berthon">huygens</who>
    <bug_when>2016-10-03 09:32:13 -0400</bug_when>
    <thetext>Hi again,

Going one more time through the documentation and checking the default Docker seccomp profile (https://github.com/docker/docker/blob/master/profiles/seccomp/default.json) I can see that adjtimex (and other time-related system call) are disabled by the seccomp profile, at least they are not whitelisted, but it seems that they should be allowed if SYS_TIME is defined.

So, as far as I understood, adding the capability SYS_TIME with the --add-cap option, should have overridden the time-related system call inhibition by the seccomp profile from docker engine.

I can&apos;t seem to find this default seccomp profile on my computer to verify that it is similar to the one in git (for which I gave the above link). I did check the file contains in the Docker rpm, but could not find it, perhaps it was statically compiled in the Docker executable?!?

I was using today the docker package from Fedora repository (Docker 1.10), I&apos;m going to try it again with Docker 1.12 from Docker repos, but as I reported last time, I was not luckier.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9761334</commentid>
    <comment_count>4</comment_count>
    <who name="Jean-Christophe Berthon">huygens</who>
    <bug_when>2016-10-03 09:55:14 -0400</bug_when>
    <thetext>OK, this time I did a very thorough uninstallation of Docker 1.10.3. Remove the LVM volumes, deleted the /var/lib/docker folder and even rebooted, just to be sure. After that I installed Docker 1.12.1 from the Docker repos and when I run my container (after rebuilding it), I did not need to set the &apos;--security-opt seccomp:unconfined&apos; option, it worked.

So this is either a Docker 1.10.3 bug, or the Fedora installation of Docker has an incorrect seccomp policy regarding the SYS_TIME system calls.

Note: As mentioned in my bug report, both CentOS 7 and Ubuntu 16.04 where running 1.12.1 from Docker repository and not the official packages from the respective distributions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9761467</commentid>
    <comment_count>5</comment_count>
    <who name="Daniel Walsh">dwalsh</who>
    <bug_when>2016-10-03 10:26:45 -0400</bug_when>
    <thetext>I believe docker-1.12 added the seccomp via cap-add support.  This does not exist for docker-1.10. 

Check if the distributions docker-latest-1.12 code works properly.  If that does not work then this is a bug in the distributions docker, if it works then I will close this as not a bug.

When kubernetes/openshift supports docker-1.12 we will upgrate the default package to include it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9763940</commentid>
    <comment_count>6</comment_count>
    <who name="Jean-Christophe Berthon">huygens</who>
    <bug_when>2016-10-04 04:32:31 -0400</bug_when>
    <thetext>Hi Daniel,

You are correct, this is a &quot;bug&quot; in Docker prior to 1.12. In the change log of 1.12.0 is written &quot;Align default seccomp profile with selected capabilities #22554&quot;. And the issue #22554: https://github.com/docker/docker/pull/22554

As I stated in comment #4 after careful uninstallation of the Fedora&apos;s docker 1.10.3, and installation of Docker 1.12.1 from Docker, the container has the correct permissions when running and is working as expected.

You can close this bug. I&apos;ve tried to add the reference to the docker issue, hopefully I used the correct field.

Thank you for your support.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>