<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1329342</bug_id>
          
          <creation_ts>2016-04-21 12:29:00 -0400</creation_ts>
          <short_desc>1.8.0.91-1.b14.fc25 (OpenJDK April CPU) breaks EC ciphers</short_desc>
          <delta_ts>2016-11-07 16:35:56 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>java-1.8.0-openjdk</component>
          <version>24</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>AcceptedFreezeException</status_whiteboard>
          <keywords>Reopened</keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1230434</blocked>
    
    
    <blocked>1230435</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Kevin Fenzi">kevin</reporter>
          <assigned_to name="jiri vanek">jvanek</assigned_to>
          <cc>ahughes</cc>
    
    
    <cc>akurtako</cc>
    
    
    <cc>awilliam</cc>
    
    
    <cc>dbhole</cc>
    
    
    <cc>hegjon</cc>
    
    
    <cc>jdulaney</cc>
    
    
    <cc>jerboaa</cc>
    
    
    <cc>jvanek</cc>
    
    
    <cc>kparal</cc>
    
    
    <cc>mailings</cc>
    
    
    <cc>msrb</cc>
    
    
    <cc>oliver.stutz</cc>
    
    
    <cc>omajid</cc>
    
    
    <cc>puiterwijk</cc>
    
    
    <cc>rmartine</cc>
    
    
    <cc>robatino</cc>
    
    
    <cc>robert</cc>
    
    
    <cc>sgehwolf</cc>
    
    
    <cc>tflink</cc>
    
    
    <cc>yprasannas</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>java-1.8.0-openjdk-1.8.0.91-2.b14.fc22 java-1.8.0-openjdk-1.8.0.91-2.b14.fc23 java-1.8.0-openjdk-1.8.0.91-2.b14.fc24</cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-05-03 14:06:15</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9258499</commentid>
    <comment_count>0</comment_count>
    <who name="Kevin Fenzi">kevin</who>
    <bug_when>2016-04-21 12:29:37 -0400</bug_when>
    <thetext>With 1.8.0.77-2.b03.fc25.x86_64 zanata-cli works fine. If I upgrade to 1.8.0.91-1.b14.fc25 I get: 

[ERROR] Execution failed: 
com.sun.jersey.api.client.ClientHandlerException: javax.net.ssl.SSLException: java.security.ProviderException: java.security.KeyException
	at com.sun.jersey.client.urlconnection.URLConnectionClientHandler.handle(URLConnectionClientHandler.java:155)
	at org.zanata.rest.client.RedirectFilter.handle(RedirectFilter.java:45)
	at org.zanata.rest.client.ApiKeyHeaderFilter.handleNext(ApiKeyHeaderFilter.java:59)
	at org.zanata.rest.client.ApiKeyHeaderFilter.handle(ApiKeyHeaderFilter.java:54)
	at org.zanata.rest.client.AcceptTypeFilter.handle(AcceptTypeFilter.java:47)
	at org.zanata.rest.client.TraceDebugFilter.handle(TraceDebugFilter.java:60)
	at org.zanata.rest.client.InvalidContentTypeFilter.handle(InvalidContentTypeFilter.java:61)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:694)
	at com.sun.jersey.api.client.WebResource.get(WebResource.java:198)
	at org.zanata.rest.client.ProjectIterationLocalesClient.getLocales(ProjectIterationLocalesClient.java:54)
	at org.zanata.client.commands.OptionsUtil.fetchLocalesFromServer(OptionsUtil.java:114)
	at org.zanata.client.commands.OptionsUtil.applyConfigFiles(OptionsUtil.java:101)
	at org.zanata.client.commands.ArgsUtil.runCommand(ArgsUtil.java:41)
	at org.zanata.client.ZanataClient.processArgs(ZanataClient.java:170)
	at org.zanata.client.ZanataClient.main(ZanataClient.java:95)
Caused by: javax.net.ssl.SSLException: java.security.ProviderException: java.security.KeyException
	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949)
	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906)
	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1889)
	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1410)
	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387)
	at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1513)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338)
	at com.sun.jersey.client.urlconnection.URLConnectionClientHandler._invoke(URLConnectionClientHandler.java:253)
	at com.sun.jersey.client.urlconnection.URLConnectionClientHandler.handle(URLConnectionClientHandler.java:153)
	... 15 more
Caused by: java.security.ProviderException: java.security.KeyException
	at sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:147)
	at java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:703)
	at sun.security.ssl.ECDHCrypt.&lt;init&gt;(ECDHCrypt.java:77)
	at sun.security.ssl.ClientHandshaker.serverKeyExchange(ClientHandshaker.java:721)
	at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:281)
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:979)
	at sun.security.ssl.Handshaker.process_record(Handshaker.java:914)
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1062)
	at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375)
	at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403)
	... 24 more
Caused by: java.security.KeyException
	at sun.security.ec.ECKeyPairGenerator.generateECKeyPair(Native Method)
	at sun.security.ec.ECKeyPairGenerator.generateKeyPair(ECKeyPairGenerator.java:128)
	... 33 more

This may be a zanata-cli bug, feel free to move it if so, but it does seem to work or not based on the java version installed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9258588</commentid>
    <comment_count>1</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-04-21 13:11:09 -0400</bug_when>
    <thetext>How would we reproduce this? 1.8.0.91-1.b14 got some changes to crypto libs, but it&apos;s hard to tell from this stack trace only.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260422</commentid>
    <comment_count>2</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 06:15:12 -0400</bug_when>
    <thetext>Eclipse hit it too:
https://paste.fedoraproject.org/358513/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260430</commentid>
    <comment_count>3</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 06:18:34 -0400</bug_when>
    <thetext>Thats reproducible when you run eclipse updater</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260436</commentid>
    <comment_count>4</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 06:20:49 -0400</bug_when>
    <thetext>AFAIK jdk disabled few legacy algorithms, and when server can not use newer, then you got this exception. From top of my head, I&apos;m now nto able to find them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260463</commentid>
    <comment_count>5</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-04-22 06:34:24 -0400</bug_when>
    <thetext>(In reply to jiri vanek from comment #3)
&gt; Thats reproducible when you run eclipse updater

This doesn&apos;t exactly help. We&apos;d need a https URL which works before and no longer works after. Then we should have a reproducer.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260473</commentid>
    <comment_count>6</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 06:38:46 -0400</bug_when>
    <thetext>Reproducer:

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author jvanek
 */
public class HttpsCheck {

    static String[] urls = {
    &quot;https://bugzilla.redhat.com/&quot;,
    &quot;https://dl.bintray.com/fabioz/pydev/4.5.5/&quot;,
    &quot;https://hudson.eclipse.org/cdt/job/launchbar-master/lastSuccessfulBuild/artifact/repo/target/repository&quot;};
    
            public static void main(String[] args) throws Exception{
                for (String url : urls) {
                    URL u = new URL(url);
                    InputStream is = u.openStream();
                    BufferedReader bw = new BufferedReader(new InputStreamReader(is,&quot;utf8&quot;));
                    StringBuilder page = new StringBuilder();
                    while(true){
                        String s = bw.readLine();
                        if (s == null){
                            break;
                        }
                        page.append(s);
                    }
                    System.out.println(page.toString());
                }
    }
    
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260484</commentid>
    <comment_count>7</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 06:43:26 -0400</bug_when>
    <thetext>https://java.com/en/download/faq/release_changes.xml is mentioning only  MD5withRSA may it be so widespread?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260487</commentid>
    <comment_count>8</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 06:47:04 -0400</bug_when>
    <thetext>java.security file is same as in u77</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260593</commentid>
    <comment_count>12</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 07:32:59 -0400</bug_when>
    <thetext>fyi:
https://bugs.gentoo.org/show_bug.cgi?id=579676#c6
http://icedtea.classpath.org/bugzilla/show_bug.cgi?id=2934</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260598</commentid>
    <comment_count>13</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 07:36:20 -0400</bug_when>
    <thetext>However, the mentioned test IS included
http://pkgs.fedoraproject.org/cgit/rpms/java-1.8.0-openjdk.git/tree/java-1.8.0-openjdk.spec#n817
run
http://pkgs.fedoraproject.org/cgit/rpms/java-1.8.0-openjdk.git/tree/java-1.8.0-openjdk.spec#n1390
and 
according to logs:
http://koji.fedoraproject.org/koji/taskinfo?taskID=13734068

passed</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9260603</commentid>
    <comment_count>14</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-22 07:38:44 -0400</bug_when>
    <thetext>(In reply to jiri vanek from comment #13)
&gt; However, the mentioned test IS included
&gt; http://pkgs.fedoraproject.org/cgit/rpms/java-1.8.0-openjdk.git/tree/java-1.8.
&gt; 0-openjdk.spec#n817

ah.. is NOT run

&gt; http://pkgs.fedoraproject.org/cgit/rpms/java-1.8.0-openjdk.git/tree/java-1.8.
&gt; 0-openjdk.spec#n1390
&gt; and 
&gt; according to logs:
&gt; http://koji.fedoraproject.org/koji/taskinfo?taskID=13734068</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9261564</commentid>
    <comment_count>15</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-04-22 12:25:55 -0400</bug_when>
    <thetext>It fails in EC_NewKey() on line 124[1] which in turn fails in ec_GenerateRandomPrivateKey()[2] which returns NULL:

    // Generate the new keypair (using the supplied seed)
    if (EC_NewKey(ecparams, &amp;privKey, (unsigned char *) pSeedBuffer,
        jSeedLength, 0) != SECSuccess) {
        ThrowException(env, KEY_EXCEPTION);
        goto cleanup;
    }

[1] http://hg.openjdk.java.net/aarch64-port/jdk8u/jdk/file/0e757f8bf24c/src/share/native/sun/security/ec/ECC_JNI.cpp#l124
[2] http://hg.openjdk.java.net/aarch64-port/jdk8u/jdk/file/0e757f8bf24c/src/share/native/sun/security/ec/impl/ec.c#l383</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9261633</commentid>
    <comment_count>16</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-04-22 12:40:55 -0400</bug_when>
    <thetext>Sorry wrong sources. Those functions come from system nss, not openjdk. Can&apos;t find the links :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9261639</commentid>
    <comment_count>17</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-04-22 12:44:34 -0400</bug_when>
    <thetext>Here they are:
[1] https://hg.mozilla.org/projects/nss/file/NSS_3_23_RTM/lib/freebl/ec.c#l391
[2] https://hg.mozilla.org/projects/nss/file/NSS_3_23_RTM/lib/freebl/ec.c#l342</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9261650</commentid>
    <comment_count>18</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-04-22 12:53:45 -0400</bug_when>
    <thetext>http://icedtea.classpath.org/bugzilla/show_bug.cgi?id=2934

I suggest removing Alex&apos;s patch for now:

Patch517: pr2899.patch

until we have a proper resolution. 

There is a test for this in the RPM. I suspect the disabling of this test has been wrongly synced across from RHEL 7.3 (which hasn&apos;t shipped yet) to Fedora.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9261838</commentid>
    <comment_count>19</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-04-22 14:19:34 -0400</bug_when>
    <thetext>Ok, try this:

http://icedtea.classpath.org/hg/release/icedtea8-forest-3.0/jdk/rev/dab76de2f91c

It makes the ECDSATest pass locally.

$ /mnt/builder/icedtea-3.0/images/j2sdk-image/bin/java ECDSATest
Signature: 3046022100afd27e5b82c3b3e607e4a0568691e1e817672e45ed1f7f1f62f2273ad021aa8b0221008aceea3a84a688426aa34151c1d5abb385250d6fdfdd47c02f5a7c694d9939c1
Test passed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9262016</commentid>
    <comment_count>20</comment_count>
    <who name="Omair Majid">omajid</who>
    <bug_when>2016-04-22 16:05:14 -0400</bug_when>
    <thetext>In reply to Andrew John Hughes from comment #19)
&gt; Ok, try this:
&gt; 
&gt; http://icedtea.classpath.org/hg/release/icedtea8-forest-3.0/jdk/rev/
&gt; dab76de2f91c

I tried a scratch build:
http://koji.fedoraproject.org/koji/taskinfo?taskID=13764668

The new patch being applied in the build log:

Patch #518 (pr2934-system-nss.patch):
+ echo &apos;Patch #518 (pr2934-system-nss.patch):&apos;
+ /usr/bin/patch -p0 --fuzz=0
patching file openjdk/jdk/src/share/native/sun/security/ec/ECC_JNI.cpp
patching file openjdk/jdk/src/share/native/sun/security/ec/ecc_impl.h

The test result from the build log:
+ /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.91-1.b14.fc23.i386/openjdk/build/jdk8.build/images/j2sdk-image/bin/javac -d . /builddir/build/SOURCES/TestECDSA.java
++ sed &apos;s|\.java||&apos;
+++ basename /builddir/build/SOURCES/TestECDSA.java
++ echo TestECDSA.java
+ /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.91-1.b14.fc23.i386/openjdk/build/jdk8.build/images/j2sdk-image/bin/java TestECDSA
Signature: 30460221008358fef430add1b9d4b0aa7c1ddf846b23271a9129c6d53b0127d9bbca4f3f46022100a2431012bf257898fe56a2e28032ccba521649ce67bb2c2b0536d998852e5b69
Test passed.

Should I add the patch in F22, F23, F24 and Rawhide?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9262044</commentid>
    <comment_count>21</comment_count>
    <who name="Kevin Fenzi">kevin</who>
    <bug_when>2016-04-22 16:17:58 -0400</bug_when>
    <thetext>I can confirm that scratch build gets zanata-cli working again here. ;)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263017</commentid>
    <comment_count>22</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-04-23 19:05:07 -0400</bug_when>
    <thetext>&gt; Should I add the patch in F22, F23, F24 and Rawhide?

Yeah, I&apos;ve already added it in RHEL but can&apos;t commit to Fedora. Just backported the most recent rhel-7.3 changeset.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263018</commentid>
    <comment_count>23</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-04-23 19:05:43 -0400</bug_when>
    <thetext>(In reply to Andrew John Hughes from comment #22)
&gt; &gt; Should I add the patch in F22, F23, F24 and Rawhide?
&gt; 
&gt; Yeah, I&apos;ve already added it in RHEL but can&apos;t commit to Fedora. Just
&gt; backported the most recent rhel-7.3 changeset.

&apos;backport&apos; even... sigh.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263299</commentid>
    <comment_count>24</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-24 05:11:39 -0400</bug_when>
    <thetext>(In reply to Omair Majid from comment #20)
&gt; In reply to Andrew John Hughes from comment #19)
&gt; &gt; Ok, try this:
&gt; &gt; 
&gt; &gt; http://icedtea.classpath.org/hg/release/icedtea8-forest-3.0/jdk/rev/
&gt; &gt; dab76de2f91c
&gt; 
&gt; I tried a scratch build:
&gt; http://koji.fedoraproject.org/koji/taskinfo?taskID=13764668
&gt; 
&gt; The new patch being applied in the build log:
&gt; 
&gt; Patch #518 (pr2934-system-nss.patch):
&gt; + echo &apos;Patch #518 (pr2934-system-nss.patch):&apos;
&gt; + /usr/bin/patch -p0 --fuzz=0
&gt; patching file openjdk/jdk/src/share/native/sun/security/ec/ECC_JNI.cpp
&gt; patching file openjdk/jdk/src/share/native/sun/security/ec/ecc_impl.h
&gt; 
&gt; The test result from the build log:
&gt; +
&gt; /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.91-1.b14.fc23.i386/openjdk/
&gt; build/jdk8.build/images/j2sdk-image/bin/javac -d .
&gt; /builddir/build/SOURCES/TestECDSA.java
&gt; ++ sed &apos;s|\.java||&apos;
&gt; +++ basename /builddir/build/SOURCES/TestECDSA.java
&gt; ++ echo TestECDSA.java
&gt; +
&gt; /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.91-1.b14.fc23.i386/openjdk/
&gt; build/jdk8.build/images/j2sdk-image/bin/java TestECDSA
&gt; Signature:
&gt; 30460221008358fef430add1b9d4b0aa7c1ddf846b23271a9129c6d53b0127d9bbca4f3f46022
&gt; 100a2431012bf257898fe56a2e28032ccba521649ce67bb2c2b0536d998852e5b69
&gt; Test passed.
&gt; 
&gt; Should I add the patch in F22, F23, F24 and Rawhide?

Patch is applied  and test enabled  in f22-f25. builds running</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263551</commentid>
    <comment_count>25</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-04-24 12:51:35 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc23 has been submitted as an update to Fedora 23. https://bodhi.fedoraproject.org/updates/FEDORA-2016-0f7c893042</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263557</commentid>
    <comment_count>26</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-04-24 13:00:11 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc22 has been submitted as an update to Fedora 22. https://bodhi.fedoraproject.org/updates/FEDORA-2016-c283d0e78e</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263561</commentid>
    <comment_count>27</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-04-24 13:07:47 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc24 has been submitted as an update to Fedora 24. https://bodhi.fedoraproject.org/updates/FEDORA-2016-9f5172b1c5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263607</commentid>
    <comment_count>28</comment_count>
    <who name="Jonny Heggheim">hegjon</who>
    <bug_when>2016-04-24 15:38:24 -0400</bug_when>
    <thetext>*** Bug 1329909 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263608</commentid>
    <comment_count>29</comment_count>
    <who name="Jonny Heggheim">hegjon</who>
    <bug_when>2016-04-24 15:41:14 -0400</bug_when>
    <thetext>FEDORA-2016-9f5172b1c5 fixed duplicate bug 1329909</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263760</commentid>
    <comment_count>30</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-04-24 20:20:34 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc22 has been pushed to the Fedora 22 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-c283d0e78e</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9263769</commentid>
    <comment_count>31</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-04-24 20:22:43 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc23 has been pushed to the Fedora 23 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-0f7c893042</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9265721</commentid>
    <comment_count>32</comment_count>
    <who name="Robert Marcano">robert</who>
    <bug_when>2016-04-25 10:21:55 -0400</bug_when>
    <thetext>*** Bug 1330163 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9266341</commentid>
    <comment_count>33</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-04-25 13:52:05 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc24 has been pushed to the Fedora 24 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2016-9f5172b1c5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9266961</commentid>
    <comment_count>34</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-04-25 18:20:19 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc22 has been pushed to the Fedora 22 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9267070</commentid>
    <comment_count>35</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-04-25 19:51:39 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc23 has been pushed to the Fedora 23 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9269346</commentid>
    <comment_count>36</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-26 08:55:05 -0400</bug_when>
    <thetext>Reopening for f24</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9269360</commentid>
    <comment_count>37</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-26 08:59:43 -0400</bug_when>
    <thetext>Hello, please push ​https://bodhi.fedoraproject.org/updates/FEDORA-2016-9f5172b1c5 to stable. java-1.8.0-openjdk-1.8.0.91-1.b14.fc24 was nearly uusable, and -2. is fixing the issue (As seen form karmas for f23 and also f24</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9269400</commentid>
    <comment_count>38</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-26 09:09:57 -0400</bug_when>
    <thetext>(In reply to jiri vanek from comment #37)
&gt; Hello, please push
&gt; ​https://bodhi.fedoraproject.org/updates/FEDORA-2016-9f5172b1c5 to stable.
&gt; java-1.8.0-openjdk-1.8.0.91-1.b14.fc24 was nearly uusable, and -2. is fixing
&gt; the issue (As seen form karmas for f23 and also f24

More verbose - this update is fixin bug in previous update which is making most https connections broken. So any java deplyment (tomcat and spol) canbe moreover considered as dead. 
Of course also client apps like sqriell or similar are doomed with https.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9269464</commentid>
    <comment_count>39</comment_count>
    <who name="Kamil Páral">kparal</who>
    <bug_when>2016-04-26 09:33:44 -0400</bug_when>
    <thetext>We have openjdk on Workstation Live, libreoffice depends on it (not sure whether libreoffice uses java for accessing https urls). We also have openjdk in Server repo, but after installation it is not installed, so Server doesn&apos;t seem to depend on it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9269534</commentid>
    <comment_count>40</comment_count>
    <who name="Kamil Páral">kparal</who>
    <bug_when>2016-04-26 09:47:45 -0400</bug_when>
    <thetext>(In reply to Kamil Páral from comment #39)
&gt; We also have
&gt; openjdk in Server repo, but after installation it is not installed, so
&gt; Server doesn&apos;t seem to depend on it.

I was wrong, I forgot to install all addons. If you install all addons, there are many things depending on openjdk, like tomcat, pki-ca, freeipa-server, glassfish, etc.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9269716</commentid>
    <comment_count>41</comment_count>
    <who name="jiri vanek">jvanek</who>
    <bug_when>2016-04-26 10:35:25 -0400</bug_when>
    <thetext>Most of those addons  may suffer by this issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9270154</commentid>
    <comment_count>42</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2016-04-26 12:16:10 -0400</bug_when>
    <thetext>This was not considered as a blocker because the dependency was done the wrong way round - this bug was set to *depend on* the tracker, rather than block it. Fixing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9273932</commentid>
    <comment_count>43</comment_count>
    <who name="Dennis Gilmore">dennis</who>
    <bug_when>2016-04-27 12:54:48 -0400</bug_when>
    <thetext>+1 FE, I am not sure what blocking criteria it violates, but would be good to fix</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9274152</commentid>
    <comment_count>44</comment_count>
    <who name="John Dulaney">jdulaney</who>
    <bug_when>2016-04-27 14:14:56 -0400</bug_when>
    <thetext>I&apos;m also +1 FE; I don&apos;t quite see it hitting a release criteria.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9274268</commentid>
    <comment_count>45</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-04-27 14:58:19 -0400</bug_when>
    <thetext>It&apos;s fixed as far as I know.

https://bodhi.fedoraproject.org/updates/FEDORA-2016-9f5172b1c5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9274329</commentid>
    <comment_count>46</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2016-04-27 15:17:02 -0400</bug_when>
    <thetext>That update is in updates-testing, which means it would not be included in Beta composes. The blocker/freeze exception review process exists to decide what fixes *must* and *can* be pushed to stable and included in composes during the freeze period. That is what we&apos;re voting about.

https://fedoraproject.org/wiki/QA:SOP_blocker_bug_process
https://fedoraproject.org/wiki/QA:SOP_freeze_exception_bug_process</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9274336</commentid>
    <comment_count>47</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2016-04-27 15:19:35 -0400</bug_when>
    <thetext>I also am +1 FE, -1 Blocker, +1 Final blocker. The relevant criterion is Final:

&quot;The release must contain no known security bugs of &apos;important&apos; or higher impact according to the Red Hat severity classification scale which cannot be satisfactorily resolved by a package update (e.g. issues during installation).&quot; - https://fedoraproject.org/wiki/Fedora_24_Final_Release_Criteria#Security_bugs

there is no corresponding Beta criterion. That&apos;s +3 FE, -3 blocker, so setting that status.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9286190</commentid>
    <comment_count>48</comment_count>
    <who name="Tim Flink">tflink</who>
    <bug_when>2016-05-02 18:07:30 -0400</bug_when>
    <thetext>Discussed during the 2016-05-02 blocker review meeting.

The decision on final blocker status has been delayed because we expect this to be closed soon as the fix was included in the last beta compose as an FE and the update has sufficient karma to be pushed stable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9289395</commentid>
    <comment_count>49</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2016-05-03 14:06:05 -0400</bug_when>
    <thetext>java-1.8.0-openjdk-1.8.0.91-2.b14.fc24 has been pushed to the Fedora 24 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9819540</commentid>
    <comment_count>50</comment_count>
    <who name="Oliver">oliver.stutz</who>
    <bug_when>2016-10-25 09:10:19 -0400</bug_when>
    <thetext>Is this problem also fixed in RedHat Server versions? How can i figure this out? Thanks for helping.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9821536</commentid>
    <comment_count>51</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-10-25 22:57:36 -0400</bug_when>
    <thetext>Yes, see comment #22.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9822040</commentid>
    <comment_count>52</comment_count>
    <who name="Oliver">oliver.stutz</who>
    <bug_when>2016-10-26 04:06:34 -0400</bug_when>
    <thetext>Andrew thanks for your time, i apologize already in advance but I&apos;ve got no clue how to figure out in which patch of RHEL this bug is fixed. We have experienced this on one of our systems months ago and are unsure which version we have to upgrade to in order to resolve this.

In Fedora i would assume from what i can read from this bug report that it was fixed immediately. Is it the same in Redhat? (they cycle packages slower right?)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9824996</commentid>
    <comment_count>53</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-10-26 21:18:15 -0400</bug_when>
    <thetext>RHEL java-1.8.0-openjdk packages are updated at least four times a year for the security updates (Jan, Apr, Jul and Oct). The Fedora packages feed from the RHEL ones, though that includes stuff for the next RHEL releases, so it will appear in Fedora first, even though it was applied to RHEL spec file beforehand (if that make sense).

There is no ECC support yet in RHEL 7. This is coming with RHEL 7.3, where this patch has been applied.

For RHEL 6, ECC support appeared in RHEL 6.8 but it seems this patch hasn&apos;t yet been included, which I hadn&apos;t realised until now, so thanks for raising this. I&apos;ll make sure that gets in for the January update at the latest.

Hope that helps.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9825916</commentid>
    <comment_count>54</comment_count>
    <who name="Oliver">oliver.stutz</who>
    <bug_when>2016-10-27 05:06:51 -0400</bug_when>
    <thetext>Thank you Andrew, that clears up my picture. We have 6.8 so that makes totally sense. We will check in January for the package.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9846604</commentid>
    <comment_count>55</comment_count>
    <who name="daba">yprasannas</who>
    <bug_when>2016-11-02 11:35:47 -0400</bug_when>
    <thetext>(In reply to Andrew John Hughes from comment #53)
&gt; RHEL java-1.8.0-openjdk packages are updated at least four times a year for
&gt; the security updates (Jan, Apr, Jul and Oct). The Fedora packages feed from
&gt; the RHEL ones, though that includes stuff for the next RHEL releases, so it
&gt; will appear in Fedora first, even though it was applied to RHEL spec file
&gt; beforehand (if that make sense).
&gt; 
&gt; There is no ECC support yet in RHEL 7. This is coming with RHEL 7.3, where
&gt; this patch has been applied.
&gt; 
&gt; For RHEL 6, ECC support appeared in RHEL 6.8 but it seems this patch hasn&apos;t
&gt; yet been included, which I hadn&apos;t realised until now, so thanks for raising
&gt; this. I&apos;ll make sure that gets in for the January update at the latest.
&gt; 
&gt; Hope that helps.

Thank you Andrew for the info.

Currently several of our redhat servers can only support TLS_RSA* ciphers. Our security has flagged with several vulnerabilities.

/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-1.b15.el7_2.x86_64/jre/lib/security/java.security

jdk.tls.disabledAlgorithms=SSLv3, RC4, MD5withRSA, DH keySize &lt; 768, EC, ECDHE, ECDH

Not sure how other enterprise installs are dealing without ECC in openjdk8?

I removed last three ciphers in the above disabled list and put below config and it seems to work with limited testing and no errors in catalina. Our team is pondering over this workaround on a production systems.

sslEnabledProtocols=&quot;TLSv1.2&quot;
ciphers=&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA

256,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECD

H_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_A

ES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS

_DHE_DSS_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CB

C_SHA256,TLS_DHE_DSS_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA&quot;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9847142</commentid>
    <comment_count>56</comment_count>
    <who name="daba">yprasannas</who>
    <bug_when>2016-11-02 12:15:15 -0400</bug_when>
    <thetext>(In reply to daba from comment #55)
&gt; (In reply to Andrew John Hughes from comment #53)
&gt; &gt; RHEL java-1.8.0-openjdk packages are updated at least four times a year for
&gt; &gt; the security updates (Jan, Apr, Jul and Oct). The Fedora packages feed from
&gt; &gt; the RHEL ones, though that includes stuff for the next RHEL releases, so it
&gt; &gt; will appear in Fedora first, even though it was applied to RHEL spec file
&gt; &gt; beforehand (if that make sense).
&gt; &gt; 
&gt; &gt; There is no ECC support yet in RHEL 7. This is coming with RHEL 7.3, where
&gt; &gt; this patch has been applied.
&gt; &gt; 
&gt; &gt; For RHEL 6, ECC support appeared in RHEL 6.8 but it seems this patch hasn&apos;t
&gt; &gt; yet been included, which I hadn&apos;t realised until now, so thanks for raising
&gt; &gt; this. I&apos;ll make sure that gets in for the January update at the latest.
&gt; &gt; 
&gt; &gt; Hope that helps.
&gt; 
&gt; Thank you Andrew for the info.
&gt; 
&gt; Currently several of our redhat servers can only support TLS_RSA* ciphers.
&gt; Our security has flagged with several vulnerabilities.
&gt; 
&gt; /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-1.b15.el7_2.x86_64/jre/lib/
&gt; security/java.security
&gt; 
&gt; jdk.tls.disabledAlgorithms=SSLv3, RC4, MD5withRSA, DH keySize &lt; 768, EC,
&gt; ECDHE, ECDH
&gt; 
&gt; Not sure how other enterprise installs are dealing without ECC in openjdk8?
&gt; 
&gt; I removed last three ciphers in the above disabled list and put below config
&gt; and it seems to work with limited testing and no errors in catalina. Our
&gt; team is pondering over this workaround on a production systems.
&gt; 
&gt; sslEnabledProtocols=&quot;TLSv1.2&quot;
&gt; ciphers=&quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,
&gt; TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,
&gt; TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,
&gt; TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA
&gt; 
&gt; 256,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,
&gt; TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,
&gt; TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,
&gt; TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECD
&gt; 
&gt; H_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,
&gt; TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,
&gt; TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,
&gt; TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_A
&gt; 
&gt; ES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,
&gt; TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,
&gt; TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,
&gt; TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS
&gt; 
&gt; _DHE_DSS_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,
&gt; TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,
&gt; TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,
&gt; TLS_DHE_RSA_WITH_AES_256_CB
&gt; 
&gt; C_SHA256,TLS_DHE_DSS_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA&quot;

Sorry....just got report that above ciphers are failing on several machines so the workaround is useless. Back to square one of only using TLS_RSA*ciphers.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9854076</commentid>
    <comment_count>57</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-11-03 14:16:26 -0400</bug_when>
    <thetext>On RHEL 7.2, EC, ECDHE and ECDH are disabled because there is no elliptic curve cryptography provider. Enabling them won&apos;t magically make one appear. This is resolved in RHEL 7.3.

Major additions like this need sufficient testing, so can only really happen in feature releases.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9863664</commentid>
    <comment_count>58</comment_count>
    <who name="daba">yprasannas</who>
    <bug_when>2016-11-04 21:09:10 -0400</bug_when>
    <thetext>Andrew, with yum update  we got openjdk-1.8.0.111-2.b15.el7_3.x86_64 over existing openjdk-1.8.0.111-1.b15.el7_2.x86_64.  After restart the issue persisted.

Noticed ..usr/lib/jvm/jre-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64/lib/security has two files….

java.security --jdk.tls.disabledAlgorithms=SSLv3, RC4, MD5withRSA, DH keySize &lt; 768, EC, ECDHE, ECDH

java.security.rpmnew -- jdk.tls.disabledAlgorithms=SSLv3, RC4, MD5withRSA, DH keySize &lt; 768


I made the .rpmnew as the java.security file...and this seems to have fixed the issue. Chrome on windows reports &quot;The connection to this site is encrypted and authenticated using a strong protocol (TLS 1.2), a strong key exchange (ECDHE_RSA), and a strong cipher (AES_256_GCM)&quot;. 

Are the changes expected for java.security.rpmnew to enable ECC instead of out of the box RHEL 7.3 update?

Thank you!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9869000</commentid>
    <comment_count>59</comment_count>
    <who name="Andrew John Hughes">ahughes</who>
    <bug_when>2016-11-07 16:35:56 -0500</bug_when>
    <thetext>java.security.rpmnew is what should be used and it should have been automatically copied over, if java.security was unchanged.

However, this hasn&apos;t happened in this case. It seems to be a consequence of the security update for RHEL 7.2 being applied. The 7.3 RPM was actually produced first, so it isn&apos;t aware of the checksum used in the RHEL 7.2 security RPM and so it can&apos;t determine that the java.security file you have installed from that RPM is an unchanged RPM copy rather than one you&apos;ve modified yourself.

The next update will make sure that the 7.2 one is replaced by the version from the 7.3 RPM, but for now, it will have to be manually copied over, as you did.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>