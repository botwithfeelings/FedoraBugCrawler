<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1306558</bug_id>
          
          <creation_ts>2016-02-11 04:59:00 -0500</creation_ts>
          <short_desc>java-1.8.0-openjdk: FTBFS in rawhide</short_desc>
          <delta_ts>2016-06-22 03:31:29 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>java-1.8.0-openjdk</component>
          <version>24</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>CURRENTRELEASE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Reopened</keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Severin Gehwolf">sgehwolf</reporter>
          <assigned_to name="Severin Gehwolf">sgehwolf</assigned_to>
          <cc>ahughes</cc>
    
    
    <cc>aph</cc>
    
    
    <cc>dbhole</cc>
    
    
    <cc>jakub</cc>
    
    
    <cc>jerboaa</cc>
    
    
    <cc>jvanek</cc>
    
    
    <cc>mpolacek</cc>
    
    
    <cc>msrb</cc>
    
    
    <cc>omajid</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>java-1.8.0-openjdk-1.8.0.72-5.b15.fc24</cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-06-22 03:29:52</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9052023</commentid>
    <comment_count>0</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-11 04:59:29 -0500</bug_when>
    <thetext>java-1.8.0-openjdk fails to build from source in rawhide. Failed task is here:
http://koji.fedoraproject.org/koji/taskinfo?taskID=12902039

build.log tail looks like this:
b15.fc24.x86_64/openjdk/hotspot/src/share/vm/ci/ciConstant.hpp:29,
                 from /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/src/share/vm/ci/ciArray.hpp:29,
                 from /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/src/share/vm/precompiled/precompiled.hpp:33:
/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/src/share/vm/code/dependencies.hpp:169:59: error: left operand of shift expression &apos;(-1 &lt;&lt; 1)&apos; is negative [-fpermissive]
     all_types           = ((1 &lt;&lt; TYPE_LIMIT) - 1) &amp; ((-1) &lt;&lt; FIRST_TYPE),
                                                     ~~~~~~^~~~~~~~~~~~~~
/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/src/share/vm/code/dependencies.hpp:169:72: error: enumerator value for &apos;all_types&apos; is not an integer constant
     all_types           = ((1 &lt;&lt; TYPE_LIMIT) - 1) &amp; ((-1) &lt;&lt; FIRST_TYPE),
                                                                        ^
cc1plus: all warnings being treated as errors
/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/make/linux/makefiles/vm.make:361: recipe for target &apos;precompiled.hpp.gch&apos; failed
gmake[6]: *** [precompiled.hpp.gch] Error 1
gmake[6]: Leaving directory &apos;/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/build/jdk8.build/hotspot/linux_amd64_compiler2/product&apos;
/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/make/linux/makefiles/top.make:119: recipe for target &apos;the_vm&apos; failed
gmake[5]: Leaving directory &apos;/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/build/jdk8.build/hotspot/linux_amd64_compiler2/product&apos;
gmake[5]: *** [the_vm] Error 2
/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/make/linux/Makefile:293: recipe for target &apos;product&apos; failed
gmake[4]: Leaving directory &apos;/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/build/jdk8.build/hotspot&apos;
Makefile:230: recipe for target &apos;generic_build2&apos; failed
gmake[3]: Leaving directory &apos;/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/make&apos;
gmake[4]: *** [product] Error 2
gmake[3]: *** [generic_build2] Error 2
Makefile:177: recipe for target &apos;product&apos; failed
gmake[2]: Leaving directory &apos;/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/hotspot/make&apos;
gmake[2]: *** [product] Error 2
HotspotWrapper.gmk:44: recipe for target &apos;/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/build/jdk8.build/hotspot/_hotspot.timestamp&apos; failed
gmake[1]: Leaving directory &apos;/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/make&apos;
gmake[1]: *** [/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk/build/jdk8.build/hotspot/_hotspot.timestamp] Error 2
/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-4.b15.fc24.x86_64/openjdk//make/Main.gmk:108: recipe for target &apos;hotspot-only&apos; failed
make: *** [hotspot-only] Error 2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052047</commentid>
    <comment_count>1</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-11 05:05:39 -0500</bug_when>
    <thetext>We have two intermediate patches (attached) which gets us further. However with those it fails in java TestCryptoLevel with:

+ /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-5.b15.fc24.x86_64/openjdk/build/jdk8.build/images/j2sdk-image/bin/javac -d
 . /builddir/build/SOURCES/TestCryptoLevel.java
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f6b25ed736b, pid=5973, tid=140097488013056
#
# JRE version: OpenJDK Runtime Environment (8.0_72-b15) (build 1.8.0_72-b15)
# Java VM: OpenJDK 64-Bit Server VM (25.72-b15 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# V  [libjvm.so+0x88636b]  Node::Node(unsigned int)+0x2b
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try &quot;ulimit -c unlimited&quot; before starting \
Java again
#
# An error report file with more information is saved as:
# /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-5.b15.fc24.x86_64/hs_err_pid5973.log
[thread 140097475966720 also had an error]
[thread 140097474914048 also had an error]
[thread 140097473861376 also had an error]
[thread 140097477019392 also had an error]
[error occurred during error reporting , id 0xb]

Building a fastdebug hotspot that asserts with:

#  Internal Error (/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-5.b15.fc24.i386/openjdk/hotspot/src/share/vm/opto/node.cpp:298), pid=13094, tid=2730490688
#  assert(Compile::current() == C) failed: must use operator new(Compile*)

See:
http://koji.fedoraproject.org/koji/getfile?taskID=12930370&amp;name=build.log&amp;offset=-4000</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052070</commentid>
    <comment_count>2</comment_count>
      <attachid>1123106</attachid>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-11 05:10:33 -0500</bug_when>
    <thetext>Created attachment 1123106
Use older C/C++ standard with GCC6.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052073</commentid>
    <comment_count>3</comment_count>
      <attachid>1123107</attachid>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-11 05:11:12 -0500</bug_when>
    <thetext>Created attachment 1123107
configure work-around</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052120</commentid>
    <comment_count>4</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-11 05:15:45 -0500</bug_when>
    <thetext>This is starting to look like an issue with hotspot + GCC6. We are still investigating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052124</commentid>
    <comment_count>5</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-11 05:16:49 -0500</bug_when>
    <thetext>A better trace of the fastdebug assertion is:

+ /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-5.b15.fc24.i386/openjdk/build/jdk8.build-debug/images/j2sdk-image/bin/javac -d . /builddir/build/SOURCES/TestCryptoLevel.java
# To suppress the following error report, specify this argument
# after -XX: or in .hotspotrc:  SuppressErrorAt=/node.cpp:298
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  Internal Error (/builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-5.b15.fc24.i386/openjdk/hotspot/src/share/vm/opto/node.cpp:298), pid=13094, tid=2730490688
#  assert(Compile::current() == C) failed: must use operator new(Compile*)
#
# JRE version: OpenJDK Runtime Environment (8.0_72-b15) (build 1.8.0_72-fastdebug-b15)
# Java VM: OpenJDK Server VM (25.72-b15-fastdebug mixed mode linux-x86 )
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try &quot;ulimit -c unlimited&quot; before starting Java again
#
# An error report file with more information is saved as:
# /builddir/build/BUILD/java-1.8.0-openjdk-1.8.0.72-5.b15.fc24.i386/hs_err_pid13094.log
[thread -1565533376 also had an error]
[error occurred during error reporting , id 0xb]
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052144</commentid>
    <comment_count>6</comment_count>
    <who name="Andrew Haley">aph</who>
    <bug_when>2016-02-11 05:26:02 -0500</bug_when>
    <thetext>Adding a compiler barrier, as shown here, fixes the segfault, which is caused by Node._out not being initialized.  I strongly suspect that GCC does not initialize _out because Compile is not compatible with its type.  While this is, strictly speaking, correct, we are compiling with -fno-strict-aliasing and GCC should respect that.

I very strongly suspect that -fno-strict-aliasing is broken in this version of GCC.

inline void* operator new( size_t x, Compile* C) throw() {
   Node* n = (Node*)C-&gt;node_arena()-&gt;Amalloc_D(x);
#ifdef ASSERT
   n-&gt;_in = (Node**)n; // magic cookie for assertion check
#endif
   n-&gt;_out = (Node**)C;
   __asm__ volatile(&quot;nop&quot; : : : &quot;memory&quot;);
   return (void*)n;
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052165</commentid>
    <comment_count>7</comment_count>
    <who name="Jakub Jelinek">jakub</who>
    <bug_when>2016-02-11 05:36:01 -0500</bug_when>
    <thetext>Have you tried the code with -fsanitize=undefined?  Does -fno-delete-null-pointer-checks help?  Does building with -O0 help?  If yes, can you bisect it to a problematic *.o file, attach it preprocessed here, including all gcc options?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052183</commentid>
    <comment_count>8</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-11 05:42:27 -0500</bug_when>
    <thetext>(In reply to Jakub Jelinek from comment #7)
&gt; Does building with -O0 help?

Yes. We&apos;ve done a slowdebug build which seems to work. That&apos;s -O0 I believe.

&gt; If yes, can you bisect it to a problematic *.o file, attach it preprocessed
&gt; here, including all gcc options?

It&apos;s going to take a while, but it&apos;s possible.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052212</commentid>
    <comment_count>9</comment_count>
    <who name="Jakub Jelinek">jakub</who>
    <bug_when>2016-02-11 05:47:53 -0500</bug_when>
    <thetext>Well, you shouldn&apos;t need to rebuild everything each time, just keep around copies of an optimized and non-optimized builds and then in a third copy always copy in + touch always some set of optimized *.o files and rest of unoptimized *.o files, relink, retest, and using binary search it should take just log2 of number of *.o files.  If multiple shared libraries or binaries are involved, first step can be to bisect among the shared libraries/binaries to find the problematic one.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052255</commentid>
    <comment_count>10</comment_count>
    <who name="Andrew Haley">aph</who>
    <bug_when>2016-02-11 06:12:16 -0500</bug_when>
    <thetext>(In reply to Jakub Jelinek from comment #7)
&gt; Have you tried the code with -fsanitize=undefined? 

No.  -fsanitize=undefined is fairly problematic with HotSpot, given that it warns about several things which are well-defined in GCC and everybody uses all the time, e.g. left shifts of negative integers.  It&apos;d be nice to have a sensible set of options for building with fsanitize=undefined.

&gt; Does
&gt; -fno-delete-null-pointer-checks help?  Does building with -O0 help?  If yes,
&gt; can you bisect it to a problematic *.o file, attach it preprocessed here,
&gt; including all gcc options?

OK.  It&apos;s node.o.  I&apos;ll get you the preprocessed file.

Andrew.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052260</commentid>
    <comment_count>11</comment_count>
    <who name="Marek Polacek">mpolacek</who>
    <bug_when>2016-02-11 06:15:51 -0500</bug_when>
    <thetext>(In reply to Andrew Haley from comment #10)
&gt; (In reply to Jakub Jelinek from comment #7)
&gt; &gt; Have you tried the code with -fsanitize=undefined? 
&gt; 
&gt; No.  -fsanitize=undefined is fairly problematic with HotSpot, given that it
&gt; warns about several things which are well-defined in GCC and everybody uses
&gt; all the time, e.g. left shifts of negative integers.  It&apos;d be nice to have a
&gt; sensible set of options for building with fsanitize=undefined.

You can try using -fsanitize=null to see if the code isn&apos;t calling a member function on a null pointer or similar.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9052339</commentid>
    <comment_count>17</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-11 06:56:09 -0500</bug_when>
    <thetext>(In reply to Jakub Jelinek from comment #9)
&gt; Well, you shouldn&apos;t need to rebuild everything each time, just keep around
&gt; copies of an optimized and non-optimized builds and then in a third copy
&gt; always copy in + touch always some set of optimized *.o files and rest of
&gt; unoptimized *.o files, relink, retest, and using binary search it should
&gt; take just log2 of number of *.o files.  If multiple shared libraries or
&gt; binaries are involved, first step can be to bisect among the shared
&gt; libraries/binaries to find the problematic one.

Understood. Still getting a local setup with a non-optimized build, an optimized build and then the script run would have taken a while. Anyway, a moot point now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9068290</commentid>
    <comment_count>47</comment_count>
    <who name="Andrew Haley">aph</who>
    <bug_when>2016-02-16 09:21:35 -0500</bug_when>
    <thetext>-fno-guess-branch-probability is the wrong flag to use because it hits too much other stuff.

The real bug is in due to an object field being accessed before the object is constructed, in breach of C++98 [class.cdtor]:

  For an object of non-POD class type ... before the constructor begins execution ... referring to any non-static member or base class of the object results in undefined behavior

Instead of -fno-guess-branch-probability we should use -fno-lifetime-dse:

  -fno-lifetime-dse

  In C++ the value of an object is only affected by changes within its
  lifetime: when the constructor begins, the object has an indeterminate
  value, and any changes during the lifetime of the object are dead when
  the object is destroyed.  Normally dead store elimination will take
  advantage of this; if your code relies on the value of the object
  storage persisting beyond the lifetime of the object, you can use this
  flag to disable this optimization.

Please try this flag instead.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9068366</commentid>
    <comment_count>48</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-16 09:44:26 -0500</bug_when>
    <thetext>Scratch build with -fno-lifetime-dse instead of -fno-guess-branch-probability:

http://koji.fedoraproject.org/koji/taskinfo?taskID=13009074

FWIW, reproducer works fine for me for a fastdebug hotspot-only build using -fno-lifetime-dse.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9068832</commentid>
    <comment_count>50</comment_count>
      <attachid>1127635</attachid>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-16 11:44:44 -0500</bug_when>
    <thetext>Created attachment 1127635
spec file patch changing flag to -fno-lifetime-dse</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9068865</commentid>
    <comment_count>51</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-02-16 11:55:19 -0500</bug_when>
    <thetext>Task which properly boot-cycled on i686 with -fno-lifetime-dse:
http://koji.fedoraproject.org/koji/taskinfo?taskID=13009566</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9093132</commentid>
    <comment_count>54</comment_count>
    <who name="Jan Kurik">jkurik</who>
    <bug_when>2016-02-24 09:29:30 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 24 development cycle.
Changing version to &apos;24&apos;.

More information and reason for this action is here:
https://fedoraproject.org/wiki/Fedora_Program_Management/HouseKeeping/Fedora24#Rawhide_Rebase</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9439519</commentid>
    <comment_count>55</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-06-22 03:29:52 -0400</bug_when>
    <thetext>There is a work-around for this issue. Use -fno-lifetime-dse and -fno-delete-null-pointer-checks. It&apos;s unlikely to get fixed in upstream JDK 8. I&apos;m closing this bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9439526</commentid>
    <comment_count>56</comment_count>
    <who name="Severin Gehwolf">sgehwolf</who>
    <bug_when>2016-06-22 03:31:29 -0400</bug_when>
    <thetext>(In reply to Severin Gehwolf from comment #55)
&gt; It&apos;s unlikely to get fixed in upstream JDK 8.

That is, the underlying issue of undefined behaviour being present in JDK 8 hotspot.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1123106</attachid>
            <date>2016-02-11 05:10:00 -0500</date>
            <delta_ts>2016-02-11 05:10:33 -0500</delta_ts>
            <desc>Use older C/C++ standard with GCC6.</desc>
            <filename>0001-Explicitly-set-the-C-standard-to-use-as-the-default-.patch</filename>
            <type>text/plain</type>
            <size>3833</size>
            <attacher name="Severin Gehwolf">sgehwolf</attacher>
            
              <data encoding="base64">RnJvbSA0MjZkOTUwYjBiOTM5YmNiMWUyOWQzYmRiYmZlMTc4Zjg3ZWJhMzQyIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBBbmRyZXcgSHVnaGVzIDxnbnUuYW5kcmV3QHJlZGhhdC5jb20+
CkRhdGU6IFR1ZSwgOSBGZWIgMjAxNiAxMzo1Mzo1NCAtMDUwMApTdWJqZWN0OiBbUEFUQ0ggMS8y
XSBFeHBsaWNpdGx5IHNldCB0aGUgQysrIHN0YW5kYXJkIHRvIHVzZSwgYXMgdGhlIGRlZmF1bHQK
IGhhcyBjaGFuZ2VkIHRvIEMrKyAyMDE0IGluIEdDQyA2LgoKVHVybiBvZmYgLVdlcnJvciBkdWUg
dG8gZm9ybWF0IHdhcm5pbmdzIGluIEhvdFNwb3QgYW5kIC1zdGQgdXNhZ2Ugd2FybmluZ3MgaW4g
U0NUUC4KUnVuIHRlc3RzIHVuZGVyIHRoZSBjaGVjayBzdGFnZSBhbmQgdXNlIHRoZSBkZWJ1ZyBi
dWlsZCBmaXJzdC4KLS0tCiBqYXZhLTEuOC4wLW9wZW5qZGsuc3BlYyB8IDI5ICsrKysrKysrKysr
KysrKysrKysrKystLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMjIgaW5zZXJ0aW9ucygrKSwgNyBk
ZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9qYXZhLTEuOC4wLW9wZW5qZGsuc3BlYyBiL2phdmEt
MS44LjAtb3Blbmpkay5zcGVjCmluZGV4IDZhMjI4ZmUuLjkxYWYzNjQgMTAwNjQ0Ci0tLSBhL2ph
dmEtMS44LjAtb3Blbmpkay5zcGVjCisrKyBiL2phdmEtMS44LjAtb3Blbmpkay5zcGVjCkBAIC0z
Nyw2ICszNyw3IEBACiAlZ2xvYmFsIGJ1aWxkX2xvb3AgICV7YnVpbGRfbG9vcDF9ICV7YnVpbGRf
bG9vcDJ9CiAjIG5vdGUsIHRoYXQgb3JkZXIgIG5vcm1hbF9zdWZmaXggZGVidWdfc3VmZml4LCBp
biBjYXNlIG9mIGJvdGggZW5hYmxlZCwKICMgaXMgZXhwZWN0ZWQgaW4gb25lIHNpbmdsZSBjYXNl
IGF0IHRoZSBlbmQgb2YgYnVpbGQKKyVnbG9iYWwgcmV2X2J1aWxkX2xvb3AgICV7YnVpbGRfbG9v
cDJ9ICV7YnVpbGRfbG9vcDF9CiAKICVnbG9iYWwgYm9vdHN0cmFwX2J1aWxkIDAKIApAQCAtNzM0
LDcgKzczNSw3IEBAIE9ic29sZXRlczogamF2YS0xLjcuMC1vcGVuamRrLWFjY2Vzc2liaWxpdHkl
MQogCiBOYW1lOiAgICBqYXZhLSV7amF2YXZlcn0tJXtvcmlnaW59CiBWZXJzaW9uOiAle2phdmF2
ZXJ9LiV7dXBkYXRldmVyfQotUmVsZWFzZTogNC4le2J1aWxkdmVyfSV7P2Rpc3R9CitSZWxlYXNl
OiA1LiV7YnVpbGR2ZXJ9JXs/ZGlzdH0KICMgamF2YS0xLjUuMC1pYm0gZnJvbSBqcGFja2FnZS5v
cmcgc2V0IEVwb2NoIHRvIDEgZm9yIHVua25vd24gcmVhc29ucywKICMgYW5kIHRoaXMgY2hhbmdl
IHdhcyBicm91Z2h0IGludG8gUkhFTC00LiAgamF2YS0xLjUuMC1pYm0gcGFja2FnZXMKICMgYWxz
byBpbmNsdWRlZCB0aGUgZXBvY2ggaW4gdGhlaXIgdmlydHVhbCBwcm92aWRlcy4gIFRoaXMgY3Jl
YXRlZCBhCkBAIC0xMTg1LDggKzExODYsMTAgQEAgZXhwb3J0IENGTEFHUz0iJENGTEFHUyAtbWll
ZWUiCiAlZW5kaWYKIAogIyBXZSB1c2Ugb3VyY3BwZmxhZ3MgYmVjYXVzZSB0aGUgT3BlbkpESyBi
dWlsZCBzZWVtcyB0bwotIyBwYXNzIHRoZXNlIHRvIHRoZSBIb3RTcG90IEMrKyBjb21waWxlci4u
LgotRVhUUkFfQ0ZMQUdTPSIlb3VyY3BwZmxhZ3MiCisjIHBhc3MgRVhUUkFfQ0ZMQUdTIHRvIHRo
ZSBIb3RTcG90IEMrKyBjb21waWxlci4uLgorIyBFeHBsaWNpdGx5IHNldCB0aGUgQysrIHN0YW5k
YXJkIGFzIHRoZSBkZWZhdWx0IGhhcyBjaGFuZ2VkIG9uIEdDQyA+PSA2CitFWFRSQV9DRkxBR1M9
IiVvdXJjcHBmbGFncyAtc3RkPWdudSsrOTggLVduby1lcnJvciIKK0VYVFJBX0NQUF9GTEFHUz0i
JW91cmNwcGZsYWdzIC1zdGQ9Z251Kys5OCIKICVpZmFyY2ggJXtwb3dlcjY0fSBwcGMKICMgZml4
IHJwbWxpbnQgd2FybmluZ3MKIEVYVFJBX0NGTEFHUz0iJEVYVFJBX0NGTEFHUyAtZm5vLXN0cmlj
dC1hbGlhc2luZyIKQEAgLTEyNDYsNiArMTI0OSw3IEBAIG1ha2UgXAogICAgIFNUUklQX1BPTElD
WT1ub19zdHJpcCBcCiAgICAgUE9TVF9TVFJJUF9DTUQ9IiIgXAogICAgIExPRz10cmFjZSBcCisg
ICAgU0NUUF9XRVJST1I9IFwKICAgICAle3RhcmdldHN9CiAKICMgdGhlIGJ1aWxkIChlcnJvbmVv
dXNseSkgcmVtb3ZlcyByZWFkIHBlcm1pc3Npb25zIGZyb20gc29tZSBqYXJzCkBAIC0xMjYwLDE3
ICsxMjY0LDI1IEBAIGZpbmQgaW1hZ2VzLyV7ajJzZGtpbWFnZX0gLWluYW1lICcqLmRlYnVnaW5m
bycgLWV4ZWMgcm0ge30gXDsKIAogcG9wZCA+JiAvZGV2L251bGwKIAotIyBJbnN0YWxsIG5zcy5j
ZmcgcmlnaHQgYXdheSBhcyB3ZSB3aWxsIGJlIHVzaW5nIHRoZSBKUkUgYWJvdmUKIGV4cG9ydCBK
QVZBX0hPTUU9JChwd2QpLyV7YnVpbGRvdXRwdXRkaXIgJHN1ZmZpeH0vaW1hZ2VzLyV7ajJzZGtp
bWFnZX0KIAogIyBJbnN0YWxsIG5zcy5jZmcgcmlnaHQgYXdheSBhcyB3ZSB3aWxsIGJlIHVzaW5n
IHRoZSBKUkUgYWJvdmUKIGluc3RhbGwgLW0gNjQ0ICV7U09VUkNFMTF9ICRKQVZBX0hPTUUvanJl
L2xpYi9zZWN1cml0eS8KIAotCiAjIFVzZSBzeXN0ZW0td2lkZSB0emRhdGEKIHJtICRKQVZBX0hP
TUUvanJlL2xpYi90emRiLmRhdAogbG4gLXMgJXtfZGF0YWRpcn0vamF2YXppLTEuOC90emRiLmRh
dCAkSkFWQV9IT01FL2pyZS9saWIvdHpkYi5kYXQKIAorI2J1aWxkIGN5Y2xlcworZG9uZQorCisl
Y2hlY2sKKworIyBXZSB0ZXN0IGRlYnVnIGZpcnN0IGFzIGl0IHdpbGwgZ2l2ZSBiZXR0ZXIgZGlh
Z25vc3RpY3Mgb24gYSBjcmFzaAorZm9yIHN1ZmZpeCBpbiAle3Jldl9idWlsZF9sb29wfSA7IGRv
CisKK2V4cG9ydCBKQVZBX0hPTUU9JChwd2QpLyV7YnVpbGRvdXRwdXRkaXIgJHN1ZmZpeH0vaW1h
Z2VzLyV7ajJzZGtpbWFnZX0KKwogIyBDaGVjayB1bmxpbWl0ZWQgcG9saWN5IGhhcyBiZWVuIHVz
ZWQKICRKQVZBX0hPTUUvYmluL2phdmFjIC1kIC4gJXtTT1VSQ0UxM30KICRKQVZBX0hPTUUvYmlu
L2phdmEgVGVzdENyeXB0b0xldmVsCkBAIC0xMzAxLDggKzEzMTMsNiBAQCAkSkFWQV9IT01FL2Jp
bi9qYXZhcCAtbCBqYXZhLmxhbmcuT2JqZWN0IHwgZ3JlcCBMb2NhbFZhcmlhYmxlVGFibGUKICRK
QVZBX0hPTUUvYmluL2phdmFwIC1sIGphdmEubmlvLkJ5dGVCdWZmZXIgfCBncmVwICJDb21waWxl
ZCBmcm9tIgogJEpBVkFfSE9NRS9iaW4vamF2YXAgLWwgamF2YS5uaW8uQnl0ZUJ1ZmZlciB8IGdy
ZXAgTGluZU51bWJlclRhYmxlCiAkSkFWQV9IT01FL2Jpbi9qYXZhcCAtbCBqYXZhLm5pby5CeXRl
QnVmZmVyIHwgZ3JlcCBMb2NhbFZhcmlhYmxlVGFibGUKLQotI2J1aWxkIGN5Y2xlcwogZG9uZQog
CiAlaW5zdGFsbApAQCAtMTY4MCw2ICsxNjkwLDExIEBAIHJlcXVpcmUgImNvcHlfamRrX2NvbmZp
Z3MubHVhIgogJWVuZGlmCiAKICVjaGFuZ2Vsb2cKKyogTW9uIEZlYiAwOCAyMDE2IEFuZHJldyBI
dWdoZXMgPGdudS5hbmRyZXdAcmVkaGF0LmNvbT4gLSAxOjEuOC4wLjcyLTUuYjE1CistIEV4cGxp
Y2l0bHkgc2V0IHRoZSBDKysgc3RhbmRhcmQgdG8gdXNlLCBhcyB0aGUgZGVmYXVsdCBoYXMgY2hh
bmdlZCB0byBDKysgMjAxNCBpbiBHQ0MgNi4KKy0gVHVybiBvZmYgLVdlcnJvciBkdWUgdG8gZm9y
bWF0IHdhcm5pbmdzIGluIEhvdFNwb3QgYW5kIC1zdGQgdXNhZ2Ugd2FybmluZ3MgaW4gU0NUUC4K
Ky0gUnVuIHRlc3RzIHVuZGVyIHRoZSBjaGVjayBzdGFnZSBhbmQgdXNlIHRoZSBkZWJ1ZyBidWls
ZCBmaXJzdC4KKwogKiBGcmkgRmViIDA1IDIwMTYgQW5kcmV3IEh1Z2hlcyA8Z251LmFuZHJld0By
ZWRoYXQuY29tPiAtIDE6MS44LjAuNzEtNC5iMTUKIC0gQmFja3BvcnQgUzgxNDgzNTE6IE9ubHkg
ZGlzcGxheSByZXNvbHZlZCBzeW1saW5rIGZvciBjb21waWxlciwgZG8gbm90IGNoYW5nZSBwYXRo
CiAKLS0gCjIuNS4wCgo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1123107</attachid>
            <date>2016-02-11 05:11:00 -0500</date>
            <delta_ts>2016-02-11 05:11:12 -0500</delta_ts>
            <desc>configure work-around</desc>
            <filename>0002-Make-java-1.8.0-openjdk-configure-work-with-ccache-i.patch</filename>
            <type>text/plain</type>
            <size>869</size>
            <attacher name="Severin Gehwolf">sgehwolf</attacher>
            
              <data encoding="base64">RnJvbSA5YjlmMWMyNDc1N2JiODcxMGIzZmIzMDZlNzdiZjVlOGJmZDA4ZjNiIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTZXZlcmluIEdlaHdvbGYgPHNnZWh3b2xmQHJlZGhhdC5jb20+
CkRhdGU6IFRodSwgMTEgRmViIDIwMTYgMTE6MDc6MjQgKzAxMDAKU3ViamVjdDogW1BBVENIIDIv
Ml0gTWFrZSBqYXZhLTEuOC4wLW9wZW5qZGsgY29uZmlndXJlIHdvcmsgd2l0aCBjY2FjaGUKIGlu
c3RhbGxlZC4KClRPRE86IEFkZCAtLWVuYWJsZS1jY2FjaGUgc3dpdGNoIHRvIGNvbmZpZ3VyZSBp
bnN0ZWFkLgotLS0KIGphdmEtMS44LjAtb3Blbmpkay5zcGVjIHwgMyArKysKIDEgZmlsZSBjaGFu
Z2VkLCAzIGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9qYXZhLTEuOC4wLW9wZW5qZGsuc3Bl
YyBiL2phdmEtMS44LjAtb3Blbmpkay5zcGVjCmluZGV4IDkxYWYzNjQuLmYyYzkyNTcgMTAwNjQ0
Ci0tLSBhL2phdmEtMS44LjAtb3Blbmpkay5zcGVjCisrKyBiL2phdmEtMS44LjAtb3Blbmpkay5z
cGVjCkBAIC0xMjEwLDYgKzEyMTAsOSBAQCBmaQogbWtkaXIgLXAgJXtidWlsZG91dHB1dGRpciAk
c3VmZml4fQogcHVzaGQgJXtidWlsZG91dHB1dGRpciAkc3VmZml4fQogCisjIFJlbW92ZSBjY2Fj
aGUgZnJvbSBwYXRoLiBTZWU6CisjIGh0dHA6Ly9tYWlsLm9wZW5qZGsuamF2YS5uZXQvcGlwZXJt
YWlsL2J1aWxkLWRldi8yMDE2LUZlYnJ1YXJ5LzAxNjU2Mi5odG1sCitQQVRIPSQoZWNobyAkUEFU
SCB8IHNlZCAncyMle19saWJkaXJ9L2NjYWNoZTojI2cnKSBcCiBiYXNoIC4uLy4uL2NvbmZpZ3Vy
ZSBcCiAlaWZuYXJjaCAle2ppdF9hcmNoZXN9CiAgICAgLS13aXRoLWp2bS12YXJpYW50cz16ZXJv
IFwKLS0gCjIuNS4wCgo=
</data>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1127635</attachid>
            <date>2016-02-16 11:44:00 -0500</date>
            <delta_ts>2016-02-16 11:52:37 -0500</delta_ts>
            <desc>spec file patch changing flag to -fno-lifetime-dse</desc>
            <filename>0001-Use-fno-lifetime-dse-over-fno-guess-branch-probabili.patch</filename>
            <type>text/plain</type>
            <size>2059</size>
            <attacher name="Severin Gehwolf">sgehwolf</attacher>
            
              <data encoding="base64">RnJvbSBmN2MxYmQxNmIzY2QyZTU0MjNhYTlmM2YyY2NjMDJlMjViMDVlYjg5IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBTZXZlcmluIEdlaHdvbGYgPHNnZWh3b2xmQHJlZGhhdC5jb20+
CkRhdGU6IFR1ZSwgMTYgRmViIDIwMTYgMTc6NDI6MzMgKzAxMDAKU3ViamVjdDogW1BBVENIXSBV
c2UgLWZuby1saWZldGltZS1kc2Ugb3ZlciAtZm5vLWd1ZXNzLWJyYW5jaC1wcm9iYWJpbGl0eS4K
ClNlZSBSSEJaIzEzMDY1NTguCi0tLQogamF2YS0xLjguMC1vcGVuamRrLnNwZWMgfCAxMCArKysr
KysrLS0tCiAxIGZpbGUgY2hhbmdlZCwgNyBpbnNlcnRpb25zKCspLCAzIGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL2phdmEtMS44LjAtb3Blbmpkay5zcGVjIGIvamF2YS0xLjguMC1vcGVuamRr
LnNwZWMKaW5kZXggNjhjMWNiMy4uMjJkYjU0MiAxMDA2NDQKLS0tIGEvamF2YS0xLjguMC1vcGVu
amRrLnNwZWMKKysrIGIvamF2YS0xLjguMC1vcGVuamRrLnNwZWMKQEAgLTczNSw3ICs3MzUsNyBA
QCBPYnNvbGV0ZXM6IGphdmEtMS43LjAtb3Blbmpkay1hY2Nlc3NpYmlsaXR5JTEKIAogTmFtZTog
ICAgamF2YS0le2phdmF2ZXJ9LSV7b3JpZ2lufQogVmVyc2lvbjogJXtqYXZhdmVyfS4le3VwZGF0
ZXZlcn0KLVJlbGVhc2U6IDYuJXtidWlsZHZlcn0lez9kaXN0fQorUmVsZWFzZTogNy4le2J1aWxk
dmVyfSV7P2Rpc3R9CiAjIGphdmEtMS41LjAtaWJtIGZyb20ganBhY2thZ2Uub3JnIHNldCBFcG9j
aCB0byAxIGZvciB1bmtub3duIHJlYXNvbnMsCiAjIGFuZCB0aGlzIGNoYW5nZSB3YXMgYnJvdWdo
dCBpbnRvIFJIRUwtNC4gIGphdmEtMS41LjAtaWJtIHBhY2thZ2VzCiAjIGFsc28gaW5jbHVkZWQg
dGhlIGVwb2NoIGluIHRoZWlyIHZpcnR1YWwgcHJvdmlkZXMuICBUaGlzIGNyZWF0ZWQgYQpAQCAt
MTE5Myw4ICsxMTkzLDggQEAgZXhwb3J0IENGTEFHUz0iJENGTEFHUyAtbWllZWUiCiAjIFdlIHVz
ZSBvdXJjcHBmbGFncyBiZWNhdXNlIHRoZSBPcGVuSkRLIGJ1aWxkIHNlZW1zIHRvCiAjIHBhc3Mg
RVhUUkFfQ0ZMQUdTIHRvIHRoZSBIb3RTcG90IEMrKyBjb21waWxlci4uLgogIyBFeHBsaWNpdGx5
IHNldCB0aGUgQysrIHN0YW5kYXJkIGFzIHRoZSBkZWZhdWx0IGhhcyBjaGFuZ2VkIG9uIEdDQyA+
PSA2Ci1FWFRSQV9DRkxBR1M9IiVvdXJjcHBmbGFncyAtc3RkPWdudSsrOTggLVduby1lcnJvciAt
Zm5vLWRlbGV0ZS1udWxsLXBvaW50ZXItY2hlY2tzIC1mbm8tZ3Vlc3MtYnJhbmNoLXByb2JhYmls
aXR5IgotRVhUUkFfQ1BQX0ZMQUdTPSIlb3VyY3BwZmxhZ3MgLXN0ZD1nbnUrKzk4IC1mbm8tZGVs
ZXRlLW51bGwtcG9pbnRlci1jaGVja3MgLWZuby1ndWVzcy1icmFuY2gtcHJvYmFiaWxpdHkiCitF
WFRSQV9DRkxBR1M9IiVvdXJjcHBmbGFncyAtc3RkPWdudSsrOTggLVduby1lcnJvciAtZm5vLWRl
bGV0ZS1udWxsLXBvaW50ZXItY2hlY2tzIC1mbm8tbGlmZXRpbWUtZHNlIgorRVhUUkFfQ1BQX0ZM
QUdTPSIlb3VyY3BwZmxhZ3MgLXN0ZD1nbnUrKzk4IC1mbm8tZGVsZXRlLW51bGwtcG9pbnRlci1j
aGVja3MgLWZuby1saWZldGltZS1kc2UiCiAlaWZhcmNoICV7cG93ZXI2NH0gcHBjCiAjIGZpeCBy
cG1saW50IHdhcm5pbmdzCiBFWFRSQV9DRkxBR1M9IiRFWFRSQV9DRkxBR1MgLWZuby1zdHJpY3Qt
YWxpYXNpbmciCkBAIC0xNjk1LDYgKzE2OTUsMTAgQEAgcmVxdWlyZSAiY29weV9qZGtfY29uZmln
cy5sdWEiCiAlZW5kaWYKIAogJWNoYW5nZWxvZworKiBUdWUgRmViIDE2IDIwMTYgU2V2ZXJpbiBH
ZWh3b2xmIDxzZ2Vod29sZkByZWRoYXQuY29tPiAtIDE6MS44LjAuNzItNy5iMTUKKy0gVXNlIC1m
bm8tbGlmZXRpbWUtZHNlIG92ZXIgLWZuby1ndWVzcy1icmFuY2gtcHJvYmFiaWxpdHkuCisgIFNl
ZSBSSEJaIzEzMDY1NTguCisKICogTW9uIEZlYiAxNSAyMDE2IFNldmVyaW4gR2Vod29sZiA8c2dl
aHdvbGZAcmVkaGF0LmNvbT4gLSAxOjEuOC4wLjcyLTYuYjE1CiAtIEFkZCBhYXJjaDY0X0ZUQkZT
X3JoYnpfMTMwNzIyNC5wYXRjaCBzbyBhcyB0byByZXNvbHZlIFJIQlojMTMwNzIyNC4KIAotLSAK
Mi41LjAKCg==
</data>
<flag name="review"
          id="2557577"
          type_id="155"
          status="+"
          setter="omajid"
    />
          </attachment>
      

    </bug>

</bugzilla>