<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1310929</bug_id>
          
          <creation_ts>2016-02-22 20:04:00 -0500</creation_ts>
          <short_desc>-Wunused-const-variable gives too many false positives</short_desc>
          <delta_ts>2016-03-10 10:11:28 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>gcc</component>
          <version>24</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="wibrown@redhat.com">wibrown</reporter>
          <assigned_to name="Jakub Jelinek">jakub</assigned_to>
          <cc>davejohansen</cc>
    
    
    <cc>jakub</cc>
    
    
    <cc>jwakely</cc>
    
    
    <cc>law</cc>
    
    
    <cc>mpolacek</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in></cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2016-03-10 10:11:28</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9086409</commentid>
    <comment_count>0</comment_count>
    <who name="wibrown@redhat.com">wibrown</who>
    <bug_when>2016-02-22 20:04:52 -0500</bug_when>
    <thetext>Description of problem:
It&apos;s a common pattern in large software projects to define a single header file shared by many smaller object files.

This leads to gcc displaying hundreds of unused const variable warnings where a const defined in the .h may be used in 2 or 3 source, files, but not all. In any file it is not used, the warning is omitted.

For example:

I0&gt; cat test_b.c 

#include &quot;test.h&quot;


void do_nothing() {
    return;
}

I0&gt; cat test_a.c 

#include &quot;test.h&quot;

int main(int argc, char **argv) {
    do_nothing();
    printf(&quot;%s\n&quot;, hello_world);
}

I0&gt; cat test.h 
#include &lt;stdio.h&gt;

void do_nothing();

static char* const hello_world     = &quot;Hello World&quot;;

I0&gt; cat Makefile 

all: test_a

test_a: test_b
	gcc -Wall -o test test_b.o test_a.c

test_b:
	gcc -Wall -c -fpic -o test_b.o test_b.c


Running this yields:

gcc -Wall -c -fpic -o test_b.o test_b.c
In file included from test_b.c:2:0:
test.h:5:20: warning: ‘hello_world’ defined but not used [-Wunused-const-variable]
 static char* const hello_world     = &quot;Hello World&quot;;
                    ^~~~~~~~~~~
gcc -Wall -o test test_b.o test_a.c


Which is incorrect: the const variable *is* used, but just not in this file yet.

I *like* the idea of the unused-const-variable check, but too many false positives will lead to it being disabled.

I am not sure what the correct solution is here: Perhaps const variables in .h files are ignored? Perhaps there needs to be a way to track these over man runs of gcc through a cache / check file?

Until this is fixed, I do not think that it is wise to include unused-const-variable in -Wall, as it will create excessive noise and could diminish the value of the feature.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9087235</commentid>
    <comment_count>1</comment_count>
    <who name="Marek Polacek">mpolacek</who>
    <bug_when>2016-02-23 04:19:44 -0500</bug_when>
    <thetext>As discussed in https://gcc.gnu.org/bugzilla/show_bug.cgi?id=28901, -Wunused-const-variable now has two levels: &quot;One level to only check for unused static const variables in the main
compilation file. Which is enabled by -Wunused-variable. And a second
level that also checks for unused static const variables in included
files. Which must be explicitly enabled.&quot;

It&apos;ll be in the next Fedora GCC build I suspect.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9094225</commentid>
    <comment_count>2</comment_count>
    <who name="Jan Kurik">jkurik</who>
    <bug_when>2016-02-24 10:29:02 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 24 development cycle.
Changing version to &apos;24&apos;.

More information and reason for this action is here:
https://fedoraproject.org/wiki/Fedora_Program_Management/HouseKeeping/Fedora24#Rawhide_Rebase</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9138611</commentid>
    <comment_count>3</comment_count>
    <who name="Marek Polacek">mpolacek</who>
    <bug_when>2016-03-10 10:11:28 -0500</bug_when>
    <thetext>Should be fixed in gcc-6.0.0-0.13.fc24.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>