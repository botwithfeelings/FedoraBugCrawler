<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1330098</bug_id>
          
          <creation_ts>2016-04-25 08:10:00 -0400</creation_ts>
          <short_desc>FTBFS: segmentation fault during build</short_desc>
          <delta_ts>2017-01-23 00:19:15 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>coq</component>
          <version>24</version>
          <rep_platform>ppc64le</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>medium</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1071880</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Karsten Hopp">karsten</reporter>
          <assigned_to name="Alan Dunn">amdunn</assigned_to>
          <cc>amdunn</cc>
    
    
    <cc>dan</cc>
    
    
    <cc>dwheeler</cc>
    
    
    <cc>loganjerry</cc>
    
    
    <cc>rjones</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>coq-8.6-1.fc25</cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-01-23 00:19:15</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9265116</commentid>
    <comment_count>0</comment_count>
    <who name="Karsten Hopp">karsten</who>
    <bug_when>2016-04-25 08:10:28 -0400</bug_when>
    <thetext>Description of problem:
bin/coqtop -boot   -native-compiler -compile theories/Init/Datatypes.v  -noinit -R theories Coq
rm -f theories/Init/Logic_Type.glob
bin/coqtop -boot   -native-compiler -compile theories/Init/Logic_Type.v  -noinit -R theories Coq
rm -f theories/Init/Nat.glob
bin/coqtop -boot   -native-compiler -compile theories/Init/Nat.v  -noinit -R theories Coq
Makefile.build:590: recipe for target &apos;theories/Init/Nat.vo&apos; failed
make[1]: *** [theories/Init/Nat.vo] Segmentation fault (core dumped)
make[1]: *** [theories/Init/Nat.vo] Deleting file &apos;theories/Init/Nat.glob&apos;
make[1]: Leaving directory &apos;/builddir/build/BUILD/coq-8.5pl1&apos;
Makefile:158: recipe for target &apos;submake&apos; failed
make: *** [submake] Error 2

Version-Release number of selected component (if applicable):
coq-8.5pl1-1.fc24.

How reproducible:
always

Steps to Reproduce:
1. ppc-koj ibuild --scratch f24 coq-8.5pl1-1.fc24.src.rpm
2.
3.

Actual results:


Expected results:


Additional info:</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9273469</commentid>
    <comment_count>1</comment_count>
    <who name="Jerry James">loganjerry</who>
    <bug_when>2016-04-27 10:16:18 -0400</bug_when>
    <thetext>This is probably related to the new native compilation feature of coq.  I&apos;ll try to track it down but, if unsuccessful, may have to turn that feature off for ppc64le.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9300728</commentid>
    <comment_count>2</comment_count>
    <who name="Jerry James">loganjerry</who>
    <bug_when>2016-05-06 18:22:42 -0400</bug_when>
    <thetext>Since I already had a ppc64 VM that I used to track down a gap bug, I tried building coq there, but it succeeded.  So this bug appears on ppc64le, but not ppc64, unless my VM is somehow significantly different from real hardware.  I&apos;ll try creating a ppc64le VM next.  (Although access to real hardware would be very much appreciated, as these emulated CPUs are really slooooooow.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9302991</commentid>
    <comment_count>3</comment_count>
    <who name="Dan HorÃ¡k">dan</who>
    <bug_when>2016-05-09 01:57:58 -0400</bug_when>
    <thetext>Oh, when you spoke about VM I thought you already have access to real HW VM. There are OpenPOWER hubs across the world that provide VMs to developers, like the one we manage at Brno Technical University. You can sign up at https://docs.google.com/forms/d/1py0Fg2x9xoQP9yYzOm4DSnJ1buyQBBCWN9Sj_OZuXek/viewform</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9346000</commentid>
    <comment_count>4</comment_count>
    <who name="Jerry James">loganjerry</who>
    <bug_when>2016-05-20 19:51:20 -0400</bug_when>
    <thetext>I suspect an ocaml code generation bug on ppc64le.  This is not related to the new native compilation feature of coq.  The segfault happens with that turned off.  The segfault occurs in the function nat_of_int (see plugins/syntax/nat_syntax.ml).

On ppc64, which works, that function starts like this:

    1d40:       7c 08 02 a6     mflr    r0
    1d44:       f8 01 00 10     std     r0,16(r1)
    1d48:       f8 21 ff 51     stdu    r1,-176(r1)
    1d4c:       f8 81 00 88     std     r4,136(r1)
    1d50:       f8 61 00 80     std     r3,128(r1)
    1d54:       7c 83 23 78     mr      r3,r4
    1d58:       e9 62 81 08     ld      r11,-32504(r2)
    1d5c:       f8 41 00 28     std     r2,40(r1)
    1d60:       e8 4b 00 08     ld      r2,8(r11)
    1d64:       e9 6b 00 00     ld      r11,0(r11)
    1d68:       7d 69 03 a6     mtctr   r11
    1d6c:       4e 80 04 21     bctrl

On ppc64le, which segfaults, that function starts like this:

    1aa0:       02 00 4c 3c     addis   r2,r12,2
    1aa4:       60 63 42 38     addi    r2,r2,25440
    1aa8:       a6 02 08 7c     mflr    r0
    1aac:       10 00 01 f8     std     r0,16(r1)
    1ab0:       51 ff 21 f8     stdu    r1,-176(r1)
    1ab4:       88 00 81 f8     std     r4,136(r1)
    1ab8:       80 00 61 f8     std     r3,128(r1)
    1abc:       78 23 83 7c     mr      r3,r4
    1ac0:       08 81 82 e9     ld      r12,-32504(r2)
    1ac4:       18 00 41 f8     std     r2,24(r1)
    1ac8:       a6 03 89 7d     mtctr   r12
    1acc:       21 04 80 4e     bctrl

The bctrl instruction is the one that faults, because a bogus address has been loaded into the ctr register.  I notice that on ppc64, after loading r11 with -32504(r2), an additional load into r11 of 0(r11) is done, but there is no such corresponding additional load of r12 in the ppc64le code.  I also notice that on ppc, the value of r2 appears to come from the caller, where on ppc64le, there are 2 additional instructions at the top of the function that set r2 from the value of r12.

Of course, I basically know squat about ppc assembly, so all of that might be utter nonsense.

I&apos;m adding Richard Jones to the CC list.  Richard, are you aware of any ocaml code generation bugs on ppc64le?  Perhaps involving recursive local functions?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9346405</commentid>
    <comment_count>5</comment_count>
    <who name="Richard W.M. Jones">rjones</who>
    <bug_when>2016-05-21 04:55:16 -0400</bug_when>
    <thetext>It wouldn&apos;t surprise me if there are still lurking ppc64le codegen
bugs.  Note that Fedora 24 is still using the out-of-tree code
generator written by IBM.  New in OCaml 4.03 is an in-tree code
generator for POWER written from scratch by Xavier Leroy et al.

Therefore I&apos;m not inclined to fix code gen bugs in this version
of OCaml unless they are simple/obvious ones.  We will get the
new code generator in F25.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9346406</commentid>
    <comment_count>6</comment_count>
    <who name="Richard W.M. Jones">rjones</who>
    <bug_when>2016-05-21 04:56:45 -0400</bug_when>
    <thetext>(In reply to Jerry James from comment #4)
&gt; Perhaps involving recursive local functions?

BTW don&apos;t overlook simple stack overflows.  These are much more
common on POWER because the stack frames are larger.  Try doing:

ulimit -s 65536

before the build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10062552</commentid>
    <comment_count>7</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-13 16:18:57 -0500</bug_when>
    <thetext>why-2.36-1.fc25 frama-c-1.13-7.fc25 why3-0.87.3-1.fc25 gappalib-coq-1.3.2-2.fc25 zenon-0.8.2-5.fc25 flocq-2.5.2-4.fc25 coq-8.6-1.fc25 has been submitted as an update to Fedora 25. https://bodhi.fedoraproject.org/updates/FEDORA-2017-033c8000df</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10063235</commentid>
    <comment_count>8</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-14 01:22:31 -0500</bug_when>
    <thetext>coq-8.6-1.fc25, flocq-2.5.2-4.fc25, frama-c-1.13-7.fc25, gappalib-coq-1.3.2-2.fc25, why-2.36-1.fc25, why3-0.87.3-1.fc25, zenon-0.8.2-5.fc25 has been pushed to the Fedora 25 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2017-033c8000df</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10087570</commentid>
    <comment_count>9</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-01-23 00:19:15 -0500</bug_when>
    <thetext>coq-8.6-1.fc25, flocq-2.5.2-4.fc25, frama-c-1.13-7.fc25, gappalib-coq-1.3.2-2.fc25, why-2.36-1.fc25, why3-0.87.3-1.fc25, zenon-0.8.2-5.fc25 has been pushed to the Fedora 25 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>