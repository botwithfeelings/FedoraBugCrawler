<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1426737</bug_id>
          
          <creation_ts>2017-02-24 12:40:00 -0500</creation_ts>
          <short_desc>custodia: Provide a Python 3 subpackage</short_desc>
          <delta_ts>2017-06-09 15:08:59 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>custodia</component>
          <version>26</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1285816</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Iryna Shcherbina">ishcherb</reporter>
          <assigned_to name="Christian Heimes">cheimes</assigned_to>
          <cc>abokovoy</cc>
    
    
    <cc>cheimes</cc>
    
    
    <cc>jpazdziora</cc>
    
    
    <cc>pviktori</cc>
    
    
    <cc>pvoborni</cc>
    
    
    <cc>ssorce</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>custodia-0.3.1-2.fc26</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-06-09 15:08:59</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10182657</commentid>
    <comment_count>0</comment_count>
    <who name="Iryna Shcherbina">ishcherb</who>
    <bug_when>2017-02-24 12:40:12 -0500</bug_when>
    <thetext>The package `custodia` does not yet have a Python 3 equivalent subpackage. Please provide it so this package is fully Python 3â€“ready.


According to the Python packaging guidelines [0], software must be
packaged for Python 3 if upstream supports it.
The guidelines give detailed information on how to do this, and even
provide an example spec file [1].

The current best practice is to provide subpackages for the two Python
versions (called &quot;Common SRPM&quot; in the guidelines). Alternatively, if
nothing depends on your Python2 package, you can just switch to Python 3
entirely.

It&apos;s OK to do this in Rawhide only, however, it would be greatly
appreciated if you could push it to Fedora 25 as well.


If you need more instructions, a guide for porting Python-based RPMs is
available at [2].
If anything is unclear, or if you need any kind of assistance with the
porting, you can ask on IRC (#fedora-python on Freenode), or reply here.
We&apos;ll be happy to help!


[0] https://fedoraproject.org/wiki/Packaging:Python
[1] https://fedoraproject.org/wiki/Packaging:Python#Example_common_spec_file
[2] http://python-rpm-porting.readthedocs.io/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10193428</commentid>
    <comment_count>1</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2017-02-28 07:26:16 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 26 development cycle.
Changing version to &apos;26&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10200839</commentid>
    <comment_count>2</comment_count>
    <who name="Christian Heimes">cheimes</who>
    <bug_when>2017-03-02 03:12:36 -0500</bug_when>
    <thetext>I released Custodia 0.3 today. It is the first version that fully supports and works on Python 3. For Fedora 26+ I can change the custodia base package to use Python 3 instead of Python 2. Is it necessary to also provide custodia-2 and custodia-3?

Proposal:

package `custodia`:
  * depends on python3-custodia instead of python2-custodia
  * /usr/bin/custodia-cli uses python3
  * /usr/sbin/custodia uses python3


In case 2/3 aliases are required:

package `python3-custodia`:
  * add /usr/sbin/custodia-3
  * add /usr/bin/custodia-cli-3

package `python2-custodia`:
  * add /usr/sbin/custodia-2
  * add /usr/bin/custodia-cli-2</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10201005</commentid>
    <comment_count>3</comment_count>
    <who name="Iryna Shcherbina">ishcherb</who>
    <bug_when>2017-03-02 04:18:04 -0500</bug_when>
    <thetext>Yes, you can just change the custodia main package to use Python 3.

Providing custodia-2 and custodia-3 subpackages is not necessary, if nothing depends on the Python 2 version.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10201043</commentid>
    <comment_count>4</comment_count>
    <who name="Petr Viktorin">pviktori</who>
    <bug_when>2017-03-02 04:28:00 -0500</bug_when>
    <thetext>The variants in /usr/bin are only necessary for code that interacts with Python code in some way: for example a &quot;PEP8&quot; linter or something that users write Python plugins for.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10202068</commentid>
    <comment_count>5</comment_count>
    <who name="Christian Heimes">cheimes</who>
    <bug_when>2017-03-02 09:13:44 -0500</bug_when>
    <thetext>I have created a build, https://koji.fedoraproject.org/koji/taskinfo?taskID=18137897 . I&apos;ll take care of F26 and Bodhi as soon as my time allows it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10340722</commentid>
    <comment_count>6</comment_count>
    <who name="Alexander Bokovoy">abokovoy</who>
    <bug_when>2017-04-18 05:20:04 -0400</bug_when>
    <thetext>Not sure *why* we should have Custodia in Python3 by default when depending FreeIPA code is all using Python 2 version. More so in F26.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10340757</commentid>
    <comment_count>7</comment_count>
    <who name="Christian Heimes">cheimes</who>
    <bug_when>2017-04-18 05:31:35 -0400</bug_when>
    <thetext>Why should Custodia use Python 2 when it works perfectly fine with Fedora&apos;s default Python? After all it&apos;s a standalone service and does not depend on FreeIPA.

Only the ipa-custodia service of FreeIPA is limited to Python 2 because FreeIPA 4.4 and 4.5 do not support Python 3 yet.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10340838</commentid>
    <comment_count>8</comment_count>
    <who name="Jan Pazdziora">jpazdziora</who>
    <bug_when>2017-04-18 05:59:48 -0400</bug_when>
    <thetext>(In reply to Christian Heimes from comment #7)
&gt; Why should Custodia use Python 2 when it works perfectly fine with Fedora&apos;s
&gt; default Python? After all it&apos;s a standalone service and does not depend on
&gt; FreeIPA.
&gt; 
&gt; Only the ipa-custodia service of FreeIPA is limited to Python 2 because
&gt; FreeIPA 4.4 and 4.5 do not support Python 3 yet.

That&apos;s all fine and neat but it looks like the current

python2-custodia-0.3.1-2.fc27.noarch conflicts with python2-ipalib &lt; 4.5 provided by python2-ipalib-4.4.4-1.fc27.noarch

Why is python2-custodia picky about ipalib version?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10340839</commentid>
    <comment_count>9</comment_count>
    <who name="Alexander Bokovoy">abokovoy</who>
    <bug_when>2017-04-18 06:00:23 -0400</bug_when>
    <thetext>In FreeIPA 4.4.4 we have:
 - python2-ipaserver requires python-custodia &gt;= 0.3.1
 - freeipa-server requires custodia &gt;= 0.3.1

In custodia package we have:

# FreeIPA 4.3 and 4.4 are not compatible with custodia because the custodia
# script now runs under Python 3.
Conflicts:          freeipa-server-common &lt; 4.5
Conflicts:          ipa-server-common &lt; 4.5

Both exist in the same repo and cannot be installed at the same time. Fedora Rawhide does not have FreeIPA 4.5 yet due to various reasons related to FreeIPA itself, mostly because it is still too unstable, so I think a reasonable solution right now is to make sure custodia package in rawhide works with FreeIPA 4.4.4 like it does in F26 where there is custodia 0.3.1 as well.

Please consider unblocking use of FreeIPA 4.4.4 in rawhide.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10341084</commentid>
    <comment_count>10</comment_count>
    <who name="Jan Pazdziora">jpazdziora</who>
    <bug_when>2017-04-18 07:23:05 -0400</bug_when>
    <thetext>(In reply to Alexander Bokovoy from comment #9)
&gt; reasonable solution right now is to make sure custodia package in rawhide
&gt; works with FreeIPA 4.4.4 like it does in F26 where there is custodia 0.3.1
&gt; as well.

I agree in general but please note that currently there is only custodia-0.2.0-3.fc26.noarch.rpm in http://dl.fedoraproject.org/pub/fedora/linux/development/26/Server/x86_64/os/Packages/c/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10341450</commentid>
    <comment_count>11</comment_count>
    <who name="Christian Heimes">cheimes</who>
    <bug_when>2017-04-18 08:37:09 -0400</bug_when>
    <thetext>Let&apos;s put some things straight first. The problem is purely a packaging issue. Custodia 0.3 and FreeIPA 4.4 are compatible. Custodia 0.3 just changed /usr/sbin/custodia from Python 2 to 3.

FreeIPA 4.4

FreeIPA 4.4.x has no version requirements for custodia. python2-ipaserver and ipa-server depend on any version of custodia, python-custodia and python3-custodia. The ipa-custodia.service starts /usr/sbin/custodia. Since custodia 0.3, /usr/sbin/custodia is no longer Python 2.7 but whatever the main Python version is (e.g. 3.6 on F26/rawhide). I added the version requirement after some developers mixed custodia 0.3.x with FreeIPA 4.4 and complained about broken ipa-replica-install.


FreeIPA 4.5

FreeIPA 4.5.0 depends on custodia &gt;= 0.3.1. ipa-custodia.service doesn&apos;t use /usr/sbin/custodia any more. Instead it uses a specialized start script /usr/libexec/ipa/ipa-custodia. The script serves two purposes: 1) it allows IPA to have a separate SELinux context for ipa-custodia, 2) it gives IPA full control over the Python version for ipa-custodia.

I see two ways to address the root cause of incompatibility between custodia 0.3 package and FreeIPA package:

1) Revert /usr/sbin/custodia to Python 2 and make the custodia package depend on python2-custodia instead of python3-custodia.
2) Change FreeIPA 4.4.x to depend on custodia 0.3.1 and to run /usr/sbin/custodia-2 instead of /usr/sbin/custodia.

I&apos;d go for variant (2) for multiple reasons. I can keep &apos;custodia&apos; package Python 3. FreeIPA 4.4 would also benefit from a more recent Custodia version. Custodia 0.2 and 0.3.0 have a bug related to handling of white space and other non-alphanumeric characters in secret names.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10341544</commentid>
    <comment_count>12</comment_count>
    <who name="Jan Pazdziora">jpazdziora</who>
    <bug_when>2017-04-18 08:57:02 -0400</bug_when>
    <thetext>(In reply to Christian Heimes from comment #11)
&gt; Let&apos;s put some things straight first. The problem is purely a packaging
&gt; issue. Custodia 0.3 and FreeIPA 4.4 are compatible. Custodia 0.3 just
&gt; changed /usr/sbin/custodia from Python 2 to 3.

Is this change a critical part of the upgrade from Custodia 0.2 to 0.3, or just a coincidence? What would happen if you respun custodia 0.3* to run /usr/sbin/custodia with Python 2?

&gt; FreeIPA 4.4
&gt; 
&gt; FreeIPA 4.4.x has no version requirements for custodia. python2-ipaserver
&gt; and ipa-server depend on any version of custodia, python-custodia and
&gt; python3-custodia. The ipa-custodia.service starts /usr/sbin/custodia. Since
&gt; custodia 0.3, /usr/sbin/custodia is no longer Python 2.7 but whatever the
&gt; main Python version is (e.g. 3.6 on F26/rawhide). I added the version
&gt; requirement after some developers mixed custodia 0.3.x with FreeIPA 4.4 and
&gt; complained about broken ipa-replica-install.

It might make sense for FreeIPA 4.4 in Fedora to be specific about using /usr/sbin/custodia-2.

&gt; FreeIPA 4.5
&gt; 
&gt; FreeIPA 4.5.0 depends on custodia &gt;= 0.3.1. ipa-custodia.service doesn&apos;t use
&gt; /usr/sbin/custodia any more. Instead it uses a specialized start script
&gt; /usr/libexec/ipa/ipa-custodia. The script serves two purposes: 1) it allows
&gt; IPA to have a separate SELinux context for ipa-custodia, 2) it gives IPA
&gt; full control over the Python version for ipa-custodia.
&gt; 
&gt; I see two ways to address the root cause of incompatibility between custodia
&gt; 0.3 package and FreeIPA package:
&gt; 
&gt; 1) Revert /usr/sbin/custodia to Python 2 and make the custodia package
&gt; depend on python2-custodia instead of python3-custodia.
&gt; 2) Change FreeIPA 4.4.x to depend on custodia 0.3.1 and to run
&gt; /usr/sbin/custodia-2 instead of /usr/sbin/custodia.
&gt; 
&gt; I&apos;d go for variant (2) for multiple reasons. I can keep &apos;custodia&apos; package
&gt; Python 3. FreeIPA 4.4 would also benefit from a more recent Custodia
&gt; version. Custodia 0.2 and 0.3.0 have a bug related to handling of white
&gt; space and other non-alphanumeric characters in secret names.

In Fedora 26, I&apos;d actually recommend to do both, freeing your hands to put Custodia 0.3 to Fedora 26 as soon as possible.

In rawhide, given FreeIPA 4.5 won&apos;t be available for another week, going with 1 would be a quick fix for now and once 4.5 lands, it would not longer be needed and you could move to Python 3 with /usr/sbin/custodia in controlled manner.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10341556</commentid>
    <comment_count>13</comment_count>
    <who name="Jan Pazdziora">jpazdziora</who>
    <bug_when>2017-04-18 08:59:42 -0400</bug_when>
    <thetext>By the way, the fact that FreeIPA 4.5 depends on Custodia 0.3+ does not really explain why we have

python2-custodia-0.3.1-2.fc27.noarch conflicts with python2-ipalib &lt; 4.5 provided by python2-ipalib-4.4.4-1.fc27.noarch

there. Why is such a conflict needed for a Python 2 package?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10341809</commentid>
    <comment_count>14</comment_count>
    <who name="Petr Vobornik">pvoborni</who>
    <bug_when>2017-04-18 09:45:39 -0400</bug_when>
    <thetext>Before FreeIPA 4.5.1 is released and put to rawhide, I don&apos;t see an issue with backporting https://pagure.io/freeipa/c/403263df7a3be61086c87c5577698cf32a912065 to FreeIPA 4-4 and then patching rawhide.

If custodia 3.x is needed in F26 then we can to the same with f26. 

Both will require to remove the conflict mentioned in comment 13.

Christian, do you agree and will it resolve the situation?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10462117</commentid>
    <comment_count>15</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-05-31 03:46:18 -0400</bug_when>
    <thetext>custodia-0.3.1-2.fc26 has been submitted as an update to Fedora 26. https://bodhi.fedoraproject.org/updates/FEDORA-2017-c15bb90a4f</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10469856</commentid>
    <comment_count>16</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-06-01 14:05:18 -0400</bug_when>
    <thetext>custodia-0.3.1-2.fc26 freeipa-4.4.4-2.fc26 has been submitted as an update to Fedora 26. https://bodhi.fedoraproject.org/updates/FEDORA-2017-0d0ec3e0af</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10469880</commentid>
    <comment_count>17</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-06-01 14:06:19 -0400</bug_when>
    <thetext>custodia-0.3.1-2.fc26 freeipa-4.4.4-2.fc26 has been submitted as an update to Fedora 26. https://bodhi.fedoraproject.org/updates/FEDORA-2017-0d0ec3e0af</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10475039</commentid>
    <comment_count>18</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-06-04 15:38:58 -0400</bug_when>
    <thetext>custodia-0.3.1-2.fc26, freeipa-4.4.4-2.fc26 has been pushed to the Fedora 26 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2017-0d0ec3e0af</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10494164</commentid>
    <comment_count>19</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-06-09 15:08:59 -0400</bug_when>
    <thetext>custodia-0.3.1-2.fc26, freeipa-4.4.4-2.fc26 has been pushed to the Fedora 26 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>