<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1427902</bug_id>
          
          <creation_ts>2017-03-01 08:33:00 -0500</creation_ts>
          <short_desc>libselinux: FTBFS - fatal error: Python.h: No such file or directory</short_desc>
          <delta_ts>2017-03-02 07:26:55 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>libselinux</component>
          <version>26</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc>http://apps.fedoraproject.org/koschei/package/libselinux</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jitka Plesnikova">jplesnik</reporter>
          <assigned_to name="Petr Lautrbach">plautrba</assigned_to>
          <cc>dwalsh</cc>
    
    
    <cc>mgrepl</cc>
    
    
    <cc>plautrba</cc>
    
    
    <cc>pmoore</cc>
    
    
    <cc>vmojzis</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>libselinux-2.6-2.fc26</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-03-02 07:26:55</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10197415</commentid>
    <comment_count>0</comment_count>
    <who name="Jitka Plesnikova">jplesnik</who>
    <bug_when>2017-03-01 08:33:55 -0500</bug_when>
    <thetext>Description of problem:
Package libselinux fails to build from source in Fedora 26 and Fedora Rawhide with following error:

selinuxswig_wrap.c:149:11: fatal error: Python.h: No such file or directory
 # include &lt;Python.h&gt;
           ^~~~~~~~~~
compilation terminated.
make[1]: *** [Makefile:104: system-pythonselinuxswig_wrap.lo] Error 1


Version-Release number of selected component (if applicable):
2.6-1.fc26

Steps to Reproduce:
koji build --scratch f27 libselinux-2.6-1.fc26.src.rpm

Additional info:
This package is tracked by Koschei. See:
http://apps.fedoraproject.org/koschei/package/libselinux

Dependency changes since last successful build
 	pcre-devel 	8.40-2.fc26 	&gt; 	8.40-3.fc26
	python2 	2.7.13-4.fc26 	&gt; 	2.7.13-5.fc26
	python2-devel 	2.7.13-4.fc26 	&gt; 	2.7.13-5.fc26
	python2-rpm-macros 	3-18.fc26 	&gt; 	3-19.fc26
	pcre-utf32 	8.40-2.fc26 	&gt; 	8.40-3.fc26
	pcre 	8.40-2.fc26 	&gt; 	8.40-3.fc26
	pcre-utf16 	8.40-2.fc26 	&gt; 	8.40-3.fc26
	pcre-cpp 	8.40-2.fc26 	&gt; 	8.40-3.fc26
	libstdc++ 	7.0.1-0.8.fc26 	&gt; 	7.0.1-0.9.fc26
	python2-libs 	2.7.13-4.fc26 	&gt; 	2.7.13-5.fc26
	libgcc 	7.0.1-0.8.fc26 	&gt; 	7.0.1-0.9.fc26
	python3-rpm-macros 	3-18.fc26 	&gt; 	3-19.fc26
	python-rpm-macros 	3-18.fc26 	&gt; 	3-19.fc26
	python-srpm-macros 	3-18.fc26 	&gt; 	3-19.fc26
	sqlite-libs 	3.16.2-3.fc26 	&gt; 	3.17.0-1.fc26
	libselinux 	2.5-18.fc26 	&gt; 	2.6-1.fc26
	libgomp 	7.0.1-0.8.fc26 	&gt; 	7.0.1-0.9.fc26
	libarchive 	3.2.2-2.fc26 	&gt; 	3.2.2-3.fc26
	gcc 	7.0.1-0.8.fc26 	&gt; 	7.0.1-0.9.fc26
	libstdc++-devel 	7.0.1-0.8.fc26 	&gt; 	7.0.1-0.9.fc26
	gcc-c++ 	7.0.1-0.8.fc26 	&gt; 	7.0.1-0.9.fc26
	kernel-headers 	4.10.0-0.rc8.git2.1.... 	&gt; 	4.10.0-1.fc26
	libsemanage 	2.5-10.fc26 	&gt; 	2.6-1.1.fc26
	cpp 	7.0.1-0.8.fc26 	&gt; 	7.0.1-0.9.fc26
	diffutils 	3.5-1.fc26 	&gt; 	3.5-3.fc26</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10201482</commentid>
    <comment_count>1</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2017-03-02 06:41:43 -0500</bug_when>
    <thetext>It&apos;s related to https://fedoraproject.org/wiki/Changes/Making_sudo_pip_safe 
libselinux/libsemanage uses PYTHON=%{__python3} which expands to /usr/libexec/system-python instead of /usr/bin/python3.

libselinux/libsemanage uses $PYTHON to determine compile cflags based on the last part in $PYTHON path.

With %{__python3} == /usr/bin/python3 it was &quot;$(PKG_CONFIG) --cflags python3&quot;. 

With %{__python3} == /usr/libexec/system-python it&apos;s &quot;$(PKG_CONFIG) --cflags system-python&quot; which obviously fails.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10201509</commentid>
    <comment_count>2</comment_count>
    <who name="Petr Lautrbach">plautrba</who>
    <bug_when>2017-03-02 06:50:28 -0500</bug_when>
    <thetext>diff --git a/libselinux/src/Makefile b/libselinux/src/Makefile
index 37d01af..2cddac9 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -2,7 +2,7 @@
 # runtimes (e.g. Python 2 vs Python 3) by optionally prefixing the build
 # targets with &quot;PYPREFIX&quot;:
 PYTHON ?= python
-PYPREFIX ?= $(notdir $(PYTHON))
+PYPREFIX ?= $(shell $(PYTHON) -c &apos;import sys;print(&quot;python%d&quot; % sys.version_info[0])&apos;)
 RUBY ?= ruby
 RUBYPREFIX ?= $(notdir $(RUBY))
 PKG_CONFIG ?= pkg-config

This change fixes it for now.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>