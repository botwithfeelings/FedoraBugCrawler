<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1466906</bug_id>
          
          <creation_ts>2017-06-30 13:24:00 -0400</creation_ts>
          <short_desc>Build with -DICAL_ALLOW_EMPTY_PROPERTIES=true</short_desc>
          <delta_ts>2017-07-03 13:03:45 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>libical</component>
          <version>26</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jason Tibbitts">tibbs</reporter>
          <assigned_to name="Milan Crha">mcrha</assigned_to>
          <cc>mcrha</cc>
    
    
    <cc>rdieter</cc>
    
    
    <cc>redhat-bugzilla</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>libical-2.0.0-10.fc27</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-07-03 04:02:11</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10558022</commentid>
    <comment_count>0</comment_count>
    <who name="Jason Tibbitts">tibbs</who>
    <bug_when>2017-06-30 13:24:59 -0400</bug_when>
    <thetext>The Cyrus IMAP server (cyrus-imapd) now supports calendaring and the new JMAP protocol (including JMAP Calendaring).  A version supporting all of this is now in Rawhide and Fedora 26, but I&apos;ve been told by my upstream that for full support libical should be built with ICAL_ALLOW_EMPTY_PROPERTIES=true and CMAKE_SKIP_RPATH=ON.

Basically I did a bunch of work to enable an external test suite called Cassandane to run within our package build process, and it found a few failures which I&apos;ve been tracking down.  As part of resolving one of those failures, upsteam made the following comment https://github.com/cyrusimap/cyrus-imapd/issues/2042#issuecomment-312291421

I&apos;m going to do some experimentation to see if building libical with either and both of those flags makes any difference to the test suite, but I wanted to get a bug filed ASAP to see if adding either of those is something you would consider.

I can completely understand why the ICAL_ALLOW_EMPTY_PROPERTIES flag would be an important thing for something like Cyrus.  I can&apos;t quite grasp how RPATH would matter, and I&apos;ve asked upstream to clarify.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10558038</commentid>
    <comment_count>1</comment_count>
    <who name="Jason Tibbitts">tibbs</who>
    <bug_when>2017-06-30 13:32:30 -0400</bug_when>
    <thetext>Never mind about the RPATH thing; upstream was just listing the differences between our build and their recommended build for bundling.  So it&apos;s just ICAL_ALLOW_EMPTY_PROPERTIES=true.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10558210</commentid>
    <comment_count>2</comment_count>
    <who name="Jason Tibbitts">tibbs</who>
    <bug_when>2017-06-30 14:57:11 -0400</bug_when>
    <thetext>Sorry for the spam.  The relevant upstream libical bug is https://github.com/libical/libical/issues/139

Basically, there&apos;s nothing invalid about empty properties, and anything depending on those properties being replaced with X-LIC-ERROR is depending on non-standards-compliant behavior.  I wouldn&apos;t think that changing that flag would hurt anything, but I haven&apos;t done any testing.

I tried looking at how Debian compiles this but had no luck as today I learned that there&apos;s actually a worse packaging system than ours.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10560712</commentid>
    <comment_count>3</comment_count>
    <who name="Milan Crha">mcrha</who>
    <bug_when>2017-07-03 04:02:11 -0400</bug_when>
    <thetext>Thanks for a bug report. It seems it would not be a big deal to add that build option to libical. Of course, cyrus might be able to not panic when some property is not available, but maybe their tests are so strict on purpose.

I hesitate to change the build options for Fedora 26, especially in this stage. Even I do not expect any negative side effects, I do not know whether there would be any.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10562316</commentid>
    <comment_count>4</comment_count>
    <who name="Jason Tibbitts">tibbs</who>
    <bug_when>2017-07-03 13:03:45 -0400</bug_when>
    <thetext>Thanks!

For the record, cyrus doesn&apos;t panic; it just fails its (moderately extensive) conformance testing because it expects a standards-compliant libical.  I don&apos;t yet know if this breaks anything in &quot;real life&quot; but at least the vast majority of the tests pass fine and the only ones that don&apos;t are related to JMAP.  And JMAP is so new that I would wager that any support for it anywhere is going to be pretty experimental anyway.

So I&apos;d say that not having this for F26 is fine, and now I&apos;ll look at how the test suite behaves on rawhide.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>