<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>304121</bug_id>
          
          <creation_ts>2007-09-24 17:31:00 -0400</creation_ts>
          <short_desc>debugedit prints: canonicalization unexpectedly shrank by one character</short_desc>
          <delta_ts>2017-06-24 08:16:52 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>rpm</component>
          <version>26</version>
          <rep_platform>All</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Reopened</keywords>
          <priority>medium</priority>
          <bug_severity>medium</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>265221</blocked>
    
    
    <blocked>426173</blocked>
    
    
    <blocked>482903</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Nalin Dahyabhai">nalin</reporter>
          <assigned_to>packaging-team-maint</assigned_to>
          <cc>anto.trande</cc>
    
    
    <cc>atigro</cc>
    
    
    <cc>bloch</cc>
    
    
    <cc>devrim</cc>
    
    
    <cc>gabriel</cc>
    
    
    <cc>herrold</cc>
    
    
    <cc>jakub</cc>
    
    
    <cc>jan.kratochvil</cc>
    
    
    <cc>jhgorse</cc>
    
    
    <cc>kevin</cc>
    
    
    <cc>lantw44</cc>
    
    
    <cc>mhroncok</cc>
    
    
    <cc>mjw</cc>
    
    
    <cc>orion</cc>
    
    
    <cc>pmatilai</cc>
    
    
    <cc>pnasrat</cc>
    
    
    <cc>rdieter</cc>
    
    
    <cc>rjones</cc>
    
    
    <cc>roland</cc>
    
    
    <cc>rvokal</cc>
    
    
    <cc>sergio</cc>
    
    
    <cc>spacewar</cc>
    
    
    <cc>stransky</cc>
    
    
    <cc>su_js1</cc>
    
    
    <cc>tcallawa</cc>
    
    
    <cc>thierry.vignaud</cc>
    
    
    <cc>tvignaud</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in></cf_fixed_in>
          <cf_doc_type>Bug Fix</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-06-19 05:46:10</cf_last_closed>
          <cf_type>---</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1433618</commentid>
    <comment_count>0</comment_count>
    <who name="Nalin Dahyabhai">nalin</who>
    <bug_when>2007-09-24 17:31:32 -0400</bug_when>
    <thetext>Description of problem:
When a the source directory for a file ends with a &apos;/&apos;, debugedit can spit out a
&quot;canonicalization unexpectedly shrank by one character&quot; error and fail.  That&apos;s
not really enough for most people to figure out what&apos;s gone wrong or how to fix it.

Version-Release number of selected component (if applicable):
rpm-build-4.4.2.2-0.5.rc2

How reproducible:
Always

Steps to Reproduce:
1. mkdir src
2. cat &gt; src/foo.c &lt;&lt;- EOF
   int
   main(int argc, char **argv)
   {
        return 0;
   }
EOF
3. cd src
4. gcc -g3 -o foo ../src//foo.c
5. /usr/lib/rpm/debugedit -b `pwd` -d / foo
  
Actual results:
/usr/lib/rpm/debugedit: canonicalization unexpectedly shrank by one character

Expected results:
Either not fail, or indicate that a directory name in the table ended with a
&apos;/&apos;, which it probably shouldn&apos;t have contained.

Additional info:
I actually ran into this with openafs 1.4.4, but I&apos;m including a smaller
reproducer which I think triggers the same bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1437304</commentid>
    <comment_count>1</comment_count>
    <who name="Panu Matilainen">pmatilai</who>
    <bug_when>2007-09-27 04:49:46 -0400</bug_when>
    <thetext>Hmm, it&apos;s not the trailing &apos;/&apos; that troubles debugedit per se but the fact that
the canonicalized path is exactly one character shorter than the original which
is a case that it can&apos;t (and can&apos;t be made to AFAICT) handle. Roland, care to
comment?

The error message could certainly be clearer on what sort of problem to look for
(basically single extra &apos;/&apos; somewhere in the path).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1438600</commentid>
    <comment_count>2</comment_count>
    <who name="Roland McGrath">roland</who>
    <bug_when>2007-09-27 19:26:18 -0400</bug_when>
    <thetext>Indeed, the format makes it impossible to do rewriting in place unless the table
shrinks by at least 2 or not at all (it&apos;s beyond the scope of debugedit to
resize things).  For cases in the directory table you could do an ugly kludge by
repeating the leading / or adding a trailing one to preserve the size.  But
there is no trick like that to do in the file table, where any leading or
trailing slash would change the final file name so it doesn&apos;t work (not just is
wrongly ugly).  The !=-1 size restriction is for the whole table cumulatively,
so with extra slashes removed by canonicalization, it is only a problem when
there is only one such file name.  It could do a kludge of adding a trailing
slash to some dir table entry when this arises, which would work and only uglify
some of the names to /foo//bar.  Still, I suspect packagers will be OK with it
being an error they have to fix or work around, if they can tell what to do.

The error message you get now is certainly pretty arcane.  The other error of
the same ilk has a better message.  

Looking at canonicalize_path, I think it is true that a doubled / is the only
way it could shrink by exactly one.  But I could use a second set of eyes to
verify there really is no obscure innocent case that could do that.  If that&apos;s
true, then we can simply change the error message to identify this problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1502986</commentid>
    <comment_count>3</comment_count>
    <who name="Jan Iven">jan.iven</who>
    <bug_when>2007-11-14 05:53:44 -0500</bug_when>
    <thetext>FYI, the instance that triggers this bug has apparently been &quot;fixed&quot; in the
Fedora-8-specific OpenAFS SRPM at
http://openafs.org/dl/openafs/1.4.5/fedora-8/SRPMS/openafs-1.4.5-fc8.2.src.rpm
Nonetheless, this could of course affect other packages as well..
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1530991</commentid>
    <comment_count>4</comment_count>
    <who name="Jason Tibbitts">tibbs</who>
    <bug_when>2007-12-06 18:43:46 -0500</bug_when>
    <thetext>Just a note that a koji build for syslog-ng failed with the same error:
http://koji.fedoraproject.org/koji/taskinfo?taskID=265344

I&apos;m not sure what would have changed to cause this package to stop building in
this manner.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1531070</commentid>
    <comment_count>5</comment_count>
    <who name="Roland McGrath">roland</who>
    <bug_when>2007-12-06 20:21:12 -0500</bug_when>
    <thetext>This line from the log suggests the problem:

/home/bazsi/zwa/git//syslog-ng/syslog-ng--mainline--2.0/src/cfg-lex.l:247:
warning: ignoring return value of &apos;fwrite&apos;, declared with attribute
warn_unused_result

The common reason for this error is // instead of / inside a file name.
This arises from using a trailing / on a directory name in a macro or makefile
variable usually.  

It may be a further problem that this absolute directory name appears in the
build.  Presumably it is in # line file name strings in cfg-lex.c, which is
generated from cfg-lex.l.  If this file is included in the upstream tarball like
this, then so it is and that is fine from the rpm-reproducible-builds
perspective.  Even so, upstream should be taught how to generate genericized
file names for their dist tarballs, so it winds up just # line &quot;cfg-lex.l&quot; or
suchlike.  If the rpm build is running lex/flex to generate cfg-lex.c itself,
then it&apos;s just our spec file that has to be fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1558419</commentid>
    <comment_count>6</comment_count>
    <who name="Douglas E. Warner">silfreed</who>
    <bug_when>2008-01-08 11:51:04 -0500</bug_when>
    <thetext>I&apos;ve created a patch for syslog-ng that fixes the double slash in the 
cfg-lex.c and cfg-grammar.c files but I still get the error with debuginfo and 
the warning referenced above as well.

I&apos;m sorry I&apos;m not much more help with this; I still don&apos;t fully understand 
what the error is here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1724054</commentid>
    <comment_count>7</comment_count>
    <who name="Bug Zapper">triage</who>
    <bug_when>2008-05-13 23:16:33 -0400</bug_when>
    <thetext>Changing version to &apos;9&apos; as part of upcoming Fedora 9 GA.
More information and reason for this action is here:
http://fedoraproject.org/wiki/BugZappers/HouseKeeping</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1745918</commentid>
    <comment_count>8</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2008-05-27 13:40:58 -0400</bug_when>
    <thetext>I&apos;m seeing the same problem, but don&apos;t see any &apos;//&apos; occurrences.  See
http://koji.fedoraproject.org/koji/getfile?taskID=630760&amp;name=build.log

If anyone has any suggestions as to how to fix, I would appreciate it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1746301</commentid>
    <comment_count>9</comment_count>
    <who name="Roland McGrath">roland</who>
    <bug_when>2008-05-27 17:30:17 -0400</bug_when>
    <thetext>Since that was a scratch build, I do not have the sources from pkgs cvs to
reproduce your build problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1746314</commentid>
    <comment_count>10</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2008-05-27 17:36:54 -0400</bug_when>
    <thetext>http://www.cora.nwra.com/~orion/fedora/gridengine-6.2-0.beta.1.fc10.src.rpm</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1746408</commentid>
    <comment_count>11</comment_count>
    <who name="Roland McGrath">roland</who>
    <bug_when>2008-05-27 18:45:27 -0400</bug_when>
    <thetext>source/clients/qmon/qmon_cplx.c: 61: #include &quot;spool/flatfile//sge_flatfile_obj.h&quot;
source/libs/spool/flatfile/test_sge_spooling_flatfile.c: 47: #include
&quot;spool/flatfile//sge_flatfile.h&quot;
source/libs/spool/flatfile/test_sge_spooling_flatfile.c: 50: #include
&quot;spool/flatfile//sge_flatfile_obj.h&quot;
</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1747273</commentid>
    <comment_count>12</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2008-05-28 11:10:22 -0400</bug_when>
    <thetext>Thanks, didn&apos;t think to check for includes inside the source files.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2212444</commentid>
    <comment_count>13</comment_count>
    <who name="Bug Zapper">triage</who>
    <bug_when>2009-06-09 18:52:05 -0400</bug_when>
    <thetext>
This message is a reminder that Fedora 9 is nearing its end of life.
Approximately 30 (thirty) days from now Fedora will stop maintaining
and issuing updates for Fedora 9.  It is Fedora&apos;s policy to close all
bug reports from releases that are no longer maintained.  At that time
this bug will be closed as WONTFIX if it remains open with a Fedora 
&apos;version&apos; of &apos;9&apos;.

Package Maintainer: If you wish for this bug to remain open because you
plan to fix it in a currently maintained version, simply change the &apos;version&apos; 
to a later Fedora version prior to Fedora 9&apos;s end of life.

Bug Reporter: Thank you for reporting this issue and we are sorry that 
we may not be able to fix it before Fedora 9 is end of life.  If you 
would still like to see this bug fixed and are able to reproduce it 
against a later version of Fedora please change the &apos;version&apos; of this 
bug to the applicable version.  If you are unable to change the version, 
please add a comment here and someone will do it for you.

Although we aim to fix as many bugs as possible during every release&apos;s 
lifetime, sometimes those efforts are overtaken by events.  Often a 
more recent Fedora release includes newer upstream software that fixes 
bugs or makes them obsolete.

The process we are following is described here: 
http://fedoraproject.org/wiki/BugZappers/HouseKeeping</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2269118</commentid>
    <comment_count>14</comment_count>
    <who name="Bug Zapper">triage</who>
    <bug_when>2009-07-14 14:16:29 -0400</bug_when>
    <thetext>
Fedora 9 changed to end-of-life (EOL) status on 2009-07-10. Fedora 9 is 
no longer maintained, which means that it will not receive any further 
security or bug fix updates. As a result we are closing this bug.

If you can reproduce this bug against a currently maintained version of 
Fedora please feel free to reopen this bug against that version.

Thank you for reporting this bug and we are sorry it could not be fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5340260</commentid>
    <comment_count>15</comment_count>
    <who name="Martin Stransky">stransky</who>
    <bug_when>2013-01-08 13:34:38 -0500</bug_when>
    <thetext>It affects Firefox 18 build in latest Fedoras.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5340807</commentid>
    <comment_count>16</comment_count>
    <who name="Martin Stransky">stransky</who>
    <bug_when>2013-01-08 16:35:11 -0500</bug_when>
    <thetext>Unfortunately this bug blocks Firefox security updates in all Fedoras.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5342588</commentid>
    <comment_count>17</comment_count>
    <who name="Panu Matilainen">pmatilai</who>
    <bug_when>2013-01-09 03:19:41 -0500</bug_when>
    <thetext>Well its a stray &quot;/&quot; added somewhere between Firefox 17 and 18, either in the sources or the build process. Find and fix that and it&apos;ll build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5342608</commentid>
    <comment_count>18</comment_count>
    <who name="Martin Stransky">stransky</who>
    <bug_when>2013-01-09 03:24:59 -0500</bug_when>
    <thetext>Yes, I understand the mechanism. But the sources and changes are massive, there are new libraries imported and so. 

The affected chars &quot;//&quot; are not present in build logs, it&apos;s somewhere in include paths, which is extremely difficult to find and fix (the Makefiles are generated by scripts at build start so I can&apos;t patch them directly).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5342617</commentid>
    <comment_count>19</comment_count>
    <who name="Martin Stransky">stransky</who>
    <bug_when>2013-01-09 03:29:09 -0500</bug_when>
    <thetext>As a workaround I&apos;m building Firefox for this update without debuginfo packages due to this bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5342628</commentid>
    <comment_count>20</comment_count>
    <who name="Jakub Jelinek">jakub</who>
    <bug_when>2013-01-09 03:32:46 -0500</bug_when>
    <thetext>Just run readelf -wl on the binaries and libraries before debugedit is run on them, and look for //.  That will show you in which binary or shared library it is, and on which include file (or main source file) it was.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5342635</commentid>
    <comment_count>21</comment_count>
    <who name="Martin Stransky">stransky</who>
    <bug_when>2013-01-09 03:37:37 -0500</bug_when>
    <thetext>Jakub, thanks, I have such list...but it&apos;s a big list and as I told here the Makefiles are generated by python scripts and the include path is composed from many components, like &quot;parent_dir\\..\some_dir&quot; and so.

I wonder is it really so difficult to fix this bug in rpm?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5343005</commentid>
    <comment_count>22</comment_count>
    <who name="Panu Matilainen">pmatilai</who>
    <bug_when>2013-01-09 05:32:44 -0500</bug_when>
    <thetext>See comment #2 for explanation of the underlying issues.

Suse has carried a patch that&apos;s supposed to address the issue but it causes &quot;badly formed extended line op encountered!&quot; warnings from readelf on the resulting .debug files so I&apos;m not very convinced.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5343149</commentid>
    <comment_count>23</comment_count>
    <who name="Jakub Jelinek">jakub</who>
    <bug_when>2013-01-09 05:43:48 -0500</bug_when>
    <thetext>If there are readers that assume that right after the directory and filename table is the line program, then some cases are impossible to handle on the debugedit side, unless we turn it into a full blown dwarf rewriter (could reuse parts of dwz code for it which is also a dwarf rewriter, but it would be a lot of work).  If we stay with the current way of doing things, then perhaps debugedit.c could handle some cases (where there are any / characters in the directory table other than at the beginning of the paths (POSIX makes //path different from /path, while /path/something and /path//something should be equivalent), by doubling one of the non-initial slashes somewhere, thus growing the directory table again by 1 character (basically find the right spot after dir, then memmove everything after it by one character later and insert &apos;/&apos;).

debugedit.c inserts apparently not just one padding string, but up to two:

      if (shrank &gt; 0)
        {
          if (--shrank == 0)
            error (EXIT_FAILURE, 0,
                   &quot;canonicalization unexpectedly shrank by one character&quot;);
          else
            {
              memset (ptr, &apos;X&apos;, shrank);
              ptr += shrank;
              *ptr++ = &apos;\0&apos;;
            }
        }

      if (abs_dir_cnt + abs_file_cnt != 0)
        {
          size_t len = (abs_dir_cnt + abs_file_cnt) * (base_len - dest_len);

          if (len == 1)
            error (EXIT_FAILURE, 0, &quot;-b arg has to be either the same length as -d arg, or more than 1 char longer&quot;);
          memset (ptr, &apos;X&apos;, len - 1);
          ptr += len - 1;
          *ptr++ = &apos;\0&apos;;
        }

The uses of abs_dir_cnt in there really confuses me, I&apos;d have expected that the directory shrinking was already accounted for in the shrank length, but I admit I haven&apos;t tried to compile this now and debug on testcases.

Anyway, supposedly the two could have been also merged into one padding string if both are needed (two padding string need to be at least 4 bytes long, while one could be just 2 bytes long or longer.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5352288</commentid>
    <comment_count>24</comment_count>
    <who name="Martin Stransky">stransky</who>
    <bug_when>2013-01-10 08:55:16 -0500</bug_when>
    <thetext>I managed to fix the Firefox Makefile generator so it&apos;s no longer critical...but would be great to solve it somehow.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5537397</commentid>
    <comment_count>25</comment_count>
    <who name="">su_js1</who>
    <bug_when>2013-02-23 22:54:32 -0500</bug_when>
    <thetext>FWIW, I had the same problem building Oracle enabled Zabbix.  My problem turned out to be the ORACLE_HOME and ORACLE_BASE environment variables.  

This causes the error:

ORACLE_BASE=/u01/app/oracle/product/11.2.0.3/client/
ORACLE_HOME=/u01/app/oracle/product/11.2.0.3/client/

This does not:

ORACLE_BASE=/u01/app/oracle/product/11.2.0.3/client
ORACLE_HOME=/u01/app/oracle/product/11.2.0.3/client</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5544736</commentid>
    <comment_count>26</comment_count>
    <who name="Eric Smith">spacewar</who>
    <bug_when>2013-02-26 13:46:35 -0500</bug_when>
    <thetext>It would be really useful if debugedit actually output the path that it had trouble with, rather than leaving us guessing.  I&apos;m having this trouble with updating the Meshlab package to 1.3.2.  I might try to patch debugedit if I can&apos;t find the problem easily.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5553509</commentid>
    <comment_count>27</comment_count>
    <who name="Miro Hrončok">mhroncok</who>
    <bug_when>2013-02-27 03:37:40 -0500</bug_when>
    <thetext>(In reply to comment #26)
&gt; It would be really useful if debugedit actually output the path that it had
&gt; trouble with, rather than leaving us guessing.  I&apos;m having this trouble with
&gt; updating the Meshlab package to 1.3.2.  I might try to patch debugedit if I
&gt; can&apos;t find the problem easily.

See comment #20
&gt; Just run readelf -wl on the binaries and libraries before debugedit is run
&gt; on them, and look for //.  That will show you in which binary or shared
&gt; library it is, and on which include file (or main source file) it was.

Might help.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5558756</commentid>
    <comment_count>28</comment_count>
    <who name="Miro Hrončok">mhroncok</who>
    <bug_when>2013-02-28 14:36:54 -0500</bug_when>
    <thetext>(In reply to comment #20)
&gt; Just run readelf -wl on the binaries and libraries before debugedit is run
&gt; on them, and look for //.  That will show you in which binary or shared
&gt; library it is, and on which include file (or main source file) it was.

Here&apos;s a very long build.log http://koji.fedoraproject.org/koji/taskinfo?taskID=5065189 (&gt;100 MB).

readelf -wl was run on the libraries and grep // gives me nothing usefull. Any hints?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>5798435</commentid>
    <comment_count>29</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2013-04-03 15:48:38 -0400</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 19 development cycle.
Changing version to &apos;19&apos;.

(As we did not run this process for some time, it could affect also pre-Fedora 19 development
cycle bugs. We are very sorry. It will help us with cleanup during Fedora 19 End Of Life. Thank you.)

More information and reason for this action is here:
https://fedoraproject.org/wiki/BugZappers/HouseKeeping/Fedora19</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7760813</commentid>
    <comment_count>30</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2014-12-12 20:23:48 -0500</bug_when>
    <thetext>Fwiw, I&apos;m seeing this recently on fedora 21 (but not fedora 20), trying to build a qtwebengine package, 

here&apos;s a link to 
$ readelf -wl /home/rdieter1/pkgs.fedoraproject.org/work/BUILDROOT/qt5-qtwebengine-5.4.0-1.fc21.x86_64/usr/lib64/libQt5WebEngineCore.so.5.4.0 
output:
https://rdieter.fedorapeople.org/rpms/qt5/qtwebengine-debuginfo.log.xz

One thing that jumps out are some errors from readelf:
readelf: Warning: badly formed extended line op encountered!
(repeated several times)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>7760818</commentid>
    <comment_count>31</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2014-12-12 20:35:25 -0500</bug_when>
    <thetext>And build log:
https://rdieter.fedorapeople.org/rpms/qt5/qtwebengine-build.log</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8790147</commentid>
    <comment_count>32</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2015-11-04 10:25:53 -0500</bug_when>
    <thetext>This message is a reminder that Fedora 21 is nearing its end of life.
Approximately 4 (four) weeks from now Fedora will stop maintaining
and issuing updates for Fedora 21. It is Fedora&apos;s policy to close all
bug reports from releases that are no longer maintained. At that time
this bug will be closed as EOL if it remains open with a Fedora  &apos;version&apos;
of &apos;21&apos;.

Package Maintainer: If you wish for this bug to remain open because you
plan to fix it in a currently maintained version, simply change the &apos;version&apos; 
to a later Fedora version.

Thank you for reporting this issue and we are sorry that we were not 
able to fix it before Fedora 21 is end of life. If you would still like 
to see this bug fixed and are able to reproduce it against a later version 
of Fedora, you are encouraged  change the &apos;version&apos; to a later Fedora 
version prior this bug is closed as described in the policy above.

Although we aim to fix as many bugs as possible during every release&apos;s 
lifetime, sometimes those efforts are overtaken by events. Often a 
more recent Fedora release includes newer upstream software that fixes 
bugs or makes them obsolete.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8875847</commentid>
    <comment_count>33</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2015-12-01 21:30:52 -0500</bug_when>
    <thetext>Fedora 21 changed to end-of-life (EOL) status on 2015-12-01. Fedora 21 is
no longer maintained, which means that it will not receive any further
security or bug fix updates. As a result we are closing this bug.

If you can reproduce this bug against a currently maintained version of
Fedora please feel free to reopen this bug against that version. If you
are unable to reopen this bug, please file a new report against the
current release. If you experience problems, please add a comment to this
bug.

Thank you for reporting this bug and we are sorry it could not be fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8913690</commentid>
    <comment_count>34</comment_count>
    <who name="Sergio Monteiro Basto">sergio</who>
    <bug_when>2015-12-12 19:19:13 -0500</bug_when>
    <thetext>On F23

/usr/lib/rpm/debugedit -b /builddir/build/BUILD -d /usr/src/debug -i -l /builddir/build/BUILD/openssl-1.0.2e/debugsources.list /builddir/build/BUILDROOT/openssl-1.0.2e-6.fc23.x86_64/usr/lib64/libcrypto.so.1.0.2e
/usr/lib/rpm/debugedit: canonicalization unexpectedly shrank by one character

readelf -wl /builddir/build/BUILDROOT/openssl-1.0.2e-6.fc23.x86_64/usr/lib64/libcrypto.so.1.0.2e &gt; hhh
readelf: Warning: Badly formed extended line op encountered!
readelf: Warning: Badly formed extended line op encountered!
readelf: Warning: Badly formed extended line op encountered!
readelf: Warning: Badly formed extended line op encountered!
readelf: Warning: The line info appears to be corrupt - the section is too small</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>8913779</commentid>
    <comment_count>35</comment_count>
    <who name="Sergio Monteiro Basto">sergio</who>
    <bug_when>2015-12-12 22:47:19 -0500</bug_when>
    <thetext>(In reply to Nalin Dahyabhai from comment #0)
&gt; Description of problem:
&gt; When a the source directory for a file ends with a &apos;/&apos;, debugedit can spit
&gt; out a
&gt; &quot;canonicalization unexpectedly shrank by one character&quot; error and fail. 
&gt; That&apos;s
&gt; not really enough for most people to figure out what&apos;s gone wrong or how to
&gt; fix it.
&gt; 
&gt; Version-Release number of selected component (if applicable):
&gt; rpm-build-4.4.2.2-0.5.rc2
&gt; 
&gt; How reproducible:
&gt; Always
&gt; 
&gt; Steps to Reproduce:
&gt; 1. mkdir src
&gt; 2. cat &gt; src/foo.c &lt;&lt;- EOF
&gt;    int
&gt;    main(int argc, char **argv)
&gt;    {
&gt;         return 0;
&gt;    }
&gt; EOF
&gt; 3. cd src
&gt; 4. gcc -g3 -o foo ../src//foo.c
&gt; 5. /usr/lib/rpm/debugedit -b `pwd` -d / foo
&gt;   
&gt; Actual results:
&gt; /usr/lib/rpm/debugedit: canonicalization unexpectedly shrank by one character
&gt; 
&gt; Expected results:
&gt; Either not fail, or indicate that a directory name in the table ended with a
&gt; &apos;/&apos;, which it probably shouldn&apos;t have contained.
&gt; 
&gt; Additional info:
&gt; I actually ran into this with openafs 1.4.4, but I&apos;m including a smaller
&gt; reproducer which I think triggers the same bug.

yeah ! still happens , I test it on Fedora 23 updated , I got this problem because I used  --with-fipsdir=$PWD/fips/usr/  instead 
--with-fipsdir=$PWD/fips/usr err</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9161430</commentid>
    <comment_count>36</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-03-18 21:07:16 -0400</bug_when>
    <thetext>It&apos;s incredible that this showstopper is still open after more than 8 years! This completely breaks all builds of QtWebEngine except those that completely disable debugging information (which upstream&apos;s broken build system does by default, which is why we had &quot;working&quot; QtWebEngine builds at all, those all had no debugging information whatsoever for &gt;99% of the code). If I fix that, the issue from comment #30 is still there. I do not think Chromium or Qt upstream will fix their code, ever. So it is up to debugedit to deal with it. Why the heck do you have to canonicalize the paths at all? Just keep the double slashes as is!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9170542</commentid>
    <comment_count>37</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-03-22 16:28:11 -0400</bug_when>
    <thetext>For QtWebEngine, this works around it:
# remove ./ from #line commands in ANGLE to avoid debugedit failure
sed -i -e &apos;s!\./!!g&apos; \
  src/3rdparty/chromium/third_party/angle/src/compiler/preprocessor/Tokenizer.cpp \
  src/3rdparty/chromium/third_party/angle/src/compiler/translator/glslang_lex.cpp

It looks like debugedit is trying to canonicalize &quot;.&quot; to &quot;&quot;. In that case, it should be possible to do better, shouldn&apos;t it?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9170944</commentid>
    <comment_count>38</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-03-22 20:01:00 -0400</bug_when>
    <thetext>Sorry, I spoke too soon. I still have the debugedit error in the x86_64 build, so that wasn&apos;t it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9175318</commentid>
    <comment_count>39</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-03-24 01:18:20 -0400</bug_when>
    <thetext>So, I finally found the real offender. I had missed it because the double slash is immediately before the file name, and so showed up in the directory table as a stray trailing slash, not as a double slash. qtwebengine-opensource-src-5.6.0/src/3rdparty/chromium/content/renderer/gpu/compositor_forwarding_message_filter.h contains #include &quot;content/renderer/gpu//compositor_forwarding_message_filter.h&quot;. Fix:
# fix // in #include in content/renderer/gpu to avoid debugedit failure
sed -i -e &apos;s!gpu//!gpu/!g&apos; \
  src/3rdparty/chromium/content/renderer/gpu/compositor_forwarding_message_filter.cc
So, if you get this error, in the readelf output, check not only for double slashes, but also for trailing slashes in the directory table.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9919460</commentid>
    <comment_count>40</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2016-11-24 05:22:17 -0500</bug_when>
    <thetext>This message is a reminder that Fedora 23 is nearing its end of life.
Approximately 4 (four) weeks from now Fedora will stop maintaining
and issuing updates for Fedora 23. It is Fedora&apos;s policy to close all
bug reports from releases that are no longer maintained. At that time
this bug will be closed as EOL if it remains open with a Fedora  &apos;version&apos;
of &apos;23&apos;.

Package Maintainer: If you wish for this bug to remain open because you
plan to fix it in a currently maintained version, simply change the &apos;version&apos; 
to a later Fedora version.

Thank you for reporting this issue and we are sorry that we were not 
able to fix it before Fedora 23 is end of life. If you would still like 
to see this bug fixed and are able to reproduce it against a later version 
of Fedora, you are encouraged  change the &apos;version&apos; to a later Fedora 
version prior this bug is closed as described in the policy above.

Although we aim to fix as many bugs as possible during every release&apos;s 
lifetime, sometimes those efforts are overtaken by events. Often a 
more recent Fedora release includes newer upstream software that fixes 
bugs or makes them obsolete.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9925977</commentid>
    <comment_count>41</comment_count>
    <who name="Thierry Vignaud">tvignaud</who>
    <bug_when>2016-11-24 12:47:42 -0500</bug_when>
    <thetext>This is still valid IMHO</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9925981</commentid>
    <comment_count>42</comment_count>
    <who name="Igor Gnatenko">ignatenko</who>
    <bug_when>2016-11-24 12:51:49 -0500</bug_when>
    <thetext>yep, can confirm.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9975256</commentid>
    <comment_count>43</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2016-12-11 21:40:55 -0500</bug_when>
    <thetext>hitting this again with plplot.  readelf trick is not helping me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9992329</commentid>
    <comment_count>44</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2016-12-16 00:50:05 -0500</bug_when>
    <thetext>readelf is showing /usr/share/sip/PyQt5//QtCore is the culprit, but I&apos;ve not been able to figure out where that is coming from.  Parsing the cpp output with -E doesn&apos;t reveal it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10190349</commentid>
    <comment_count>45</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2017-02-28 04:28:07 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 26 development cycle.
Changing version to &apos;26&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10215517</commentid>
    <comment_count>46</comment_count>
    <who name="Panu Matilainen">pmatilai</who>
    <bug_when>2017-03-07 03:12:06 -0500</bug_when>
    <thetext>So this should be now fixed upstream, thanks to efforts of Mark Wielaard:
https://github.com/rpm-software-management/rpm/commit/88989572fff1f31e0c4f972a6895585e4742ef4b

And there was much rejoicing...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10517561</commentid>
    <comment_count>47</comment_count>
    <who name="Devrim GÜNDÜZ">devrim</who>
    <bug_when>2017-06-19 05:29:57 -0400</bug_when>
    <thetext>Can this patch be incorporated into Fedora, please?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10517575</commentid>
    <comment_count>48</comment_count>
    <who name="Mark Wielaard">mjw</who>
    <bug_when>2017-06-19 05:34:10 -0400</bug_when>
    <thetext>(In reply to Devrim GÜNDÜZ from comment #47)
&gt; Can this patch be incorporated into Fedora, please?

It already is since 4.13.0.1-4 as Patch259: 0010-debugedit-Support-String-Line-table-rewriting-for-la.patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10532958</commentid>
    <comment_count>49</comment_count>
    <who name="Tom &quot;spot&quot; Callaway">tcallawa</who>
    <bug_when>2017-06-22 15:56:39 -0400</bug_when>
    <thetext>(In reply to Panu Matilainen from comment #46)
&gt; So this should be now fixed upstream, thanks to efforts of Mark Wielaard:
&gt; https://github.com/rpm-software-management/rpm/commit/
&gt; 88989572fff1f31e0c4f972a6895585e4742ef4b
&gt; 
&gt; And there was much rejoicing...

FWIW, I still hit this issue with rpm-4.13.0.1-4.fc26.x86_64</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10532975</commentid>
    <comment_count>50</comment_count>
    <who name="Tom &quot;spot&quot; Callaway">tcallawa</who>
    <bug_when>2017-06-22 16:04:09 -0400</bug_when>
    <thetext>(In reply to Tom &quot;spot&quot; Callaway from comment #49)
&gt; (In reply to Panu Matilainen from comment #46)
&gt; &gt; So this should be now fixed upstream, thanks to efforts of Mark Wielaard:
&gt; &gt; https://github.com/rpm-software-management/rpm/commit/
&gt; &gt; 88989572fff1f31e0c4f972a6895585e4742ef4b
&gt; &gt; 
&gt; &gt; And there was much rejoicing...
&gt; 
&gt; FWIW, I still hit this issue with rpm-4.13.0.1-4.fc26.x86_64

I should use more words here, sorry. :)

plplot was setting a CMAKE variable to /usr/share/sip/PyQt5/ then appending paths to it like this: ${PYQT_DIR}/foo which resulted in paths like /usr/share/sip/PyQt5//foo making its way into at least one shared object file, and the debuginfo generation failing with the &quot;canonicalization unexpectedly shrank by one character&quot; error. 

It is easy enough to work around, I just remove the trailing path from the variable assignment in the CMAKE goop, but it does mean that this bug is still lurking around in rpm. If you want to reproduce, I can provide a SRPM without the patch that will show the failure.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10532985</commentid>
    <comment_count>51</comment_count>
    <who name="Mark Wielaard">mjw</who>
    <bug_when>2017-06-22 16:09:16 -0400</bug_when>
    <thetext>(In reply to Tom &quot;spot&quot; Callaway from comment #49)
&gt; FWIW, I still hit this issue with rpm-4.13.0.1-4.fc26.x86_64

That makes sense. The fix is only in rawhide/fc27.
Since it is a fairly big rewrite of debugedit it is unlikely to be backported to fc26.

(In reply to Tom &quot;spot&quot; Callaway from comment #50)
&gt; plplot was setting a CMAKE variable to /usr/share/sip/PyQt5/ then appending
&gt; paths to it like this: ${PYQT_DIR}/foo which resulted in paths like
&gt; /usr/share/sip/PyQt5//foo making its way into at least one shared object
&gt; file, and the debuginfo generation failing with the &quot;canonicalization
&gt; unexpectedly shrank by one character&quot; error. 
&gt; 
&gt; It is easy enough to work around, I just remove the trailing path from the
&gt; variable assignment in the CMAKE goop, but it does mean that this bug is
&gt; still lurking around in rpm. If you want to reproduce, I can provide a SRPM
&gt; without the patch that will show the failure.

That would be nice to see if it is really fixed in fc27/rawhide.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10536324</commentid>
    <comment_count>52</comment_count>
    <who name="Tom &quot;spot&quot; Callaway">tcallawa</who>
    <bug_when>2017-06-23 14:18:20 -0400</bug_when>
    <thetext>(In reply to Mark Wielaard from comment #51)

&gt; That would be nice to see if it is really fixed in fc27/rawhide.

I&apos;ve uploaded the latest plplot package, with the patch for fixing the doubleslash in the CMAKE var included, but _not_ applied. You should be able to rebuild this and reproduce the debugedit bug on Fedora 26, and it should not fail on Fedora 27+ (if your patch works right, and I&apos;m assuming it does). :)

https://spot.fedorapeople.org/plplot-5.12.0-1.broken.fc27.src.rpm</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10536524</commentid>
    <comment_count>53</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2017-06-23 15:58:49 -0400</bug_when>
    <thetext>At least for QtWebEngine, it seems to work: I had to apply this sed hack:
http://pkgs.fedoraproject.org/cgit/rpms/qt5-qtwebengine.git/commit/?id=ddcf6aaa1ac7b4c81ff128f2e7d65218011028e5
on F26, but not on Rawhide.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10537312</commentid>
    <comment_count>54</comment_count>
    <who name="Mark Wielaard">mjw</who>
    <bug_when>2017-06-24 08:04:47 -0400</bug_when>
    <thetext>(In reply to Tom &quot;spot&quot; Callaway from comment #52)
&gt; I&apos;ve uploaded the latest plplot package, with the patch for fixing the
&gt; doubleslash in the CMAKE var included, but _not_ applied. You should be able
&gt; to rebuild this and reproduce the debugedit bug on Fedora 26, and it should
&gt; not fail on Fedora 27+ (if your patch works right, and I&apos;m assuming it
&gt; does). :)
&gt; 
&gt; https://spot.fedorapeople.org/plplot-5.12.0-1.broken.fc27.src.rpm

Thanks. Indeed it would fail with: extracting debug info from /builddir/build/BUILDROOT/plplot-5.12.0-1.broken.fc26.x86_64/usr/lib64/python2.7/site-packages/plplot_pyqt5.so
/usr/lib/rpm/debugedit: canonicalization unexpectedly shrank by one character

But seems to build fine as is with the lastest rpmbuild from rawhide (4.13.0.1-24.fc27)

Sorry this improvement will most likely not go into f26. But it is an almost complete rewrite of the way debuginfo strings collected and replaced. The old version basically just did a in-string replacement (so could only replace paths which were &lt;= than the original and needed strange tricks with slashes). The new version actually creates a whole new debug string table and rewrites all indexes found in the line table and debug_info sections. It seems a bit risky at this point to add that to f26.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10537329</commentid>
    <comment_count>55</comment_count>
    <who name="Mark Wielaard">mjw</who>
    <bug_when>2017-06-24 08:16:52 -0400</bug_when>
    <thetext>(In reply to Mark Wielaard from comment #54)
&gt; Thanks. Indeed it would fail with: extracting debug info from
&gt; /builddir/build/BUILDROOT/plplot-5.12.0-1.broken.fc26.x86_64/usr/lib64/
&gt; python2.7/site-packages/plplot_pyqt5.so
&gt; /usr/lib/rpm/debugedit: canonicalization unexpectedly shrank by one character
&gt; 
&gt; But seems to build fine as is with the lastest rpmbuild from rawhide
&gt; (4.13.0.1-24.fc27)

BTW. I do think the patch is actually correct. The new line table does indeed contain &quot;/usr/share/sip/PyQt5//QtCore&quot; with a double slash. This is harmless of course and now doesn&apos;t break debugedit anymore. But it is more correct to remove the extra slash.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>