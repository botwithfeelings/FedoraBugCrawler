<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1467599</bug_id>
          
          <creation_ts>2017-07-04 06:17:00 -0400</creation_ts>
          <short_desc>Unable to start domain: the CPU is incompatible with host CPU: Host CPU does not provide required features: svm</short_desc>
          <delta_ts>2017-07-13 19:37:25 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>qemu</component>
          <version>26</version>
          <rep_platform>Unspecified</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          <see_also>https://bugzilla.redhat.com/show_bug.cgi?id=1464832</see_also>
    
    
    
    <see_also>https://bugzilla.redhat.com/show_bug.cgi?id=1468043</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>AcceptedBlocker</status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1349188</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Kamil Páral">kparal</reporter>
          <assigned_to name="Fedora Virtualization Maintainers">virt-maint</assigned_to>
          <cc>agedosier</cc>
    
    
    <cc>amitshah</cc>
    
    
    <cc>awilliam</cc>
    
    
    <cc>berrange</cc>
    
    
    <cc>brendan.shephard</cc>
    
    
    <cc>cfergeau</cc>
    
    
    <cc>clalancette</cc>
    
    
    <cc>dgilmore</cc>
    
    
    <cc>dwmw2</cc>
    
    
    <cc>ehabkost</cc>
    
    
    <cc>feborges</cc>
    
    
    <cc>fidencio</cc>
    
    
    <cc>gnome-sig</cc>
    
    
    <cc>itamar</cc>
    
    
    <cc>laine</cc>
    
    
    <cc>libvirt-maint</cc>
    
    
    <cc>marcandre.lureau</cc>
    
    
    <cc>mattdm</cc>
    
    
    <cc>pbonzini</cc>
    
    
    <cc>rjones</cc>
    
    
    <cc>robatino</cc>
    
    
    <cc>veillard</cc>
    
    
    <cc>virt-maint</cc>
    
    
    <cc>zeeshanak</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>qemu-2.9.0-1.fc26.1</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-07-06 18:52:41</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10564108</commentid>
    <comment_count>0</comment_count>
    <who name="Kamil Páral">kparal</who>
    <bug_when>2017-07-04 06:17:27 -0400</bug_when>
    <thetext>Description of problem:
I have installed a fresh installation of F26 Workstation and tried to run F25 Workstation Live in gnome-boxes. The iso is downloaded, but the VM fails to start. Boxes say &quot;Failed to start Fedora 25 Workstation&quot;. In system journal, I see this:

Jul 04 12:08:05 localhost.localdomain gnome-boxes[5347]: machine.vala:611: Failed to start Fedora 25 Workstation: Unable to start domain: the CPU is incompatible with host CPU: Host CPU does not provide required features: svm

That error seems to be mentioned in other places as well, e.g. bug 1386223 or https://github.com/vagrant-libvirt/vagrant-libvirt/issues/667 .

My CPU is:
$ lscpu
Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                4
On-line CPU(s) list:   0-3
Thread(s) per core:    2
Core(s) per socket:    2
Socket(s):             1
NUMA node(s):          1
Vendor ID:             AuthenticAMD
CPU family:            21
Model:                 56
Model name:            AMD A10-7870K Radeon R7, 12 Compute Cores 4C+8G
Stepping:              1
CPU MHz:               1700.000
CPU max MHz:           3900.0000
CPU min MHz:           1700.0000
BogoMIPS:              7780.92
Virtualization:        AMD-V
L1d cache:             16K
L1i cache:             96K
L2 cache:              2048K
NUMA node0 CPU(s):     0-3
Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb bpext ptsc cpb hw_pstate proc_feedback vmmcall fsgsbase bmi1 xsaveopt arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold overflow_recov



Version-Release number of selected component (if applicable):
gnome-boxes-3.24.0-3.fc26.x86_64
libvirt-daemon-3.2.1-3.fc26.x86_64

How reproducible:
always (on this machine)

Steps to Reproduce:
1. start boxes and create a new VM with URL http://download.fedoraproject.org/pub/fedora/linux/releases/25/Workstation/x86_64/iso/Fedora-Workstation-Live-x86_64-25-1.3.iso
2. see the image downloaded
3. see the VM fails to start, even if you attempt repeatedly, with message &quot;failed to start ...&quot;

Additional info:
Might be only related to AMD CPUs (even though the reports over the internet also mention this happening in Intel CPUs), will test.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564184</commentid>
    <comment_count>1</comment_count>
    <who name="Kamil Páral">kparal</who>
    <bug_when>2017-07-04 06:50:10 -0400</bug_when>
    <thetext>The problem doesn&apos;t occur on my Intel laptop:

$ lscpu
Architecture:        x86_64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  2
Core(s) per socket:  2
Socket(s):           1
NUMA node(s):        1
Vendor ID:           GenuineIntel
CPU family:          6
Model:               61
Model name:          Intel(R) Core(TM) i7-5600U CPU @ 2.60GHz
Stepping:            4
CPU MHz:             1700.219
CPU max MHz:         3200.0000
CPU min MHz:         500.0000
BogoMIPS:            5188.14
Virtualization:      VT-x
L1d cache:           32K
L1i cache:           32K
L2 cache:            256K
L3 cache:            4096K
NUMA node0 CPU(s):   0-3
Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch epb intel_pt tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm rdseed adx smap xsaveopt dtherm ida arat pln pts


On yet another Intel CPU box, the problem also doesn&apos;t happen:

$ lscpu
Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                4
On-line CPU(s) list:   0-3
Thread(s) per core:    1
Core(s) per socket:    4
Socket(s):             1
NUMA node(s):          1
Vendor ID:             GenuineIntel
CPU family:            6
Model:                 58
Model name:            Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz
Stepping:              9
CPU MHz:               1600.000
CPU max MHz:           3600.0000
CPU min MHz:           1600.0000
BogoMIPS:              6400.48
Virtualization:        VT-x
L1d cache:             32K
L1i cache:             32K
L2 cache:              256K
L3 cache:              6144K
NUMA node0 CPU(s):     0-3
Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt dtherm ida arat pln pts


But on another AMD box, I can again reproduce the failure:

$ lscpu
Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                4
On-line CPU(s) list:   0-3
Thread(s) per core:    2
Core(s) per socket:    2
Socket(s):             1
NUMA node(s):          1
Vendor ID:             AuthenticAMD
CPU family:            21
Model:                 1
Model name:            AMD FX(tm)-4100 Quad-Core Processor
Stepping:              2
CPU MHz:               1400.000
CPU max MHz:           3600.0000
CPU min MHz:           1400.0000
BogoMIPS:              7802.31
Virtualization:        AMD-V
L1d cache:             16K
L1i cache:             64K
L2 cache:              2048K
L3 cache:              8192K
NUMA node0 CPU(s):     0-3
Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 cx16 sse4_1 sse4_2 popcnt aes xsave avx lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 nodeid_msr topoext perfctr_core perfctr_nb cpb hw_pstate vmmcall arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold


So it seems pretty certain this affects only AMD CPUs, probably all of them.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564197</commentid>
    <comment_count>2</comment_count>
    <who name="Kamil Páral">kparal</who>
    <bug_when>2017-07-04 06:59:37 -0400</bug_when>
    <thetext>Not only gnome-boxes don&apos;t work, virt-manager doesn&apos;t work either. So this is most probably a libvirt issue. When using virt-manager, I see the issue coming from libvirt:

Jul 04 12:56:00 localhost.localdomain libvirtd[862]: 2017-07-04 10:56:00.830+0000: 900: error : virCPUx86Compare:1707 : the CPU is incompatible with host CPU: Host CPU does not provide required features: fma, f16c, svm, tbm


In virt-manager, by default the CPU model is set to &quot;Opteron_G4&quot;. If I enable &quot;copy host CPU configuration&quot; instead (&quot;host-model&quot; model), the VM starts fine. It seems that libvirt started misidentifying AMD CPUs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564223</commentid>
    <comment_count>3</comment_count>
    <who name="Kamil Páral">kparal</who>
    <bug_when>2017-07-04 07:09:40 -0400</bug_when>
    <thetext>The AMD box from comment 0 is being detected as Opteron_G5, the AMD box from 1 as Opteron_G4.

Proposing as an F26 blocker due to:
&quot;All applications that can be launched using the standard graphical mechanism of a release-blocking desktop after a default installation of that desktop must start successfully and withstand a basic functionality test. &quot;
https://fedoraproject.org/wiki/Fedora_26_Final_Release_Criteria#Default_application_functionality
and
&quot;The release must be able host virtual guest instances of the same release. &quot;
https://fedoraproject.org/wiki/Fedora_26_Beta_Release_Criteria#Virtualization_requirements
which is violated for AMD CPUs.

(I also verified the same problem occurs with F26 Workstation Live guest).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564733</commentid>
    <comment_count>4</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-04 10:52:06 -0400</bug_when>
    <thetext>Something weird is going on, because as you can see, svm *is* listed for your host CPU.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564852</commentid>
    <comment_count>5</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-04 11:40:22 -0400</bug_when>
    <thetext>This seems bad, but it also seems super-weird to crop up at the last minute :(</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564946</commentid>
    <comment_count>6</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 13:30:09 -0400</bug_when>
    <thetext>dgilbert references bug #1464832 , though that involves the &apos;full&apos; check option which we don&apos;t think Boxes uses by default.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564996</commentid>
    <comment_count>7</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 14:47:01 -0400</bug_when>
    <thetext>I reproduced this (both Boxes and virt-manager variants) on my test box:

processor	: 0
vendor_id	: AuthenticAMD
cpu family	: 21
model		: 19
model name	: AMD A4-7300 APU with Radeon HD Graphics
stepping	: 1
microcode	: 0x6001119
cpu MHz		: 2200.000
cache size	: 1024 KB
physical id	: 0
siblings	: 2
core id		: 0
cpu cores	: 1
apicid		: 16
initial apicid	: 0
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 popcnt aes xsave avx f16c lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs xop skinit wdt lwp fma4 tce nodeid_msr tbm topoext perfctr_core perfctr_nb cpb hw_pstate vmmcall bmi1 arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold
bugs		: fxsave_leak sysret_ss_attrs null_seg
bogomips	: 7586.23
TLB size	: 1536 4K pages
clflush size	: 64
cache_alignment	: 64
address sizes	: 48 bits physical, 48 bits virtual
power management: ts ttp tm 100mhzsteps hwpstate cpb eff_freq_ro

With virt-manager it&apos;s quite easy to work around; you can just change the CPU model, as Kamil said. However, Boxes does not make this choice available, so there&apos;s no obvious workaround with Boxes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564997</commentid>
    <comment_count>8</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-04 14:51:06 -0400</bug_when>
    <thetext>Presumably you can change the XML by hand. That&apos;s not exactly _obvious_, though.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564998</commentid>
    <comment_count>9</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 14:53:20 -0400</bug_when>
    <thetext>Well, you could use virsh. But that&apos;s quite deep-down stuff to be exposing to people who just wanted to use Boxes.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10564999</commentid>
    <comment_count>10</comment_count>
    <who name="Eduardo Habkost">ehabkost</who>
    <bug_when>2017-07-04 14:58:06 -0400</bug_when>
    <thetext>(In reply to Matthew Miller from comment #4)
&gt; Something weird is going on, because as you can see, svm *is* listed for
&gt; your host CPU.

SVM might be available in the host, but that doesn&apos;t mean you can enable SVM in a virtual machine.  It would require nested SVM support, which might be unavailable for some reason.  If nested SVM is enabled, you should see &quot;kvm: Nested Virtualization enabled&quot; in dmesg.

In either case, if libvirt detects a CPU model as not usable, it shouldn&apos;t appear as the default in virt-manager (or be chosen as the default by Boxes).  Also, nested SVM is disabled by default in QEMU, so I don&apos;t know why libvirt is looking for it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565001</commentid>
    <comment_count>11</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-04 15:02:56 -0400</bug_when>
    <thetext>So, I&apos;m -1 to this as a blocker in weighing its impact vs. the impact of further slip. We&apos;re already at mid-July for what is nominally our early-May release. If this had happened to be discovered a few weeks ago with time for a fix without further delay, or if the problem were something even bigger, that math would come out differently, but here we are.

Let&apos;s document the workaround and attempt to get an update out as soon as possible.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565009</commentid>
    <comment_count>12</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 15:22:46 -0400</bug_when>
    <thetext>If I&apos;m reading the virt-manager code properly - it&apos;s kinda complicated - I *think* the default cpu model is &apos;host-model-only&apos;.

Indeed, I can reproduce the bug by simply running a virt-install command with &apos;--cpu host-model-only&apos;; it produces just the same error about svm.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565011</commentid>
    <comment_count>13</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 15:25:20 -0400</bug_when>
    <thetext>On the other hand, using &apos;--cpu host-model&apos; does *not* result in the same problem.

Also, it looks to me like Boxes is using a kind of home-grown imitation of host-model-only, because it has this snippet in vm-configurator.vala:

        var cpu = new DomainCpu ();
        // Ideally we should be using &apos;host-model&apos; but there is currently issues with that:
        // https://bugzilla.redhat.com/show_bug.cgi?id=870071
        cpu.set_mode (DomainCpuMode.CUSTOM);
        cpu.set_topology (topology);

        var model_caps = cpu_caps.get_model ();
        var model = new DomainCpuModel ();
        model.set_name (model_caps.get_name ());
        cpu.set_model (model);

        domain.set_cpu (cpu);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565042</commentid>
    <comment_count>14</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 15:51:15 -0400</bug_when>
    <thetext>Note, &quot;-cpu -host-model-only&quot; is implemented in virt-install (not libvirt), where it does this:

        elif val == self.SPECIAL_MODE_HOST_MODEL_ONLY:
            if self.conn.caps.host.cpu.model:
                self.clear()
                self.model = self.conn.caps.host.cpu.model
        else:
            raise RuntimeError(&quot;programming error: unknown &quot;
                &quot;special cpu mode &apos;%s&apos;&quot; % val)

so, looks very similar to what Boxes does.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565053</commentid>
    <comment_count>15</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 16:14:55 -0400</bug_when>
    <thetext>I just tested and *cannot* reproduce this on Fedora 25: the bug really is new in Fedora 26. Not sure what the difference is, yet. Investigating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565135</commentid>
    <comment_count>16</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-04 18:07:20 -0400</bug_when>
    <thetext>FWIW this seems like a likely dupe of bug #1465747. That is apparently fixed in Future Libvirt by a &quot;series of patches&quot; including (but not only?) this:


commit 5b4a6adb5ca24a6cb91cdc55c31506fb278d3a91
Refs: v3.2.0-197-g5b4a6adb5
Author:     Jiri Denemark &lt;jdenemar@redhat.com&gt;
AuthorDate: Tue Apr 11 20:46:05 2017 +0200
Commit:     Jiri Denemark &lt;jdenemar@redhat.com&gt;
CommitDate: Wed Apr 19 16:36:38 2017 +0200

    qemu: Use more data for comparing CPUs

    With QEMU older than 2.9.0 libvirt uses CPUID instruction to determine
    what CPU features are supported on the host. This was later used when
    checking compatibility of guest CPUs. Since QEMU 2.9.0 we ask QEMU for
    the host CPU data. But the two methods we use usually provide disjoint
    sets of CPU features because QEMU/KVM does not support all features
    provided by the host CPU and on the other hand it can enable some
    feature even if the host CPU does not support them.

    So if there is a domain which requires a CPU features disabled by
    QEMU/KVM, libvirt will refuse to start it with QEMU &gt; 2.9.0 as its guest
    CPU is incompatible with the host CPU data we got from QEMU. But such
    domain would happily start on older QEMU (of course, the features would
    be missing the guest CPU). To fix this regression, we need to combine
    both CPU feature sets when checking guest CPU compatibility.

-------

That patch doesn&apos;t apply cleanly to libvirt 3.2.1 in current Fedora (Adam tried it). Investigation is ongoing.

In any case, it appears the difference is &quot;newer QEMU&quot; -- F26 has 2.9.0, where F25 shipped with 2.7.0 (and has 2.7.1 as an update).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565138</commentid>
    <comment_count>17</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-04 18:11:15 -0400</bug_when>
    <thetext>I&apos;m still of the opinion that we should not block the release and provide a zero-day update, but I&apos;m very sympathetic to the argument that it&apos;s pretty terrible to  break currently-working -- and made by default -- configuration for every AMD system using virtualization.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565139</commentid>
    <comment_count>18</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 18:12:15 -0400</bug_when>
    <thetext>Yep, that&apos;s all in line with my assessment.

I believe the &apos;series of patches&apos; starts with bffc3b9fe501ff122ad81ddf42ecdb69f70ff70a and ends with 5b4a6adb5ca24a6cb91cdc55c31506fb278d3a91 , but it&apos;s not a straightforward backport at all. I&apos;m working on it, but I may get it wrong, since I&apos;m not super familiar with all this code.

If we accept this as a blocker, other *possible* &apos;fixes&apos; are &quot;drop Boxes from the live media&quot; (although that still leaves the &quot;must be able to host virt guests&quot; criterion...) and &quot;revert qemu to 2.7 until we can fix this&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565167</commentid>
    <comment_count>19</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 18:43:03 -0400</bug_when>
    <thetext>Unfortunately I can&apos;t seem to get a clean backport; I managed to get it to *build*, but some of the tests fail in a way that suggests I messed something up.

I&apos;m personally a bit closer to seeing this as a blocker than Matt; I just don&apos;t like the thought that forever, anyone who installs F26 Workstation on an affected system (which so far still seems to be &apos;lots of AMD boxes&apos;) and happens to try and use Boxes before doing a system update will get a cryptic error. It&apos;d be good to get some other votes on this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565179</commentid>
    <comment_count>20</comment_count>
    <who name="Eduardo Habkost">ehabkost</who>
    <bug_when>2017-07-04 19:29:44 -0400</bug_when>
    <thetext>(In reply to Adam Williamson from comment #18)
&gt; If we accept this as a blocker, other *possible* &apos;fixes&apos; are &quot;drop Boxes
&gt; from the live media&quot; (although that still leaves the &quot;must be able to host
&gt; virt guests&quot; criterion...) and &quot;revert qemu to 2.7 until we can fix this&quot;.

A possible one-line workaround is to disable the query-cpu-model-* QMP commands in QEMU so libvirt will fallback to the older methods of querying for host CPU capabilities.  I will make some tests to try to find out what&apos;s wrong.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565180</commentid>
    <comment_count>21</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-04 19:32:41 -0400</bug_when>
    <thetext>Thanks Eduardo! A few more notes:

* The earliest libvirt release containing the commits that should fix this is 3.3.0. That has never been built for F26, but Rawhide went to 3.3.0 on 2017-05-08 and 3.4.0 on 2017-06-05. I tested and confirmed that installing libvirt-3.3.0-1.fc27 on an affected F26 install *does* solve the problem, but of course we have no idea what other effects updating libvirt to a whole new version at this late stage might have.

* qemu 2.9.0 landed in F26 stable around end of April / start of May (Bodhi doesn&apos;t seem to give an exact date): https://bodhi.fedoraproject.org/updates/qemu-2.9.0-1.fc26

* F26 had qemu 2.8.0 on 2016-12-22. The current 2.8 series release is 2.8.1.1.

So our choices to fix this are:

* Manage a successful backport of the libvirt fix to 3.2
* Try what Eduardo suggested in #c20
* Update libvirt to 3.3.0 or 3.4.0
* Downgrade qemu to a 2.8 release (probably 2.8.1.1), with option to update back to 2.9 if we fix this by backporting or updating libvirt

As far as the blocker process goes, if we don&apos;t fix this, we can:

* Slip
* Reject as a blocker
* Remove Boxes from Workstation, respin, and reject as a blocker</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565184</commentid>
    <comment_count>22</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-04 19:43:22 -0400</bug_when>
    <thetext>I guess removing Boxes means assuming we have an update available we could make Boxes require at least that version so if people install it, it works. (Just removing it to skirt the blocker doesn&apos;t seem right — it&apos;s not like removing something that we&apos;ve decided we don&apos;t recommend.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565353</commentid>
    <comment_count>23</comment_count>
    <who name="Eduardo Habkost">ehabkost</who>
    <bug_when>2017-07-04 21:14:00 -0400</bug_when>
    <thetext>My findings:
* &quot;virt-install --cpu Opteron_G3&quot; fails too.
* libvirt&apos;s cpu_map.xml has &quot;svm&quot; in the AMD CPU models, so it disagrees with QEMU about the need for the &quot;svm&quot; flag.
* &apos;query-cpu-model-expansion type=full model={&quot;name&quot;:&quot;max&quot;}&apos; will return &quot;svm&quot; as unavailable in QEMU (meaning SVM nesting is not just disabled by default, but reported as unsupported)

The last two items would be minor bugs alone, but the two together cause this problem.  I&apos;m going to test a patch that disables the query-cpu-model-* QMP commands as an emergency measure, and report the results soon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565446</commentid>
    <comment_count>24</comment_count>
    <who name="Eduardo Habkost">ehabkost</who>
    <bug_when>2017-07-04 22:49:37 -0400</bug_when>
    <thetext>The following QEMU patch can be used to disable the new CPU model probing QMP commands, and get back to the old libvirt code used for older QEMU versions:

Signed-off-by: Eduardo Habkost &lt;ehabkost@redhat.com&gt;
---
Index: qemu-2.9.0/monitor.c
===================================================================
--- qemu-2.9.0.orig/monitor.c
+++ qemu-2.9.0/monitor.c
@@ -983,10 +983,12 @@ static void qmp_unregister_commands_hack
 #ifndef TARGET_ARM
     qmp_unregister_command(&amp;qmp_commands, &quot;query-gic-capabilities&quot;);
 #endif
-#if !defined(TARGET_S390X) &amp;&amp; !defined(TARGET_I386)
+#if 1 || !defined(TARGET_S390X) &amp;&amp; !defined(TARGET_I386)
+    /*XXX emergency workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1467599 */
     qmp_unregister_command(&amp;qmp_commands, &quot;query-cpu-model-expansion&quot;);
 #endif
-#if !defined(TARGET_S390X)
+#if 1 || !defined(TARGET_S390X)
+    /*XXX emergency workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1467599 */
     qmp_unregister_command(&amp;qmp_commands, &quot;query-cpu-model-baseline&quot;);
     qmp_unregister_command(&amp;qmp_commands, &quot;query-cpu-model-comparison&quot;);
 #endif</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10565705</commentid>
    <comment_count>25</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-05 02:30:04 -0400</bug_when>
    <thetext>Tested and confirmed that patch does the trick, thanks Eduardo. I am running a 2.9.0-1.fc26.1 build (2.9.0-2 exists on Rawhide, for other reasons, and we don&apos;t want this change on Rawhide, so we need to distinguish between the streams) with this change now:

https://koji.fedoraproject.org/koji/taskinfo?taskID=20336656

will create an update once the build is done, and we can possibly run a compose with it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10566088</commentid>
    <comment_count>26</comment_count>
    <who name="Daniel Berrange">berrange</who>
    <bug_when>2017-07-05 04:51:18 -0400</bug_when>
    <thetext>(In reply to Adam Williamson from comment #21)
&gt; So our choices to fix this are:
&gt; 
&gt; * Manage a successful backport of the libvirt fix to 3.2

This should be feasible, as RHEL-7.4 also ships 3.2 libvirt and has these fixes backported.

&gt; * Try what Eduardo suggested in #c20
&gt; * Update libvirt to 3.3.0 or 3.4.0
&gt; * Downgrade qemu to a 2.8 release (probably 2.8.1.1), with option to update
&gt; back to 2.9 if we fix this by backporting or updating libvirt</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10566609</commentid>
    <comment_count>27</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-05 08:39:18 -0400</bug_when>
    <thetext>So, I think at this point, if we want to block on this *and* get the release out on time, the plan would be:

1. Ship with Adam&apos;s qemu-kvm 2.9.0-1.fc26.1 with Eduardo&apos;s patch
2. Update ship an update to libvirt with the backport to 3.2
3. Update qemu-kvm with the emergency patch removed, requiring qemu-kvm nevra &gt;= the one in step 2.

... including calling for a new RC approximately right now, and then a bunch of overnight testing to validate the new RC.

Does that make sense?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10566844</commentid>
    <comment_count>28</comment_count>
    <who name="Eduardo Habkost">ehabkost</who>
    <bug_when>2017-07-05 09:45:51 -0400</bug_when>
    <thetext>(In reply to Matthew Miller from comment #27)
&gt; So, I think at this point, if we want to block on this *and* get the release
&gt; out on time, the plan would be:
&gt; 
&gt; 1. Ship with Adam&apos;s qemu-kvm 2.9.0-1.fc26.1 with Eduardo&apos;s patch
&gt; 2. Update ship an update to libvirt with the backport to 3.2
&gt; 3. Update qemu-kvm with the emergency patch removed, [...]

Sounds good to me, but only if we can&apos;t backport the patches to libvirt like Dan suggested at comment 26 (which would be the best option IMO).

&gt; [...] requiring qemu-kvm
&gt; nevra &gt;= the one in step 2.

Why is this part necessary?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10566856</commentid>
    <comment_count>29</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-05 09:49:40 -0400</bug_when>
    <thetext>(In reply to Eduardo Habkost from comment #28)
&gt; Sounds good to me, but only if we can&apos;t backport the patches to libvirt like
&gt; Dan suggested at comment 26 (which would be the best option IMO).

The compose takes about 12 hours, so if we want to have *any* hope of validating it, we need an update in bodhi with the patches applied in an hour or so. If that&apos;s possible, awesome.

&gt; &gt; [...] requiring qemu-kvm
&gt; &gt; nevra &gt;= the one in step 2.
&gt; Why is this part necessary?

Because otherwise someone might just update qemu-kvm and not get the new libvirt, and get a broken system. They _shouldn&apos;t_, but people often do stuff like that. It&apos;s not any trouble to express the dependency, so we might as well.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10566953</commentid>
    <comment_count>30</comment_count>
    <who name="Eduardo Habkost">ehabkost</who>
    <bug_when>2017-07-05 10:21:53 -0400</bug_when>
    <thetext>(In reply to Matthew Miller from comment #29)
&gt; &gt; &gt; [...] requiring qemu-kvm
&gt; &gt; &gt; nevra &gt;= the one in step 2.
&gt; &gt; Why is this part necessary?
&gt; 
&gt; Because otherwise someone might just update qemu-kvm and not get the new
&gt; libvirt, and get a broken system. They _shouldn&apos;t_, but people often do
&gt; stuff like that. It&apos;s not any trouble to express the dependency, so we might
&gt; as well.

I see.  Did you mean making qemu require libvirt &gt;= the one in step 2?  qemu doesn&apos;t require libvirt today, so I&apos;m not sure how to address that.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10567082</commentid>
    <comment_count>31</comment_count>
    <who name="Matthew Miller">mattdm</who>
    <bug_when>2017-07-05 10:51:17 -0400</bug_when>
    <thetext>(In reply to Eduardo Habkost from comment #30)
&gt; I see.  Did you mean making qemu require libvirt &gt;= the one in step 2?  qemu
&gt; doesn&apos;t require libvirt today, so I&apos;m not sure how to address that.

Ah. We can use the new &quot;rich&quot; dependencies:

Requires: libvirt &gt;= 3.2.1-4.fc26 if libvirt

(I think. Or 3.2.2 or whatever.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10567113</commentid>
    <comment_count>32</comment_count>
    <who name="Dennis Gilmore">dgilmore</who>
    <bug_when>2017-07-05 10:58:07 -0400</bug_when>
    <thetext>Matthew Miller the compose and update tools do not support rich dependencies, they are currently banned by FESCo</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10567130</commentid>
    <comment_count>33</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-07-05 11:05:59 -0400</bug_when>
    <thetext>qemu-2.9.0-1.fc26.1 has been submitted as an update to Fedora 26. https://bodhi.fedoraproject.org/updates/FEDORA-2017-db0ad12bde</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10568351</commentid>
    <comment_count>34</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-05 14:50:58 -0400</bug_when>
    <thetext>*** Bug 1465747 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10568636</commentid>
    <comment_count>35</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-05 16:42:49 -0400</bug_when>
    <thetext>Re-assigning to qemu, as we are at least likely to take the qemu workaround for this initially. I will open a new bug to cover fixing it more &apos;correctly&apos; in libvirt, and removing the qemu workaround.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10568679</commentid>
    <comment_count>36</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-05 17:00:38 -0400</bug_when>
    <thetext>I have filed https://bugzilla.redhat.com/show_bug.cgi?id=1468043 to track an expected subsequent update to fix the problem &apos;properly&apos; in libvirt, and remove the qemu workaround.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10571366</commentid>
    <comment_count>37</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-06 13:58:51 -0400</bug_when>
    <thetext>Verified the fix in RC-1.5.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10571429</commentid>
    <comment_count>38</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-07-06 14:22:14 -0400</bug_when>
    <thetext>qemu-2.9.0-1.fc26.1 has been pushed to the Fedora 26 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2017-db0ad12bde</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10571785</commentid>
    <comment_count>39</comment_count>
    <who name="Adam Williamson">awilliam</who>
    <bug_when>2017-07-06 16:58:50 -0400</bug_when>
    <thetext>Discussed at 2017-07-06 Fedora 26 Final Go/No-Go meeting, acting as a blocker review meeting: https://meetbot-raw.fedoraproject.org/fedora-meeting-2/2017-07-06/f26_final_gono-go_meeting.2017-07-06-17.00.html . Accepted as a blocker as a conditional violation of the criteria cited in #c3, on affected systems (which so far seems to include all AMD systems tested).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10571949</commentid>
    <comment_count>40</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-07-06 18:52:41 -0400</bug_when>
    <thetext>qemu-2.9.0-1.fc26.1 has been pushed to the Fedora 26 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10593179</commentid>
    <comment_count>41</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-07-13 19:37:25 -0400</bug_when>
    <thetext>qemu-2.9.0-3.fc26 has been submitted as an update to Fedora 26. https://bodhi.fedoraproject.org/updates/FEDORA-2017-97c48d9a81</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>