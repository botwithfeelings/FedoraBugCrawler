<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1425107</bug_id>
          
          <creation_ts>2017-02-20 10:04:00 -0500</creation_ts>
          <short_desc>Invalid read of size 4 in function _dbus_atomic_get.</short_desc>
          <delta_ts>2017-03-02 05:21:39 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>dbus</component>
          <version>26</version>
          <rep_platform>i686</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Reopened</keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Lukas Slebodnik">lslebodn</reporter>
          <assigned_to name="Colin Walters">walters</assigned_to>
          <cc>amigadave</cc>
    
    
    <cc>davejohansen</cc>
    
    
    <cc>jakub</cc>
    
    
    <cc>jwakely</cc>
    
    
    <cc>law</cc>
    
    
    <cc>lpoetter</cc>
    
    
    <cc>mpolacek</cc>
    
    
    <cc>walters</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>dbus-1.11.10-2.fc27 dbus-1.11.10-2.fc26</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-03-02 05:21:39</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10167432</commentid>
    <comment_count>0</comment_count>
      <attachid>1255725</attachid>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2017-02-20 10:04:01 -0500</bug_when>
    <thetext>Created attachment 1255725
minimal C reproducer extraceted from dbus code

Description of problem:
I run some of our test which use dbus and I found out that valgrinds test are failing on rawhide i386. There are some valgrind errors. And I can see then also in dbus unit tests.
 
==26500== Invalid read of size 4
==26500==    at 0x48A9100: _dbus_atomic_get (dbus-sysdeps-unix.c:2805)
==26500==    by 0x4859171: _dbus_connection_close_if_only_one_ref (dbus-connection.c:2152)
==26500==    by 0x4883340: handle_new_client_fd_and_unlock (dbus-server-socket.c:152)
==26500==    by 0x4883340: socket_handle_watch (dbus-server-socket.c:213)
==26500==    by 0x488FD9D: dbus_watch_handle (dbus-watch.c:758)
==26500==    by 0x10E868: _dbus_loop_iterate (dbus-mainloop.c:827)
==26500==    by 0x10C1EE: setup_connection (refs.c:270)
==26500==    by 0x4C0D6ED: ??? (in /usr/lib/libglib-2.0.so.0.5102.0)
==26500==    by 0x4C0D920: ??? (in /usr/lib/libglib-2.0.so.0.5102.0)
==26500==    by 0x4C0DB30: g_test_run_suite (in /usr/lib/libglib-2.0.so.0.5102.0)
==26500==    by 0x4C0DB5B: g_test_run (in /usr/lib/libglib-2.0.so.0.5102.0)
==26500==    by 0x10A953: main (refs.c:635)
==26500==  Address 0xfec7cbc8 is on thread 1&apos;s stack
==26500==  4 bytes below stack pointer

But I found out that problematic line is &quot;__sync_synchronize ()&quot;.
So it&apos;s not bug in dbus but probably gcc. So I tried the same version of libdbus on fedora 25 and there was not any problem.


Version-Release number of selected component (if applicable):
sh$ rpm -q gcc valgrind
gcc-7.0.1-0.8.fc26.i686
valgrind-3.12.0-3.fc26.i686

How reproducible:
Deterministic on i686

Steps to Reproduce:
1. //Compile attached source code
   gcc -g3 dbus_minimal.c
2. // run the code with valgrind
   valgrind ./a.out


Actual results:
==10957== Memcheck, a memory error detector
==10957== Copyright (C) 2002-2015, and GNU GPL&apos;d, by Julian Seward et al.
==10957== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10957== Command: ./a.out
==10957== 
after inc:0
==10957== Invalid read of size 4
==10957==    at 0x804843C: _dbus_atomic_get (dbus_minimal.c:52)
==10957==    by 0x8048489: main (dbus_minimal.c:63)
==10957==  Address 0xfed38654 is on thread 1&apos;s stack
==10957==  4 bytes below stack pointer
==10957== 
after get:1
==10957== 
==10957== HEAP SUMMARY:
==10957==     in use at exit: 0 bytes in 0 blocks
==10957==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==10957== 
==10957== All heap blocks were freed -- no leaks are possible
==10957== 
==10957== For counts of detected and suppressed errors, rerun with: -v
==10957== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 0 from 0)

Expected results:
O error:

Here is an output from fedora rawhide x86_64

==10957== Memcheck, a memory error detector
==10957== Copyright (C) 2002-2015, and GNU GPL&apos;d, by Julian Seward et al.
==10957== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==10957== Command: ./a.out
==10957== 
after inc:0
after get:1
==10957== 
==10957== HEAP SUMMARY:
==10957==     in use at exit: 0 bytes in 0 blocks
==10957==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==10957== 
==10957== All heap blocks were freed -- no leaks are possible
==10957== 
==10957== For counts of detected and suppressed errors, rerun with: -v
==10957== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 0 from 0)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10167439</commentid>
    <comment_count>1</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2017-02-20 10:04:38 -0500</bug_when>
    <thetext>Ups I wanted assign to gcc</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10167450</commentid>
    <comment_count>2</comment_count>
    <who name="Jakub Jelinek">jakub</who>
    <bug_when>2017-02-20 10:09:27 -0500</bug_when>
    <thetext>This has been reverted upstream today, the lock orl $0, -4(%esp) form of mfence has been done that way for performance reasons, but people who care about performance should not be using 32-bit code anyway, so it will be again lock orl $0, (%esp).

*** This bug has been marked as a duplicate of bug 1423434 ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10200986</commentid>
    <comment_count>3</comment_count>
    <who name="Lukas Slebodnik">lslebodn</who>
    <bug_when>2017-03-02 04:14:39 -0500</bug_when>
    <thetext>Please rebuild dbus with gcc-7.0.1-0.10.fc26 or newer

Please do not forget to rebuild in f26 and rawhide</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>1255725</attachid>
            <date>2017-02-20 10:04:00 -0500</date>
            <delta_ts>2017-02-20 10:04:01 -0500</delta_ts>
            <desc>minimal C reproducer extraceted from dbus code</desc>
            <filename>dbus_minimal.c</filename>
            <type>text/x-csrc</type>
            <size>1360</size>
            <attacher name="Lukas Slebodnik">lslebodn</attacher>
            
              <data encoding="base64">I2luY2x1ZGUgPHN0ZGlvLmg+Cgp0eXBlZGVmIGludCBkYnVzX2ludDMyX3Q7Cgp0eXBlZGVmIHN0
cnVjdCBEQnVzQXRvbWljIERCdXNBdG9taWM7CgovKioKICogICogQW4gYXRvbWljIGludGVnZXIg
c2FmZSB0byBpbmNyZW1lbnQgb3IgZGVjcmVtZW50IGZyb20gbXVsdGlwbGUgdGhyZWFkcy4KICog
ICAqLwpzdHJ1Y3QgREJ1c0F0b21pYwp7CgkgICAgdm9sYXRpbGUgZGJ1c19pbnQzMl90IHZhbHVl
OyAvKio8IFZhbHVlIG9mIHRoZSBhdG9taWMgaW50ZWdlci4gKi8KfTsKCgpzdGF0aWMgREJ1c0F0
b21pYyBuX2Jsb2Nrc19vdXRzdGFuZGluZyA9IHswfTsKCi8qKgogKiBBdG9taWNhbGx5IGluY3Jl
bWVudHMgYW4gaW50ZWdlcgogKgogKiBAcGFyYW0gYXRvbWljIHBvaW50ZXIgdG8gdGhlIGludGVn
ZXIgdG8gaW5jcmVtZW50CiAqIEByZXR1cm5zIHRoZSB2YWx1ZSBiZWZvcmUgaW5jcmVtZW50aW5n
CiAqLwpkYnVzX2ludDMyX3QKX2RidXNfYXRvbWljX2luYyAoREJ1c0F0b21pYyAqYXRvbWljKQp7
CiAgcmV0dXJuIF9fc3luY19hZGRfYW5kX2ZldGNoKCZhdG9taWMtPnZhbHVlLCAxKS0xOwp9Cgov
KioKICogQXRvbWljYWxseSBkZWNyZW1lbnQgYW4gaW50ZWdlcgogKgogKiBAcGFyYW0gYXRvbWlj
IHBvaW50ZXIgdG8gdGhlIGludGVnZXIgdG8gZGVjcmVtZW50CiAqIEByZXR1cm5zIHRoZSB2YWx1
ZSBiZWZvcmUgZGVjcmVtZW50aW5nCiAqLwpkYnVzX2ludDMyX3QKX2RidXNfYXRvbWljX2RlYyAo
REJ1c0F0b21pYyAqYXRvbWljKQp7CiAgcmV0dXJuIF9fc3luY19zdWJfYW5kX2ZldGNoKCZhdG9t
aWMtPnZhbHVlLCAxKSsxOwp9CgovKioKICogQXRvbWljYWxseSBnZXQgdGhlIHZhbHVlIG9mIGFu
IGludGVnZXIuIEl0IG1heSBjaGFuZ2UgYXQgYW55IHRpbWUKICogdGhlcmVhZnRlciwgc28gdGhp
cyBpcyBtb3N0bHkgb25seSB1c2VmdWwgZm9yIGFzc2VydGlvbnMuCiAqCiAqIEBwYXJhbSBhdG9t
aWMgcG9pbnRlciB0byB0aGUgaW50ZWdlciB0byBnZXQKICogQHJldHVybnMgdGhlIHZhbHVlIGF0
IHRoaXMgbW9tZW50CiAqLwpkYnVzX2ludDMyX3QKX2RidXNfYXRvbWljX2dldCAoREJ1c0F0b21p
YyAqYXRvbWljKQp7CiAgX19zeW5jX3N5bmNocm9uaXplICgpOwogIHJldHVybiBhdG9taWMtPnZh
bHVlOwp9CgoKaW50IG1haW4odm9pZCkKewoJZGJ1c19pbnQzMl90IHZhbDsKCXZhbCA9IF9kYnVz
X2F0b21pY19pbmMoJm5fYmxvY2tzX291dHN0YW5kaW5nKTsKCXByaW50ZigiYWZ0ZXIgaW5jOiVk
XG4iLCB2YWwpOwoKCXZhbCA9IF9kYnVzX2F0b21pY19nZXQoJm5fYmxvY2tzX291dHN0YW5kaW5n
KTsKCXByaW50ZigiYWZ0ZXIgZ2V0OiVkXG4iLCB2YWwpOwoKCXJldHVybiAwOwp9Cg==
</data>

          </attachment>
      

    </bug>

</bugzilla>