<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1424722</bug_id>
          
          <creation_ts>2017-02-18 12:59:00 -0500</creation_ts>
          <short_desc>Provide separate package containing i386 (ia32) and x86_64 (x64) ovmf binary</short_desc>
          <delta_ts>2017-04-09 01:59:13 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>edk2</component>
          <version>26</version>
          <rep_platform>noarch</rep_platform>
          <op_sys>Unspecified</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>ERRATA</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>unspecified</priority>
          <bug_severity>unspecified</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>mydeardiary</reporter>
          <assigned_to name="Paolo Bonzini">pbonzini</assigned_to>
          <cc>berrange</cc>
    
    
    <cc>crobinso</cc>
    
    
    <cc>kraxel</cc>
    
    
    <cc>lersek</cc>
    
    
    <cc>pbonzini</cc>
    
    
    <cc>virt-maint</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in>edk2-20170209git296153c5-3.fc26</cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-04-09 01:59:13</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10164077</commentid>
    <comment_count>0</comment_count>
    <who name="">mydeardiary</who>
    <bug_when>2017-02-18 12:59:00 -0500</bug_when>
    <thetext>Description of problem:
There is only edk2-ovmf package which contains only x86_64 (x64) uefi image.
Since there is no 32 bit emulation for uefi, it&apos;s not possible to launch 32 bit (ia32) efi application on x86_64 uefi image.

Version-Release number of selected component (if applicable):


How reproducible:
Always

Steps to Reproduce:
1. Install edk2-ovmf package (which only contains x64 uefi binary).
2. Attempt to launch ia32 efi image, such as Windows 10 x86 installer on UEFI (bootia32.efi).
3. Of course it&apos;s failed, since uefi doesn&apos;t have any kind of 32 bit emulation :(

Actual results:
Only x64 uefi OVMF binary are packaged, so one can&apos;t launch 32 bit uefi applications.

Expected results:
Both x64 and ia32 uefi OVMF image are present, or provided by separate noarch package.

Additional info:
Kraxel&apos;s daily build[1] has included separate package for x64 and ia32 UEFI binary: edk2.git-ovmf-x64 and edk2.git-ovmf-ia32. This can be used as packaging reference.

1: https://www.kraxel.org/repos/jenkins/edk2/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10172760</commentid>
    <comment_count>1</comment_count>
    <who name="Cole Robinson">crobinso</who>
    <bug_when>2017-02-21 19:10:54 -0500</bug_when>
    <thetext>Gerd, I&apos;m looking at your jenkins edk2 packaging but it&apos;s a bit different in this area. One thing I&apos;m confused by: I see for the fedora .secboot.fd build there&apos;s  lines like:

  build ${OVMF_SB_FLAGS} -a IA32 -a X64 ...

and references to Build/Ovmf3264/... dir. Is the .secboot build for both ia32 and x64? (sorry the edk2 build system is a mystery to me)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10173904</commentid>
    <comment_count>2</comment_count>
    <who name="Gerd Hoffmann">kraxel</who>
    <bug_when>2017-02-22 05:11:00 -0500</bug_when>
    <thetext>(In reply to Cole Robinson from comment #1)
&gt; Gerd, I&apos;m looking at your jenkins edk2 packaging but it&apos;s a bit different in
&gt; this area. One thing I&apos;m confused by: I see for the fedora .secboot.fd build
&gt; there&apos;s  lines like:
&gt; 
&gt;   build ${OVMF_SB_FLAGS} -a IA32 -a X64 ...
&gt; 
&gt; and references to Build/Ovmf3264/... dir. Is the .secboot build for both
&gt; ia32 and x64? (sorry the edk2 build system is a mystery to me)

It&apos;s a 64bit build, but some parts of the code are 32bit for reasons Laszlo can explain better.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10173905</commentid>
    <comment_count>3</comment_count>
    <who name="Paolo Bonzini">pbonzini</who>
    <bug_when>2017-02-22 05:11:12 -0500</bug_when>
    <thetext>The .secboot build uses IA32 for early boot and X64 for late boot.  The regular build uses X64 only.  What the bug requests is a pure IA32 build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10183757</commentid>
    <comment_count>4</comment_count>
    <who name="Laszlo Ersek">lersek</who>
    <bug_when>2017-02-25 10:41:24 -0500</bug_when>
    <thetext>The Ia32X64 build uses a 32-bit PEI phase and a 64-bit DXE phase. To guest OSes this appears as 64-bit UEFI. This configuration has the best general support in edk2, for example, it supports S3 resume together with the SMM toolstack. The pure X64 build doesn&apos;t support S3 resume together with the SMM toolstack (so for that, you have to set disable_s3=1 on the command line or in the domain XML -- or else, use a build that does not include the SMM toolstack).

The X64 build uses 64-bit PEI and DXE phases. To guest OSes this also appears as 64-bit UEFI. It is quite unorthodox as far as edk2 x86 platforms go (it comes with some unique challenges -- the PEI phase is 64-bit, but only has page tables for the first 4GB or RAM, and looking forward that tends to upset some assumptions elsewhere in the codebase). Nonetheless, for most Fedora end-users, this build is likely the most suitable (as long as they don&apos;t want to mix S3 and SMM).

The Ia32 build uses 32-bit PEI and DXE phases. To guest OSes this appears as 32-bit UEFI. The utility of this build is great for firmware and OS development purposes (Ia32 tends to tickle different bugs from the other builds!), but for end users, its utility is quite limited, for the following reasons:

* GNU/Linux distributions are encouraged not to ship 32-bit UEFI installers:
  &lt;http://mjg59.dreamwidth.org/26734.html&gt;, and indeed most don&apos;t.

* There are a number of Windows OS-es (all Client) that support 32-bit UEFI
  (Windows 8.1, Windows 10), but they don&apos;t boot on Ia32 OVMF. I used to have
  an on-and-off correspondence with a Microsoft developer about this, but
  ultimately I didn&apos;t get sufficient help. My attempts with WinDbg from across
  another Windows VM produced some results (again with the help of said
  Microsoft developer), but not enough -- the crash occurs in winload.efi
  very-very early, soon after bootmgfw.efi launches it, but before the debug
  agent within winload.efi would activate and become available to WinDbg on
  the other machine. So bootmgfw.efi reports a failure and that&apos;s it (BSOD).
  If Microsoft want to help us with this, they can; the debug/checked build
  of Windows 8.1, 32-bit, UEFI, produces a filename and a line number on the
  BSOD.

So, from an end-user perspective, a pure Ia32 build is quite useless -- I don&apos;t know what OS you&apos;d boot on top in practice.

For development &amp; testing of 32-bit UEFI applications (perhaps with the end-goal of shipping them on independent 32-bit UEFI platforms like tablets?), the Ia32 build of OVMF is helpful. (BTW I&apos;d classify this as &quot;firmware development&quot;, see above.) If I was doing such UEFI app development, I&apos;d certainly work against an upstream edk2 checkout, but other developers might prefer a different environment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10184580</commentid>
    <comment_count>5</comment_count>
    <who name="">mydeardiary</who>
    <bug_when>2017-02-26 09:47:33 -0500</bug_when>
    <thetext>Upcoming Debian stretch includes a 32 bit uefi bootable CDROM that can&apos;t be booted on 64 bit uefi platform. However, the CDROM image is bootable with 32 bit uefi.

http://cdimage.debian.org/cdimage/stretch_di_rc2/i386/iso-cd/debian-stretch-DI-rc2-i386-netinst.iso

$ printf &quot;%s\n&quot; &quot;$UEFI64&quot;
/usr/share/edk2.git/ovmf-x64/OVMF-pure-efi.fd

$ qemu-system-x86_64 -bios $UEFI64 -drive file=/tmp/debian.iso,media=cdrom -net none -serial mon:stdio -vnc :1 -m 512M
UEFI Interactive Shell v2.1
EDK II
UEFI v2.60 (EDK II, 0x00010000)
Mapping table
      FS0: Alias(s):CD1a1:;BLK4:
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)/CDROM(0x1)
     BLK2: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)
     BLK3: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)/CDROM(0x0)
     BLK6: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)
     BLK0: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x0)/Floppy(0x0)
     BLK1: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x0)/Floppy(0x1)
     BLK5: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)/HD(2,MBR,0x7115E1E2,0xF2C,0x260)
Press ESC in 1 seconds to skip startup.nsh or any other key to continue.
Shell&gt; fs0:
FS0:\&gt; dir efi\boot\
Directory of: FS0:\efi\boot\
02/01/2017  10:36 &lt;DIR&gt;         2,048  .
02/01/2017  10:36 &lt;DIR&gt;         2,048  ..
02/01/2017  10:36             278,528  bootia32.efi
          1 File(s)     278,528 bytes
          2 Dir(s)
FS0:\&gt; reset -s

&gt; 
&gt; For development &amp; testing of 32-bit UEFI applications (perhaps with the
&gt; end-goal of shipping them on independent 32-bit UEFI platforms like
&gt; tablets?), the Ia32 build of OVMF is helpful. (BTW I&apos;d classify this as
&gt; &quot;firmware development&quot;, see above.) If I was doing such UEFI app
&gt; development, I&apos;d certainly work against an upstream edk2 checkout, but other
&gt; developers might prefer a different environment.

At least just make 32 bit OVMF binary packaged, so that potential users (myself included) don&apos;t have to go through hassle of adding Kraxel&apos;s repo or compiling EDK II from source.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10193368</commentid>
    <comment_count>6</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2017-02-28 07:22:41 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 26 development cycle.
Changing version to &apos;26&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10300803</commentid>
    <comment_count>7</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-04-03 19:54:51 -0400</bug_when>
    <thetext>edk2-20170209git296153c5-3.fc26 has been submitted as an update to Fedora 26. https://bodhi.fedoraproject.org/updates/FEDORA-2017-efd454a960</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10304211</commentid>
    <comment_count>8</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-04-04 19:52:20 -0400</bug_when>
    <thetext>edk2-20170209git296153c5-3.fc26 has been pushed to the Fedora 26 testing repository. If problems still persist, please make note of it in this bug report.
See https://fedoraproject.org/wiki/QA:Updates_Testing for
instructions on how to install test updates.
You can provide feedback for this update here: https://bodhi.fedoraproject.org/updates/FEDORA-2017-efd454a960</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10312894</commentid>
    <comment_count>9</comment_count>
    <who name="">mydeardiary</who>
    <bug_when>2017-04-06 23:24:59 -0400</bug_when>
    <thetext>OK. The package edk2-ovmf-20170209git296153c5-3 and edk2-ovmf-ia32-20170209git296153c5-3 has been available in the testing repository.

So far so great. The edk2-ovmf OVMF_CODE.fd firmware can boot Windows 10 Creators Update (1703).

The edk2-ovmf-ia32 OVMF_CODE.fd firmware can boot Debian Stretch 32 bit netinstall iso.

I think the update is good and can leave testing repository.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10316993</commentid>
    <comment_count>10</comment_count>
    <who name="Fedora Update System">updates</who>
    <bug_when>2017-04-09 01:59:13 -0400</bug_when>
    <thetext>edk2-20170209git296153c5-3.fc26 has been pushed to the Fedora 26 stable repository. If problems still persist, please make note of it in this bug report.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>