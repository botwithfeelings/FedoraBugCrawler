<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1396755</bug_id>
          
          <creation_ts>2016-11-19 14:07:00 -0500</creation_ts>
          <short_desc>moc-qt4 issues with QT_VERSION_CHECK : Parse error at &quot;defined&quot;</short_desc>
          <delta_ts>2017-03-13 09:14:33 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>qt</component>
          <version>26</version>
          <rep_platform>All</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Reopened</keywords>
          <priority>unspecified</priority>
          <bug_severity>medium</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1396676</blocked>
    
    
    <blocked>1398080</blocked>
    
    
    <blocked>1399532</blocked>
    
    
    <blocked>1400240</blocked>
    
    
    <blocked>1401516</blocked>
    
    
    <blocked>1401674</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Orion Poplawski">orion</reporter>
          <assigned_to name="Rex Dieter">rdieter</assigned_to>
          <cc>aliakc</cc>
    
    
    <cc>belegdol</cc>
    
    
    <cc>fweimer</cc>
    
    
    <cc>itamar</cc>
    
    
    <cc>jgrulich</cc>
    
    
    <cc>jreznik</cc>
    
    
    <cc>jwakely</cc>
    
    
    <cc>kevin</cc>
    
    
    <cc>me</cc>
    
    
    <cc>ovasik</cc>
    
    
    <cc>projects.rg</cc>
    
    
    <cc>rdieter</cc>
    
    
    <cc>smparrish</cc>
    
    
    <cc>than</cc>
    
    
    <cc>volker27</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in></cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-03-13 09:14:33</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>9905608</commentid>
    <comment_count>0</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2016-11-19 14:07:50 -0500</bug_when>
    <thetext>Description of problem:

[ 15%] Generating covers/moc_coversearchstatisticsdialog.cxx
cd /builddir/build/BUILD/clementine-1.3.1/x86_64-redhat-linux-gnu/src/covers &amp;&amp; /usr/lib64/qt4/bin/moc-qt4 @/builddir/build/BUILD/clementine-1.3.1/x86_64-redhat-linux-gnu/src/covers/moc_coversearchstatisticsdialog.cxx_parameters
/usr/include/glib-2.0/glib/gversionmacros.h:52: Parse error at &quot;defined&quot;

Version-Release number of selected component (if applicable):
clementine-1.3.1-4.fc26</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9908283</commentid>
    <comment_count>1</comment_count>
    <who name="Jonathan Wakely">jwakely</who>
    <bug_when>2016-11-21 08:12:47 -0500</bug_when>
    <thetext>Probably due to https://bugreports.qt.io/browse/QTBUG-22829 but not helped by the fact that moc prints the wrong filename in the error (I&apos;m seeing something similar when trying to update boost in rawhide and rebuild the packages that use it).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9908328</commentid>
    <comment_count>2</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2016-11-21 08:21:57 -0500</bug_when>
    <thetext>We currently carry,
http://pkgs.fedoraproject.org/cgit/rpms/qt.git/tree/qt-everywhere-opensource-src-4.8.6-QTBUG-22829.patch

as a workaround for currently known issues.  If you have suggestions for additions, we can do so.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9912193</commentid>
    <comment_count>3</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-11-22 08:47:14 -0500</bug_when>
    <thetext>Interestingly, the file name appears to be nonsense, but the line number is always 52. (Why FIFTY-two? Isn&apos;t the answer to everything FOURTY-two? ;-) )

Other packages got:
/usr/include/QtWebKit/qwebpage.h:52
and:
/usr/include/boost/predef/os/windows.h:52
as the claimed fault location.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9917372</commentid>
    <comment_count>4</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-11-23 13:17:28 -0500</bug_when>
    <thetext>*** Bug 1396676 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9938679</commentid>
    <comment_count>5</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2016-11-29 07:16:01 -0500</bug_when>
    <thetext>*** Bug 1399532 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9938867</commentid>
    <comment_count>6</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2016-11-29 07:44:47 -0500</bug_when>
    <thetext>adjusting summary</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9949699</commentid>
    <comment_count>7</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2016-12-01 22:49:08 -0500</bug_when>
    <thetext>engrid is FTBFS due to this as well.

Looks like adding:

BOOST_PREDEF_VERSION_NUMBER_H

will help a lot.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9949719</commentid>
    <comment_count>8</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2016-12-01 23:16:21 -0500</bug_when>
    <thetext>Also ended up adding __G_VERSION_MACROS_H__ for the clementine build issue.  Building qt-4.8.7-22.fc26 now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9949774</commentid>
    <comment_count>9</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-02 00:19:55 -0500</bug_when>
    <thetext>I don&apos;t see how that is anywhere near a valid fix. I think it is just a workaround that puts the bug back into latent state, and does not sustainably address it.

The only recent change in gversionmacros.h is this:
https://git.gnome.org/browse/glib/commit/glib/gversionmacros.h?id=67ce53058102905ac3c8f6f57b044616301d479b
which just adds more of the same definitions that had parsed just fine so far.

That said, the number &quot;52&quot; appears several times in there, which might be where the mysterious bogus &quot;line 52&quot; really comes from. Or it might not.

But this looks a lot like some kind of memory corruption bug in moc-qt4, possibly even a miscompilation of moc-qt4 by g++, not like anything particular in the source files being parsed (unlike the Boost issues we worked around with such #defines in the past, where we clearly identified unsupported constructs in the files we were disabling that way).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9949792</commentid>
    <comment_count>10</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-02 00:22:23 -0500</bug_when>
    <thetext>E.g., we had an error at /usr/include/QtWebKit/qwebpage.h:52, I don&apos;t think excluding qwebpage.h from moc is going to do what we want. And I think the actual file is actually completely irrelevant, given how the error always claims to be at line 52. It can probably happen in any file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9949799</commentid>
    <comment_count>11</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2016-12-02 00:28:31 -0500</bug_when>
    <thetext>Until someone backports the fixes from qt5-moc into qt4-moc, I don&apos;t think we have much available to us other than these workarounds.  You are correct that the file name is not quite correct - it appears to be perhaps one up on the stack.  Some trial and error testing led me to the two headers that I&apos;ve set to be excluded and appear to allow engrid and clementine to build.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9949824</commentid>
    <comment_count>12</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-02 00:43:45 -0500</bug_when>
    <thetext>It makes those 2 packages build, excluding a different header each time. It will not do anything to fix the packages breaking in other places.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9950943</commentid>
    <comment_count>13</comment_count>
    <who name="Jonathan Wakely">jwakely</who>
    <bug_when>2016-12-02 06:56:29 -0500</bug_when>
    <thetext>Allowing the Boost.Predef header to be skipped will fix the build for a lot more than two packages. Most of the Boost rebuild failures I&apos;m seeing are caused by this, and all point to a predef header. Obviously it&apos;s only a workaround not a solution, but that&apos;s still a valid fix, because the Qt team aren&apos;t going to backport the real fix to moc, and this is affecting dozens of packages in Fedora.

If you have a fix for moc please propose it, otherwise please don&apos;t be so critical of small improvements that enable other people to make progress.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9951005</commentid>
    <comment_count>14</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-02 07:14:48 -0500</bug_when>
    <thetext>There is nothing to backport from Qt 5, moc-qt5 uses a completely different parser.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9951012</commentid>
    <comment_count>15</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-02 07:16:40 -0500</bug_when>
    <thetext>And my problem with the workaround is not that it is a workaround, but that it works around symptoms, not the real source of the error, which has not been identified yet.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9954954</commentid>
    <comment_count>16</comment_count>
    <who name="Julian Sikorski">belegdol</who>
    <bug_when>2016-12-05 01:16:05 -0500</bug_when>
    <thetext>qmc2 seems to fail due to this as well:
http://koji.fedoraproject.org/koji/buildinfo?buildID=821821
0.69 built fine with qt-devel-1:4.8.7-19.fc26. -21 and -22 fail with
/usr/lib64/qt4/bin/moc -DQMC2_SDLMAME -DQMC2_VERSION=0.70 -DQMC2_SVN_REV=0 -DBUILD_OS_NAME=Linux -DBUILD_OS_RELEASE=4.8.11-300.fc25.x86_64 -DBUILD_MACHINE=x86_64 -DPREFIX=/usr/local -DDATADIR=/usr/local/share -DSYSCONFDIR=/etc -DQMC2_JOYSTICK=1 -DQMC2_PHONON=1 -DQMC2_MULTIMEDIA=0 -DQMC2_FADER_SPEED=500 -DQMC2_BROWSER_EXTRAS_ENABLED -DQMC2_BROWSER_PLUGINS_ENABLED -DQMC2_BROWSER_JAVA_ENABLED -DQMC2_BROWSER_JAVASCRIPT_ENABLED -DQMC2_YOUTUBE_ENABLED -DQMC2_LIBARCHIVE_ENABLED -D_REENTRANT -D_7ZIP_PPMD_SUPPORT -D_7ZIP_ST -DQT_NO_DEBUG -DQT_WEBKIT_LIB -DQT_PHONON_LIB -DQT_SVG_LIB -DQT_SQL_LIB -DQT_XMLPATTERNS_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include/QtXml -I/usr/include/QtXmlPatterns -I/usr/include/QtSql -I/usr/include/QtSvg -I/usr/include/phonon -I/usr/include/QtWebKit -I/usr/include -I/usr/include/QtTest -I/usr/include/SDL2 -Ilzma -I/usr/include/minizip -I/usr/include/phonon_compat -I. -I. docbrowser.h -o moc_docbrowser.cpp
/usr/include/QtWebKit/qwebpage.h:52: Parse error at &quot;defined&quot;
make[1]: *** [Makefile.qmake:668: moc_docbrowser.cpp] Error 1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9956449</commentid>
    <comment_count>17</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-05 09:55:51 -0500</bug_when>
    <thetext>So we have at least /usr/include/QtWebKit/qwebpage.h and /builddir/build/BUILD/webkit-qtwebkit-23/Source/WTF/wtf/TypeTraits.h as further examples of headers that trigger this bug. There are probably more. Do you see now why I am saying that the workaround is WRONG, does not really fix anything, and does not scale?

We first need to figure out what header is ACTUALLY causing the issue and then skip THAT header, not the ones that run into trouble due to it. As long as we have not identified the actual source of the error, we are only trying (and failing) to paper over the problem.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9956456</commentid>
    <comment_count>18</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-05 09:58:35 -0500</bug_when>
    <thetext>That the headers that the workaround is trying to skip are NOT the source of the problem should also be obvious from the fact that the same headers run through moc just fine on other Fedora versions. (That is also the big difference from the Boost workaround, where the header that was skipped was actually the correct one. It is the difference between a valid workaround and broken symptom treatment.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9956499</commentid>
    <comment_count>19</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2016-12-05 10:07:52 -0500</bug_when>
    <thetext>Fwiw, I agree with orion, this is not an either/or proposition.  Finding short-term fixes does not preclude finding any ideal long-term solutions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9957515</commentid>
    <comment_count>20</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-05 15:32:44 -0500</bug_when>
    <thetext>/builddir/build/BUILD/kopete-16.08.3/protocols/jabber/libiris/src/irisnet/noncore/cutestuff/bytestream.h

Yet another header.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9957579</commentid>
    <comment_count>21</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-05 16:05:39 -0500</bug_when>
    <thetext>This is the header it&apos;s failing on:
https://cgit.kde.org/kopete.git/tree/protocols/jabber/libiris/src/irisnet/noncore/cutestuff/bytestream.h
I see a QT_VERSION_CHECK(5,0,0) used there too. So my theory that it might have something to do with version check macros might still hold.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9957704</commentid>
    <comment_count>22</comment_count>
    <who name="Orion Poplawski">orion</who>
    <bug_when>2016-12-05 16:52:42 -0500</bug_when>
    <thetext>Well, it chokes on boost and glib version check macros as well, so seems likely.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9969186</commentid>
    <comment_count>23</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2016-12-08 13:44:02 -0500</bug_when>
    <thetext>After adding some debugging and educated guesses, we found that *something* in rawhide was defining macros &apos;major&apos; &apos;minor&apos; which are both commonly used in other code (often for version checks).  We suspect glibc&apos;s sysmacros.h to be the culprit, so we&apos;re testing 2 changes:

1.  patching QT_VERSION_CHECK to use safer/namespaced variables
2.  patch moc to define _SYS_SYSMACROS_H

http://koji.fedoraproject.org/koji/buildinfo?buildID=823761</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9969203</commentid>
    <comment_count>24</comment_count>
    <who name="Jonathan Wakely">jwakely</who>
    <bug_when>2016-12-08 13:51:01 -0500</bug_when>
    <thetext>Ugh. This is because g++ auto-defines _GNU_SOURCE which makes glibc define all sorts of polluting names.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9969584</commentid>
    <comment_count>25</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-08 16:01:58 -0500</bug_when>
    <thetext>The problem is of course that moc does not implement the preprocessor correctly, the macro parameters should be shadowing the glibc macros, and also, the glibc macros are function-like macros and should thus only be expanded in a function-like context, which is not given here. But defining _SYS_SYSMACROS_H is the most effective workaround.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9970422</commentid>
    <comment_count>26</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2016-12-09 00:03:13 -0500</bug_when>
    <thetext>OK, I *think* I can confirm qt(4) is fixed, closing this.

%changelog
* Thu Dec 08 2016 Rex Dieter &lt;rdieter@fedoraproject.org&gt; - 1:4.8.7-24
- namespace QT_VERSION_CHECK to workaround major/minor being pre-defined (#1396755)
- update QTBUG-22829.patch to define _SYS_SYSMACROS_H (#1396755)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9970438</commentid>
    <comment_count>27</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-09 00:16:22 -0500</bug_when>
    <thetext>As per IRC: Looking at the current code:
http://sourceware.org/git/?p=glibc.git;a=blob;f=misc/sys/sysmacros.h;hb=HEAD
we need _SYS_SYSMACROS_H_OUTER instead of _SYS_SYSMACROS_H. _SYS_SYSMACROS_H does not actually help. Reopening.

The QT_VERSION_CHECK workaround can then also be dropped, the moc one should be sufficient on its own.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9970455</commentid>
    <comment_count>28</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-09 00:23:12 -0500</bug_when>
    <thetext>kdelibs builds fine against the current Qt 4, but that&apos;s due to the QT_VERSION_CHECK workaround, which does not help the other affected version check macros (e.g. Boost, GLib) (which is why I think you should remove that QT_VERSION_CHECK one, so that we actually test the real workaround).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9970903</commentid>
    <comment_count>29</comment_count>
    <who name="Florian Weimer">fweimer</who>
    <bug_when>2016-12-09 04:41:53 -0500</bug_when>
    <thetext>(In reply to Rex Dieter from comment #26)
&gt; OK, I *think* I can confirm qt(4) is fixed, closing this.
&gt; 
&gt; %changelog
&gt; * Thu Dec 08 2016 Rex Dieter &lt;rdieter@fedoraproject.org&gt; - 1:4.8.7-24
&gt; - namespace QT_VERSION_CHECK to workaround major/minor being pre-defined
&gt; (#1396755)
&gt; - update QTBUG-22829.patch to define _SYS_SYSMACROS_H (#1396755)

That&apos;s not valid.  The name _SYS_SYSMACROS_H might change at any time.

What&apos;s odd here is that on the glibc side, we plan to remove the automatic include of &lt;sys/sysmacros.h&gt; in a future version, and this bug reads like major/minor is defined in *more* contexts, which is exactly the opposite of the direction we want to move in.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9971295</commentid>
    <comment_count>30</comment_count>
    <who name="Kevin Kofler">kevin</who>
    <bug_when>2016-12-09 07:18:45 -0500</bug_when>
    <thetext>&gt; That&apos;s not valid.  The name _SYS_SYSMACROS_H might change at any time.

Then we will change our moc workaround. (In fact, we should be defining _SYS_SYSMACROS_H_OUTER instead to begin with, see comment #27. Of course, that is even more likely to change at some point, but for now, it will do what we want.)

&gt; What&apos;s odd here is that on the glibc side, we plan to remove the automatic 
&gt; include of &lt;sys/sysmacros.h&gt; in a future version, and this bug reads like 
&gt; major/minor is defined in *more* contexts, which is exactly the opposite of the 
&gt; direction we want to move in.

I think it&apos;s actually the new, more complex CONTENTS of the definitions (with the deprecation magic) that moc chokes on.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9971526</commentid>
    <comment_count>31</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2016-12-09 08:24:08 -0500</bug_when>
    <thetext> 
qt.spec
%changelog
* Fri Dec 09 2016 Rex Dieter &lt;rdieter@fedoraproject.org&gt; - 1:4.8.7-25
- update QTBUG-22829.patch to use _SYS_SYSMACROS_H_OUTER instead (#1396755)

(and related)
qt5-qtbase.spec
%changelog
* Fri Dec 09 2016 Rex Dieter &lt;rdieter@fedoraproject.org&gt; - 5.7.1-8
- update moc patch to define _SYS_SYSMACROS_H_OUTER instead (#1396755)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9971562</commentid>
    <comment_count>32</comment_count>
    <who name="Florian Weimer">fweimer</who>
    <bug_when>2016-12-09 08:35:58 -0500</bug_when>
    <thetext>(In reply to Kevin Kofler from comment #30)
&gt; &gt; That&apos;s not valid.  The name _SYS_SYSMACROS_H might change at any time.
&gt; 
&gt; Then we will change our moc workaround. (In fact, we should be defining
&gt; _SYS_SYSMACROS_H_OUTER instead to begin with, see comment #27. Of course,
&gt; that is even more likely to change at some point, but for now, it will do
&gt; what we want.)

Oh well, I now understand there is very little alternative.

&gt; &gt; What&apos;s odd here is that on the glibc side, we plan to remove the automatic 
&gt; &gt; include of &lt;sys/sysmacros.h&gt; in a future version, and this bug reads like 
&gt; &gt; major/minor is defined in *more* contexts, which is exactly the opposite of the 
&gt; &gt; direction we want to move in.
&gt; 
&gt; I think it&apos;s actually the new, more complex CONTENTS of the definitions
&gt; (with the deprecation magic) that moc chokes on.

Right, if moc pretends to be __GNUC__, then it must be able to handle these complex macros.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>9974907</commentid>
    <comment_count>33</comment_count>
    <who name="Raphael Groner">projects.rg</who>
    <bug_when>2016-12-11 12:46:00 -0500</bug_when>
    <thetext>*** Bug 1401709 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10019409</commentid>
    <comment_count>34</comment_count>
    <who name="Volker Fröhlich">volker27</who>
    <bug_when>2016-12-25 05:59:51 -0500</bug_when>
    <thetext>QGIS is building fine again now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10191596</commentid>
    <comment_count>35</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2017-02-28 05:38:22 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 26 development cycle.
Changing version to &apos;26&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10232966</commentid>
    <comment_count>36</comment_count>
    <who name="Rex Dieter">rdieter</who>
    <bug_when>2017-03-13 09:14:33 -0400</bug_when>
    <thetext>I think all the related known issues are fixed, I&apos;ll take the liberty of closing this now.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>