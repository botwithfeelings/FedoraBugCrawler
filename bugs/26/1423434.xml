<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1"
          urlbase="https://bugzilla.redhat.com/"
          
          maintainer="bugzilla-error-list@redhat.com"
>

    <bug>
          <bug_id>1423434</bug_id>
          
          <creation_ts>2017-02-17 05:20:00 -0500</creation_ts>
          <short_desc>out of bounds stack access triggered by __sync_synchronize() on i686</short_desc>
          <delta_ts>2017-03-02 03:47:40 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>2</classification_id>
          <classification>Fedora</classification>
          <product>Fedora</product>
          <component>gcc</component>
          <version>26</version>
          <rep_platform>i686</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>RAWHIDE</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>Regression</keywords>
          <priority>high</priority>
          <bug_severity>high</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>1423318</blocked>
    
    
    <blocked>1428286</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Kamil Dudka">kdudka</reporter>
          <assigned_to name="Jakub Jelinek">jakub</assigned_to>
          <cc>davejohansen</cc>
    
    
    <cc>dueno</cc>
    
    
    <cc>jakub</cc>
    
    
    <cc>jstanek</cc>
    
    
    <cc>jwakely</cc>
    
    
    <cc>kdudka</cc>
    
    
    <cc>law</cc>
    
    
    <cc>lslebodn</cc>
    
    
    <cc>mjw</cc>
    
    
    <cc>mpolacek</cc>
    
    
    <cc>pkubat</cc>
    
    
    <cc>wilmer5</cc>
          <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>
          
          <cf_fixed_in></cf_fixed_in>
          <cf_doc_type>If docs needed, set a value</cf_doc_type>
          <cf_release_notes></cf_release_notes>
          <cf_story_points>---</cf_story_points>
          
          <cf_environment></cf_environment>
          <cf_last_closed>2017-03-01 15:35:32</cf_last_closed>
          <cf_type>Bug</cf_type>
          <cf_regression_status>---</cf_regression_status>
          <cf_mount_type>---</cf_mount_type>
          <cf_documentation_action>---</cf_documentation_action>
          <cf_crm></cf_crm>
          <cf_verified_branch></cf_verified_branch>
          <cf_category>---</cf_category>
          <cf_ovirt_team>---</cf_ovirt_team>
          
          <cf_cloudforms_team>---</cf_cloudforms_team>
          
          
          
          
          <target_release>---</target_release>
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>10157183</commentid>
    <comment_count>0</comment_count>
    <who name="Kamil Dudka">kdudka</who>
    <bug_when>2017-02-17 05:20:10 -0500</bug_when>
    <thetext>Description of problem:
I see invalid (read) access to stack under valgrind on i686.


Version-Release number of selected component (if applicable):
sqlite-libs-3.16.2-3.fc26.i686


How reproducible:
Reliably.


Steps to Reproduce:
$ mock -vr fedora-rawhide-i386 --init
$ mock -vr fedora-rawhide-i386 --install https://kojipkgs.fedoraproject.org//packages/sqlite/3.16.2/3.fc26/i686/sqlite-libs-3.16.2-3.fc26.i686.rpm https://kojipkgs.fedoraproject.org//packages/sqlite/3.16.2/3.fc26/i686/sqlite-debuginfo-3.16.2-3.fc26.i686.rpm
$ mock -vr fedora-rawhide-i386 --install curl valgrind
$ mock -vr fedora-rawhide-i386 --no-clean --chroot &apos;valgrind curl -svo/dev/null https://google.com&apos;


Actual results:
==15600== Invalid read of size 4
==15600==    at 0x6311D17: UnknownInlinedFun (sqlite3.c:23079)
==15600==    by 0x6311D17: sqlite3MutexInit (sqlite3.c:22651)
==15600==    by 0x6329854: sqlite3_initialize (sqlite3.c:139163)
==15600==    by 0x6352A73: sqlite3_mprintf (sqlite3.c:25881)
==15600==    by 0x62E484D: ??? (in /usr/lib/libsoftokn3.so)
==15600==    by 0x62E88D0: ??? (in /usr/lib/libsoftokn3.so)
==15600==    by 0x62CE7C2: ??? (in /usr/lib/libsoftokn3.so)
==15600==    by 0x62CEC12: ??? (in /usr/lib/libsoftokn3.so)
==15600==    by 0x62CF944: ??? (in /usr/lib/libsoftokn3.so)
==15600==    by 0x62CFBFD: ??? (in /usr/lib/libsoftokn3.so)
==15600==    by 0x498BCC4: ??? (in /usr/lib/libnss3.so)
==15600==    by 0x498C3EB: ??? (in /usr/lib/libnss3.so)
==15600==    by 0x499A71F: SECMOD_LoadModule (in /usr/lib/libnss3.so)
==15600==  Address 0xfe9a5bec is on thread 1&apos;s stack
==15600==  4 bytes below stack pointer



Expected results:
valgrind output is clean.


Additional info:
This breaks nss-softokn and consequently curl.  Everything works as expected after downgrading to sqlite-libs-3.16.2-2.fc26.i686.  So it is most likely a new version of the compiler what triggered this bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10157227</commentid>
    <comment_count>1</comment_count>
    <who name="Kamil Dudka">kdudka</who>
    <bug_when>2017-02-17 05:33:12 -0500</bug_when>
    <thetext>The minimal example seems to be as easy as:

int main()
{
    __sync_synchronize();
}

==18365== Invalid read of size 4
==18365==    at 0x80483D9: main (test.c:3)
==18365==  Address 0xfec676b4 is on thread 1&apos;s stack
==18365==  4 bytes below stack pointer

# rpm -q gcc valgrind
gcc-7.0.1-0.8.fc26.i686
valgrind-3.12.0-3.fc26.i686

Switching to gcc...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10167451</commentid>
    <comment_count>2</comment_count>
    <who name="Jakub Jelinek">jakub</who>
    <bug_when>2017-02-20 10:09:27 -0500</bug_when>
    <thetext>*** Bug 1425107 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10167469</commentid>
    <comment_count>3</comment_count>
    <who name="Jakub Jelinek">jakub</who>
    <bug_when>2017-02-20 10:12:54 -0500</bug_when>
    <thetext>This has been reverted upstream today, the lock orl $0, -4(%esp) form of mfence has been done that way for performance reasons, but people who care about performance should not be using 32-bit code anyway, so it will be again lock orl $0, (%esp).
See http://gcc.gnu.org/r245577

This will be picked by Fedora gcc mid to late this week, then you&apos;ll need to rebuild anything that uses __sync_synchronize or similar atomic barriers and you care about running it under valgrind in 32-bit mode (the code is really harmless, because it doesn&apos;t change the word below sp, but valgrind is still unhappy about that).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10167535</commentid>
    <comment_count>4</comment_count>
    <who name="Mark Wielaard">mjw</who>
    <bug_when>2017-02-20 10:30:35 -0500</bug_when>
    <thetext>Thanks. The valgrind bug related to below stack accesses to implement memory fences on i386 is https://bugs.kde.org/show_bug.cgi?id=374940</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10192419</commentid>
    <comment_count>5</comment_count>
    <who name="Fedora End Of Life">jkurik</who>
    <bug_when>2017-02-28 06:28:12 -0500</bug_when>
    <thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 26 development cycle.
Changing version to &apos;26&apos;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>10198996</commentid>
    <comment_count>6</comment_count>
    <who name="Jakub Jelinek">jakub</who>
    <bug_when>2017-03-01 15:35:32 -0500</bug_when>
    <thetext>Should be fixed in gcc-7.0.1-0.10.fc26.  You need to rebuild 32-bit packages that use such barriers and you want to run them under valgrind (outside of valgrind it is really harmless).</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>