<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.redhat.com/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.12068.1" urlbase="https://bugzilla.redhat.com/" maintainer="bugzilla-error-list@redhat.com">

  <bug>
    <bug_id>626188</bug_id>

    <creation_ts>2010-08-22 11:56:00 -0400</creation_ts>
    <short_desc>Firewall doesn&apos;t know about Rygel</short_desc>
    <delta_ts>2016-05-23 14:41:06 -0400</delta_ts>
    <reporter_accessible>1</reporter_accessible>
    <cclist_accessible>1</cclist_accessible>
    <classification_id>2</classification_id>
    <classification>Fedora</classification>
    <product>Fedora</product>
    <component>system-config-firewall</component>
    <version>24</version>
    <rep_platform>All</rep_platform>
    <op_sys>Linux</op_sys>
    <bug_status>CLOSED</bug_status>
    <resolution>NEXTRELEASE</resolution>

    <see_also>https://bugzilla.redhat.com/show_bug.cgi?id=892801</see_also>
    <bug_file_loc></bug_file_loc>
    <status_whiteboard></status_whiteboard>
    <keywords>Reopened</keywords>
    <priority>low</priority>
    <bug_severity>medium</bug_severity>
    <target_milestone>---</target_milestone>

    <everconfirmed>1</everconfirmed>
    <reporter name="Tobias Mueller">fedora-bugs</reporter>
    <assigned_to name="Thomas Woerner">twoerner</assigned_to>
    <cc>agrover</cc>

    <cc>akostadi</cc>

    <cc>aleksander</cc>

    <cc>ashes-iontach</cc>

    <cc>awilliam</cc>

    <cc>bnocera</cc>

    <cc>bruce</cc>

    <cc>csaavedra</cc>

    <cc>debarshir</cc>

    <cc>djasa</cc>

    <cc>ignatenko</cc>

    <cc>john.haxby</cc>

    <cc>jpopelka</cc>

    <cc>juliusvonkohout</cc>

    <cc>jussi.kukkonen</cc>

    <cc>lgalosha</cc>

    <cc>mail</cc>

    <cc>marcandre.lureau</cc>

    <cc>maurizio.antillon</cc>

    <cc>mcatanzaro</cc>

    <cc>michael.wiktowy</cc>

    <cc>redhat-bugzilla</cc>

    <cc>samuel-rhbugs</cc>

    <cc>sanjay.ankur</cc>

    <cc>s</cc>

    <cc>stefan.home</cc>

    <cc>turakas</cc>

    <cc>twoerner</cc>

    <cc>zali</cc>
    <qa_contact name="Fedora Extras Quality Assurance">extras-qa</qa_contact>

    <cf_fixed_in></cf_fixed_in>
  <cf_doc_type>Bug Fix</cf_doc_type>
<cf_release_notes></cf_release_notes>
<cf_story_points>---</cf_story_points>

<cf_environment></cf_environment>
<cf_last_closed>2016-05-23 14:41:06</cf_last_closed>
<cf_type>---</cf_type>
<cf_regression_status>---</cf_regression_status>
<cf_mount_type>---</cf_mount_type>
<cf_documentation_action>---</cf_documentation_action>
<cf_crm></cf_crm>
<cf_verified_branch></cf_verified_branch>
<cf_category>---</cf_category>
<cf_ovirt_team>---</cf_ovirt_team>

<cf_cloudforms_team>---</cf_cloudforms_team>

<target_release>---</target_release>

<votes>0</votes>

<comment_sort_order>oldest_to_newest</comment_sort_order>
<long_desc isprivate="0">
<commentid>3097187</commentid>
<comment_count>0</comment_count>
<who name="Tobias Mueller">fedora-bugs</who>
<bug_when>2010-08-22 11:56:48 -0400</bug_when>
<thetext>Description of problem: Firewall blocks Rygel Version-Release number of selected component (if applicable): How reproducible: Install rygel, try to use it, fail. Steps to Reproduce: 1. 2. 3. Actual results: No button in the firewall
preferences to enable Rygel. Expected results: I expected to be able to check a button in the firewall configuration to enable Rygel. Additional info:</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>3097203</commentid>
<comment_count>1</comment_count>
<who name="Peter Robinson">pbrobinson</who>
<bug_when>2010-08-22 12:31:37 -0400</bug_when>
<thetext>The problem isn&apos;t with rygel but rather the firewall config tool</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>3721527</commentid>
<comment_count>2</comment_count>
<who name="Zeeshan Ali">zali</who>
<bug_when>2011-05-07 15:29:20 -0400</bug_when>
<thetext>This bug has been awaiting a long time and is pretty critical since rygel just can&apos;t work without the fix for this. I always get angry users who tell me that rygel doesn&apos;t work for them and its always because of default firewall
rules not allowing UPnP ports. Can this be fixed anytime soon please?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>3721535</commentid>
<comment_count>3</comment_count>
<who name="Marc-Andre Lureau">marcandre.lureau</who>
<bug_when>2011-05-07 15:41:14 -0400</bug_when>
<thetext>I second Zeeshan, it would be great to make it easier for users to share media through UPnP without having to deal with his firewall configuration.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>3721811</commentid>
<comment_count>4</comment_count>
<who name="Jens Georg">mail</who>
<bug_when>2011-05-08 06:18:54 -0400</bug_when>
<thetext>Yes, please. This is really annoying.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>3722731</commentid>
<comment_count>5</comment_count>
<who name="Thomas Woerner">twoerner</who>
<bug_when>2011-05-09 04:22:14 -0400</bug_when>
<thetext>Do you have information on ports and rules, that are needed for this? The documentation of rygel does not cover firewall settings at all. This is the only information I could find in a mailing list, but it also says that the 34567 port is
dynamic and that this has not been tested at all: 239.255.255.250:1900/UDP localhost:1900/UDP localhost:34567/TCP</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>3723246</commentid>
<comment_count>6</comment_count>
<who name="Zeeshan Ali">zali</who>
<bug_when>2011-05-09 09:16:57 -0400</bug_when>
<thetext>(In reply to comment #5) &gt; Do you have information on ports and rules, that are needed for this? &gt; &gt; The documentation of rygel does not cover firewall settings at all. Thats because user doesn&apos;t need to know that, in fact we
don&apos;t even want him/her to know about existence of rygel. :) &gt; This is the only information I could find in a mailing list, but it also says &gt; that the 34567 port is dynamic and that this has not been tested at all: &gt; &gt;
239.255.255.250:1900/UDP &gt; localhost:1900/UDP This is correct, except for the localhost part, you want to allow 1900 port on every address/iface. If you don&apos;t want this port to be open by default, I suggest creating a special config for
&quot;UPnP&quot; (Its SSDP actually but nobody uses the protocol without UPnP) that opens these ports. AFAIK, Windows does that. Its still very annoying for users but its still better than asking users to disable their firewalls completely. &gt;
localhost:34567/TCP This one is pretty much dynamic and is decided by libsoup (SoupServer) for us but afaik there is no issues with these (user) ports?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>3778221</commentid>
<comment_count>7</comment_count>
<who name="Bug Zapper">triage</who>
<bug_when>2011-06-01 06:49:52 -0400</bug_when>
<thetext>
This message is a reminder that Fedora 13 is nearing its end of life. Approximately 30 (thirty) days from now Fedora will stop maintaining and issuing updates for Fedora 13. It is Fedora&apos;s policy to close all bug reports from releases that are
no longer maintained. At that time this bug will be closed as WONTFIX if it remains open with a Fedora &apos;version&apos; of &apos;13&apos;. Package Maintainer: If you wish for this bug to remain open because you plan to fix it in a currently
maintained version, simply change the &apos;version&apos; to a later Fedora version prior to Fedora 13&apos;s end of life. Bug Reporter: Thank you for reporting this issue and we are sorry that we may not be able to fix it before Fedora 13 is end of
life. If you would still like to see this bug fixed and are able to reproduce it against a later version of Fedora please change the &apos;version&apos; of this bug to the applicable version. If you are unable to change the version, please add a
comment here and someone will do it for you. Although we aim to fix as many bugs as possible during every release&apos;s lifetime, sometimes those efforts are overtaken by events. Often a more recent Fedora release includes newer upstream software
that fixes bugs or makes them obsolete. The process we are following is described here: http://fedoraproject.org/wiki/BugZappers/HouseKeeping</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>4132647</commentid>
<comment_count>8</comment_count>
<who name="Claudio Saavedra">csaavedra</who>
<bug_when>2011-11-07 16:27:25 -0500</bug_when>
<thetext>Still not working out of the box? With Zeeshan now working for Red Hat even? Bummer :)</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>4147186</commentid>
<comment_count>10</comment_count>
<who name="Andy Grover">agrover</who>
<bug_when>2011-11-14 14:51:52 -0500</bug_when>
<thetext>Maybe attaching a patch would help get this going. git clone git://git.fedorahosted.org/git/system-config-firewall edit src/fw_services.py, add whatever services you want create a patch with &quot;git diff &gt; rygel.patch&quot; Apply it to
your test machine, verify option shows up and rygel works when it is checked you could attach the patch to the fedorahosted trac, but might as well just attach it here and Thomas will probably pull it in.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>4147351</commentid>
<comment_count>11</comment_count>
<attachid>533617</attachid>
<who name="Zeeshan Ali">zali</who>
<bug_when>2011-11-14 15:55:12 -0500</bug_when>
<thetext>Created attachment 533617 Add option to permit &apos;UPnP&apos; discovery protocol</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>4147683</commentid>
<comment_count>12</comment_count>
<who name="Zeeshan Ali">zali</who>
<bug_when>2011-11-14 17:43:13 -0500</bug_when>
<thetext>Forgot to mention that I didn&apos;t get to test this patch.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>4277857</commentid>
<comment_count>13</comment_count>
<who name="Jens Georg">mail</who>
<bug_when>2011-12-27 06:15:59 -0500</bug_when>
<thetext>(In reply to comment #11) &gt; Created attachment 533617 [details] &gt; Add option to permit &apos;UPnP&apos; discovery protocol I&apos;m not sure that&apos;s enough. It&apos;s sufficient for the announcement case (device on the network
sends the alive beacons) but not for active searching: Fedora host sends SSDP mcast package from some random port (say 12345) → 1900, as per standard the reply has to go to port 12345 _and_ should not originate from port 1900 but another random port
on the sending machine.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>4950914</commentid>
<comment_count>14</comment_count>
<who name="Fedora End Of Life">jkurik</who>
<bug_when>2012-08-07 16:18:21 -0400</bug_when>
<thetext>This message is a notice that Fedora 15 is now at end of life. Fedora has stopped maintaining and issuing updates for Fedora 15. It is Fedora&apos;s policy to close all bug reports from releases that are no longer maintained. At this time,
all open bugs with a Fedora &apos;version&apos; of &apos;15&apos; have been closed as WONTFIX. (Please note: Our normal process is to give advanced warning of this occurring, but we forgot to do that. A thousand apologies.) Package Maintainer: If you
wish for this bug to remain open because you plan to fix it in a currently maintained version, feel free to reopen this bug and simply change the &apos;version&apos; to a later Fedora version. Bug Reporter: Thank you for reporting this issue and we
are sorry that we were unable to fix it before Fedora 15 reached end of life. If you would still like to see this bug fixed and are able to reproduce it against a later version of Fedora, you are encouraged to click on &quot;Clone This Bug&quot; (top
right of this page) and open it against that version of Fedora. Although we aim to fix as many bugs as possible during every release&apos;s lifetime, sometimes those efforts are overtaken by events. Often a more recent Fedora release includes newer
upstream software that fixes bugs or makes them obsolete. The process we are following is described here: http://fedoraproject.org/wiki/BugZappers/HouseKeeping</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>4952534</commentid>
<comment_count>15</comment_count>
<who name="Marc-Andre Lureau">marcandre.lureau</who>
<bug_when>2012-08-08 06:52:39 -0400</bug_when>
<thetext>(moving to rawhide to keep it open..)</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5798815</commentid>
<comment_count>16</comment_count>
<who name="Fedora End Of Life">jkurik</who>
<bug_when>2013-04-03 16:18:40 -0400</bug_when>
<thetext>This bug appears to have been reported against &apos;rawhide&apos; during the Fedora 19 development cycle. Changing version to &apos;19&apos;. (As we did not run this process for some time, it could affect also pre-Fedora 19 development
cycle bugs. We are very sorry. It will help us with cleanup during Fedora 19 End Of Life. Thank you.) More information and reason for this action is here: https://fedoraproject.org/wiki/BugZappers/HouseKeeping/Fedora19</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5904688</commentid>
<comment_count>17</comment_count>
<who name="Jens Georg">mail</who>
<bug_when>2013-05-10 11:27:52 -0400</bug_when>
<thetext>The patch in comment 11 should be correct for UPnP servers if the assumption about user ports in comment 6 is true. There might be an issue with UPnP clients, though.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5910692</commentid>
<comment_count>18</comment_count>
<who name="Adam Williamson">awilliam</who>
<bug_when>2013-05-13 15:49:00 -0400</bug_when>
<thetext>We replaced iptables with firewalld by default several cycles back. It may not be a good idea to repurpose this bug as iptables and s-c-f still exist and haven&apos;t been officially obsoleted yet, but it would probably be a good idea to
also file a bug against firewalld , if it doesn&apos;t already handle this (from a quick look at /usr/lib/firewalld/services/ , I don&apos;t see anything relating to Rygel or UPnP). Given how firewalld works, Rygel could actually request a hole in
the firewall interactively; that&apos;s one of the things firewalld is intended to enable. So the app could be enhanced here as well.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5910694</commentid>
<comment_count>19</comment_count>
<who name="Adam Williamson">awilliam</who>
<bug_when>2013-05-13 15:49:41 -0400</bug_when>
<thetext>CCing Jiri, who is active in firewalld maintenance ATM (along with Thomas).</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5912015</commentid>
<comment_count>20</comment_count>
<who name="john.haxby@oracle.com">john.haxby</who>
<bug_when>2013-05-14 04:22:59 -0400</bug_when>
<thetext>It&apos;s been a while since I was able to test this, but I don&apos;t think opening port 1900 is sufficient. I&apos;m not in a position to be able to test this at the moment. As I recall, though, the client (eg a TV or a network-streaming
amplifier) connects to the uPnP server on a port supplied as part of the exchange that was happening on port 1900 and that port was blocked. As I say, this was a little while ago, but what seems to be needed is a conntrack module (in the kernel) that
knows enough about the uPnP protocol to be able to mark the new connection as &quot;related&quot;. This isn&apos;t an iptables or a firewalld issue. Obviously this hypothesis needs testing.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5912108</commentid>
<comment_count>21</comment_count>
<who name="Ankur Sinha (FranciscoD)">sanjay.ankur</who>
<bug_when>2013-05-14 04:53:43 -0400</bug_when>
<thetext>Only opening the 1900 port isn&apos;t enough. There&apos;s another port that needs to be opened, like Jens mentioned. This port is a dynamic port that libsoup uses, and is a user port. Are user ports open by default in the firewall? I
don&apos;t think so. I manually specify a port for rygel to use via the configuration file and then open this up from firewalld to get rygel to work completely. I was wondering how firewalld would know what this other port was, if it were dynamic.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5913087</commentid>
<comment_count>22</comment_count>
<who name="Zeeshan Ali">zali</who>
<bug_when>2013-05-14 09:20:49 -0400</bug_when>
<thetext>(In reply to comment #21) &gt; Only opening the 1900 port isn&apos;t enough. &gt; &gt; There&apos;s another port that needs to &gt; be opened, like Jens mentioned. This port is a dynamic port that libsoup &gt; uses, and is a user port. Are
user ports open by default in the firewall? I &gt; don&apos;t think so. They really should be, no? &gt; I manually specify a port for rygel to use via the configuration file and &gt; then open this up from firewalld to get rygel to work completely.
So you are saying that you have tested that after you open port 1900, you still can&apos;t get rygel to work w/o the above? &gt; I was wondering how firewalld would know what this other port was, if it &gt; were dynamic. I guess it wouldn&apos;t but
as pointed out in comment#18, rygel could also be modified to punch holes in the firewall. Although I wonder if its a good idea for rygel to do that w/o asking or informing the user/admin. Maybe rygel should choose a specific port by default in the
configuration rather than using dynamic port?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5915736</commentid>
<comment_count>23</comment_count>
<who name="Ankur Sinha (FranciscoD)">sanjay.ankur</who>
<bug_when>2013-05-15 00:36:35 -0400</bug_when>
<thetext>(In reply to comment #22) &gt; (In reply to comment #21) &gt; &gt; Only opening the 1900 port isn&apos;t enough. &gt; &gt; &gt; &gt; There&apos;s another port that needs to &gt; &gt; be opened, like Jens mentioned. This port is a dynamic
port that libsoup &gt; &gt; uses, and is a user port. Are user ports open by default in the firewall? I &gt; &gt; don&apos;t think so. &gt; &gt; They really should be, no? No clue. We&apos;ll need the firewalld folks to clarify this one. &gt; &gt;
&gt; I manually specify a port for rygel to use via the configuration file and &gt; &gt; then open this up from firewalld to get rygel to work completely. &gt; &gt; So you are saying that you have tested that after you open port 1900, you &gt; still
can&apos;t get rygel to work w/o the above? Yep. As far as I can tell. I&apos;ll re-test this and confirm over the weekend though. I don&apos;t want to open any ports here when I&apos;m on university wifi. &gt; &gt; &gt; I was wondering how firewalld
would know what this other port was, if it &gt; &gt; were dynamic. &gt; &gt; I guess it wouldn&apos;t but as pointed out in comment#18, rygel could also be &gt; modified to punch holes in the firewall. Although I wonder if its a good &gt; idea for
rygel to do that w/o asking or informing the user/admin. Maybe &gt; rygel should choose a specific port by default in the configuration rather &gt; than using dynamic port? Any changes to firewall configurations need admin privileges. s-c-printer for
example asks for permission before it opens ports to detect network printers. Rygel could use a specific port. That should make it slightly easier, yes. Warm regards, Ankur</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5916541</commentid>
<comment_count>24</comment_count>
<who name="Thomas Woerner">twoerner</who>
<bug_when>2013-05-15 05:47:54 -0400</bug_when>
<thetext>(In reply to comment #23) &gt; (In reply to comment #22) &gt; &gt; (In reply to comment #21) &gt; &gt; &gt; Only opening the 1900 port isn&apos;t enough. &gt; &gt; &gt; &gt; &gt; &gt; There&apos;s another port that needs to &gt; &gt; &gt; be
opened, like Jens mentioned. This port is a dynamic port that libsoup &gt; &gt; &gt; uses, and is a user port. Are user ports open by default in the firewall? I &gt; &gt; &gt; don&apos;t think so. &gt; &gt; &gt; &gt; They really should be, no? &gt;
&gt; No clue. We&apos;ll need the firewalld folks to clarify this one. &gt; No, user ports are not open by default in the firewall. &gt; &gt; &gt; &gt; &gt; I manually specify a port for rygel to use via the configuration file and &gt; &gt; &gt; then
open this up from firewalld to get rygel to work completely. &gt; &gt; &gt; &gt; So you are saying that you have tested that after you open port 1900, you &gt; &gt; still can&apos;t get rygel to work w/o the above? &gt; &gt; Yep. As far as I can
tell. I&apos;ll re-test this and confirm over the weekend &gt; though. I don&apos;t want to open any ports here when I&apos;m on university wifi. &gt; &gt; &gt; &gt; &gt; &gt; I was wondering how firewalld would know what this other port was, if it
&gt; &gt; &gt; were dynamic. &gt; &gt; &gt; &gt; I guess it wouldn&apos;t but as pointed out in comment#18, rygel could also be &gt; &gt; modified to punch holes in the firewall. Although I wonder if its a good &gt; &gt; idea for rygel to do that w/o
asking or informing the user/admin. Maybe &gt; &gt; rygel should choose a specific port by default in the configuration rather &gt; &gt; than using dynamic port? &gt; &gt; Any changes to firewall configurations need admin privileges. s-c-printer &gt;
for example asks for permission before it opens ports to detect network &gt; printers. Rygel could use a specific port. That should make it slightly &gt; easier, yes. &gt; Any firewall change needs admin privileges. If Rygel could use a specific port
instead of a dynamic port, then this could be easily added to a new Rygel service entry. With a dynamic port on the other hand there needs to be some mechanism in Rygel that tells firewalld to open this port. But still admin privileges are needed for
this. I thought also about a database to store information about applications that are allowed to open additional ports, but this does not exist, yet. This needs application policy support in firewalld. &gt; Warm regards, &gt; Ankur Thomas</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5916563</commentid>
<comment_count>25</comment_count>
<who name="john.haxby@oracle.com">john.haxby</who>
<bug_when>2013-05-15 05:52:39 -0400</bug_when>
<thetext>
&gt; If Rygel could use a specific port instead of a dynamic port, then this could &gt; be easily added to a new Rygel service entry. That would certainly make things easier. &gt; With a dynamic port on the other hand there needs to be some mechanism
in Rygel &gt; that tells firewalld to open this port. But still admin privileges are needed &gt; for this. Don&apos;t forget that Rygel isn&apos;t the only uPnP server. A solution that would help *all* uPnP servers would be a conntrack helper: there
are already conntrack helpers for various other protocols, adding a uPnP helper would, well, help everyone.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5916722</commentid>
<comment_count>26</comment_count>
<who name="Thomas Woerner">twoerner</who>
<bug_when>2013-05-15 06:59:52 -0400</bug_when>
<thetext>(In reply to comment #25) &gt; &gt; If Rygel could use a specific port instead of a dynamic port, then this could &gt; &gt; be easily added to a new Rygel service entry. &gt; &gt; That would certainly make things easier. &gt; &gt; &gt; With
a dynamic port on the other hand there needs to be some mechanism in Rygel &gt; &gt; that tells firewalld to open this port. But still admin privileges are needed &gt; &gt; for this. &gt; &gt; Don&apos;t forget that Rygel isn&apos;t the only uPnP
server. A solution that would &gt; help *all* uPnP servers would be a conntrack helper: there are already &gt; conntrack helpers for various other protocols, adding a uPnP helper would, &gt; well, help everyone. Yes, that would be the best solution.
But it would surely take some time to have an upnp helper in netfilter.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5920221</commentid>
<comment_count>27</comment_count>
<who name="Jiri Popelka">jpopelka</who>
<bug_when>2013-05-16 04:19:05 -0400</bug_when>
<thetext>(In reply to comment #18) &gt; it would probably be a good idea to also file a bug against firewalld bug #892801 (and its duplicate bug #904336)</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921374</commentid>
<comment_count>28</comment_count>
<who name="Aleksandar Kostadinov">akostadi</who>
<bug_when>2013-05-16 07:55:48 -0400</bug_when>
<thetext>Is uPnP working over NAT? I thought it is only a local network protocol. And if it is only local network, then isn&apos;t it easier to have a layer 7 iptables match module that recognizes uPnP and can allow that kind of traffic to particular
local ports?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921537</commentid>
<comment_count>29</comment_count>
<who name="john.haxby@oracle.com">john.haxby</who>
<bug_when>2013-05-16 08:33:39 -0400</bug_when>
<thetext>It can&apos;t work over NAT: uPnP clients discover servers by broadcasting and there is no way you can do that with NAT. Also, an iptables conntrack helper does not imply NAT, merely the tracking of related packets.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921610</commentid>
<comment_count>30</comment_count>
<who name="Aleksandar Kostadinov">akostadi</who>
<bug_when>2013-05-16 08:49:24 -0400</bug_when>
<thetext>@John, I don&apos;t know how upnp exactly works but I can&apos;t see how a mere con tracking can help. Are all connections initiated locally so contrack can be used to allow that traffic? So in the first place I htink an iptables module
would be needed to match upnp packets. Wouldn&apos;t the plain UDP contrack do the job once connections are established?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921642</commentid>
<comment_count>31</comment_count>
<who name="john.haxby@oracle.com">john.haxby</who>
<bug_when>2013-05-16 08:55:45 -0400</bug_when>
<thetext>No, plain udp conntrack isn&apos;t sufficient. The protocol includes URLs for various resources: album covers, audio streams, etc. I&apos;m going from shaky memory of a few months back when I was looking more closely at this, but the URLs
all have IP addresses instead of hostnames and it was not immediately obvious that the port could be specified in some configuration. A conntrack helper needs to identify those URLs so that incoming connections can be allowed on the local subnet.
I&apos;m not sure that this is possible, but some investigation is called for. My local solution was simply to allow access from the various (fixed) IP addresses of the clients I have. It&apos;s just around the house so it&apos;s a reasonably
constrained environment. Unfortunately uPnP was not designed with any sort of firewall in mind.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921646</commentid>
<comment_count>32</comment_count>
<who name="john.haxby@oracle.com">john.haxby</who>
<bug_when>2013-05-16 08:56:23 -0400</bug_when>
<thetext>For what it&apos;s worth, coherence has a good and useful uPnP browser.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921705</commentid>
<comment_count>33</comment_count>
<who name="Aleksandar Kostadinov">akostadi</who>
<bug_when>2013-05-16 09:11:13 -0400</bug_when>
<thetext>@John, do you mean that a multicast packet specifies URLs? In this case I can&apos;t see how contrack can help because sending out a multicast packet doesn&apos;t mean any client will ever connect back even less it tells which one client.
Instead I think the firewall needs to recognize the incoming packets are upnp and destined to correct local ports. I am thinking that perhaps without modification of iptables, if upnp server listen ports can be fixed, then packets to these ports can
be send to userspace and perhaps that can be a daemon that allows packets based on announcements made by upnp server. Or perhaps that daemon can have an iptables chain to manage and based on upnp announcements from local upnp servers and clients, it
can enable/disable different local machine ports. This way no modification to contrack, iptables and upnp server/client would be needed. WDYT?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921725</commentid>
<comment_count>34</comment_count>
<who name="john.haxby@oracle.com">john.haxby</who>
<bug_when>2013-05-16 09:16:56 -0400</bug_when>
<thetext>You seem to be suggesting that the server sends multicast packets. That&apos;s not the case. The service listens for broadcast/multicast packets on port 1900: that&apos;s a fixed port. It sends a response out to the client that sent the
broadcast packet. From that initial response, the client can now make further requests to discover what the server is offering. This is the point at which things usually fail: the new connections are completely new to iptables and so they are
blocked. A conntrack helper would be able to recognise the URLs in initial reply and open the corresponding port(s) for the client to continue its discovery. If, and it&apos;s a big if, there are only two ports involved: 1900 and some fixed
configurable port, then we don&apos;t need conntrack. The problem seems to be that this is not the case.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921742</commentid>
<comment_count>35</comment_count>
<who name="Aleksandar Kostadinov">akostadi</who>
<bug_when>2013-05-16 09:20:52 -0400</bug_when>
<thetext>@John, if server sends unicast UDP to client and client replies with unicast udp, then why is not regular UDP conntrack not working? I&apos;m running a VPN over UDP over the whole internet from NAT-ed machines with no problems, so it
can&apos;t be the lack UDP conntracking.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5921802</commentid>
<comment_count>36</comment_count>
<who name="john.haxby@oracle.com">john.haxby</who>
<bug_when>2013-05-16 09:35:25 -0400</bug_when>
<thetext>Because the payload in the response contains the URL telling the client where to connect to next. Conntrack has absolutely no knowledge of this so iptables does not know that the next packet coming from the client is related to the original
request and it blocks it. The original request to port 1900 (which must be open) is not a problem. It&apos;s the subsequent requests to a completely unrelated port that cause the issue. I&apos;m currently playing a track from a uPnP server on my
hi-fi. There is a TCP connection to the server on port 8200 (this isn&apos;t, as it happens, Rygel). There is no way for UDP conntrack to work out that this is related. You need a conntrack helper that understands enough of the protocol payload to
recognise ports that need to be opened from the payload (the FTP conntrack helper does something similar). In this particular case it might be enough to open 1900/udp and 8200/tcp but I&apos;m not sure if that is true in the general case or if there
are other ports that are needed.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5922264</commentid>
<comment_count>37</comment_count>
<who name="Zeeshan Ali">zali</who>
<bug_when>2013-05-16 11:03:47 -0400</bug_when>
<thetext>(In reply to comment #34) &gt; You seem to be suggesting that the server sends multicast packets. That&apos;s &gt; not the case. The service listens for broadcast/multicast packets on port &gt; 1900: that&apos;s a fixed port. It sends a
response out to the client that sent &gt; the broadcast packet. From that initial response, the client can now make &gt; further requests to discover what the server is offering. &gt; &gt; This is the point at which things usually fail: the new
connections are &gt; completely new to iptables and so they are blocked. A conntrack helper &gt; would be able to recognise the URLs in initial reply and open the &gt; corresponding port(s) for the client to continue its discovery. &gt; &gt; If, and
it&apos;s a big if, there are only two ports involved: 1900 and some &gt; fixed configurable port, Its not. That is the only other incoming port. Its the port rygel runs its HTTP server on and it uses this port for *all* HTTP, including media
transfer etc. &gt; then we don&apos;t need conntrack. The problem seems &gt; to be that this is not the case. I think to solve this issue w/o getting into too much trouble, we can choose a specific port in rygel&apos;s default configuration.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>5922271</commentid>
<comment_count>38</comment_count>
<who name="Zeeshan Ali">zali</who>
<bug_when>2013-05-16 11:05:20 -0400</bug_when>
<thetext>(In reply to comment #37) &gt; (In reply to comment #34) &gt; &gt; You seem to be suggesting that the server sends multicast packets. That&apos;s &gt; &gt; not the case. The service listens for broadcast/multicast packets on port &gt; &gt;
1900: that&apos;s a fixed port. It sends a response out to the client that sent &gt; &gt; the broadcast packet. From that initial response, the client can now make &gt; &gt; further requests to discover what the server is offering. &gt; &gt; &gt;
&gt; This is the point at which things usually fail: the new connections are &gt; &gt; completely new to iptables and so they are blocked. A conntrack helper &gt; &gt; would be able to recognise the URLs in initial reply and open the &gt; &gt;
corresponding port(s) for the client to continue its discovery. &gt; &gt; &gt; &gt; If, and it&apos;s a big if, there are only two ports involved: 1900 and some &gt; &gt; fixed configurable port, &gt; &gt; Its not. That is the only other incoming
port. Its the port rygel runs its &gt; HTTP server on and it uses this port for *all* HTTP, including media &gt; transfer etc. * Its not -&gt; Its not an &apos;if :) * only other incoming port -&gt; only other incoming port other than the port 1900</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6043026</commentid>
<comment_count>39</comment_count>
<who name="Zeeshan Ali">zali</who>
<bug_when>2013-06-25 16:45:44 -0400</bug_when>
<thetext>(In reply to Zeeshan Ali from comment #37) &gt; (In reply to comment #34) &gt; &gt; You seem to be suggesting that the server sends multicast packets. That&apos;s &gt; &gt; not the case. The service listens for broadcast/multicast packets on
port &gt; &gt; 1900: that&apos;s a fixed port. It sends a response out to the client that sent &gt; &gt; the broadcast packet. From that initial response, the client can now make &gt; &gt; further requests to discover what the server is offering.
&gt; &gt; &gt; &gt; This is the point at which things usually fail: the new connections are &gt; &gt; completely new to iptables and so they are blocked. A conntrack helper &gt; &gt; would be able to recognise the URLs in initial reply and open the
&gt; &gt; corresponding port(s) for the client to continue its discovery. &gt; &gt; &gt; &gt; If, and it&apos;s a big if, there are only two ports involved: 1900 and some &gt; &gt; fixed configurable port, &gt; &gt; Its not. That is the only other
incoming port. Its the port rygel runs its &gt; HTTP server on and it uses this port for *all* HTTP, including media &gt; transfer etc. &gt; &gt; &gt; then we don&apos;t need conntrack. The problem seems &gt; &gt; to be that this is not the case.
&gt; &gt; I think to solve this issue w/o getting into too much trouble, we can choose &gt; a specific port in rygel&apos;s default configuration. Sorry, that is not going to be easy. Rygel service/process runs per-session (should actually be
per-user instead but that is not currently possible) so that is why the incoming HTTP port is set to be dynamic. i-e each rygel instance runs on a separate port allocated dynamically. Unless we can assign a port range to rygel, this is not going to
work.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6139738</commentid>
<comment_count>40</comment_count>
<who name="Michael Wiktowy">michael.wiktowy</who>
<bug_when>2013-07-25 00:13:11 -0400</bug_when>
<thetext>I am enabling Rygel indirectly via the Media Sharing switch in the Gnome 3 settings. My expectation was that, by turning things on there and not starting Rygel manually at system start-up, the firewall rules would have been authorized and
mangled appropriately for things to work out-of-the-box. I was a bit disappointed that with firewalld, manual intervention was required for things to work across the local network. Right now, to get around having to use &apos;lsof -i&apos; to figure
out the ports Rygel is currently using and reconfigure the firewall after each reboot, I am following the instructions on: http://ankursinha.in/blog/2013/05/12/setting-up-rygel-on-your-fedora-system/ to set a static port for Rygel. Then I can
manually open a permanent port in firewalld and not have to deal with it any more. That is not out-of-the-box working though. I would assume that if &quot;Media Sharing&quot; requires firewall fiddling then so will the DAV-based &quot;Personal File
Sharing&quot; and the VNC-based &quot;Screen Sharing&quot; but I investigated those options yet. Perhaps this firewalld fiddling should be handled at the GNOME 3 settings level and the ports to use can be passed to firewalld and the appropriate
services on start-up. Then everything can &quot;just work&quot;.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6359752</commentid>
<comment_count>41</comment_count>
<who name="Miloslav Trmač">mitr</who>
<bug_when>2013-09-30 11:09:27 -0400</bug_when>
<thetext>(In reply to Thomas Woerner from comment #24) &gt; I thought also about a database to store information about applications that &gt; are allowed to open additional ports, but this does not exist, yet. This &gt; needs application policy
support in firewalld. Not only in firewalld; this requires a (currently completely non-existent) way to reliably identify and isolate applications. It&apos;s being worked on, but it will take a _long_ time.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6555250</commentid>
<comment_count>42</comment_count>
<who name="Jussi Kukkonen">jussi.kukkonen</who>
<bug_when>2013-11-25 10:17:30 -0500</bug_when>
<thetext>I had a discussion of this with some people who understand networking better than I do, thought I&apos;d post here for comments. First wrapping up the situation: * control messages go through standard SSDP port 1900 as UDP messages that are
&quot;http-ish&quot; (basically just a few of headers) * one of the headers includes the port to be used as the actual data channel (which is http over TCP). This port is variable. Possible solutions: 1. rygel (or gupnp) talks to firewalld and asks
it to open ports when it starts a service (and there&apos;s a mechanism for rygel to have permission to do that). This probably works but only for firewalld. 2. John Haxby suggested a conntrack helper. The idea here seems to be that the helper
watches the traffic on port 1900, and when it sees outgoing messages with the right header, it marks the mentioned port as &quot;related&quot; for some amount of time. There may be additional complexities here -- as an example I&apos;m not sure if
this solution is meant to scale to the time lengths needed -- but it seems like a viable idea. It seems this would really need to be in the kernel (and not just user space using the conntrack api) because of the need to inspect the control messages
for the port. Looking at the similar ftp helper for conntrack, it looks like a fairly simple job -- messages being UDP helps a lot. I might have time to try this but maybe someone could first comment on whether solution #2 sounds acceptable (from
Fedora and/or RH point of view)? After all, any app that is allowed to send things through 1900 can then &quot;open ports&quot; as they want.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6592352</commentid>
<comment_count>43</comment_count>
<who name="Thomas Woerner">twoerner</who>
<bug_when>2013-12-06 09:04:00 -0500</bug_when>
<thetext>From a portability standpoint I would say solution 2. From a security stand point I would say solution 1. If you are allowing uPNP, then the behaviour of solution 2 would be most likely expected.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6605744</commentid>
<comment_count>44</comment_count>
<who name="Aleksandar Kostadinov">akostadi</who>
<bug_when>2013-12-11 06:22:56 -0500</bug_when>
<thetext>What about user-space conntrack helper [1][2]? [1] https://lkml.org/lkml/2013/5/7/830 [2] http://post-office.corp.redhat.com/archives/tech-list/2013-December/msg00151.html</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6605837</commentid>
<comment_count>45</comment_count>
<who name="Jussi Kukkonen">jussi.kukkonen</who>
<bug_when>2013-12-11 06:57:18 -0500</bug_when>
<thetext>(In reply to Aleksandar Kostadinov from comment #44) &gt; What about user-space conntrack helper [1][2]? &gt; &gt; [1] https://lkml.org/lkml/2013/5/7/830 &gt; [2] &gt;
http://post-office.corp.redhat.com/archives/tech-list/2013-December/msg00151. &gt; html I&apos;m certainly not an expert on conntrack, but I believe that does not work in this case: we need to look at the contents (&quot;headers&quot;) of the UDP
message to figure out which port we mark as related. I think this is not possible from a userspace helper. The second link is not live -- internal site perhaps?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6673627</commentid>
<comment_count>46</comment_count>
<who name="David Jaša">djasa</who>
<bug_when>2014-01-04 18:09:57 -0500</bug_when>
<thetext>Hi, I&apos;ve used in the past mediatomb (from EPEL or manually backported from fedora) and it used to work for me: # SSDP for mediatomb -A INPUT -m state --state NEW -p udp --dport 1900 -j ACCEPT # allow IGMP for UPnP/SSDP on wlan0 -A INPUT
-i wlan0 -p igmp -j ACCEPT so I guess that iptables has opened data port as a RELATED connection. mediatomb has run as a system service however but that shouldn&apos;t matter, should it?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6673715</commentid>
<comment_count>47</comment_count>
<who name="David Jaša">djasa</who>
<bug_when>2014-01-04 22:21:36 -0500</bug_when>
<thetext>(In reply to David Jaša from comment #46) &gt; Hi, I&apos;ve used in the past mediatomb (from EPEL or manually backported from &gt; fedora) and it used to work for me: &gt; # SSDP for mediatomb &gt; -A INPUT -m state --state NEW -p udp
--dport 1900 -j ACCEPT &gt; # allow IGMP for UPnP/SSDP on wlan0 &gt; -A INPUT -i wlan0 -p igmp -j ACCEPT &gt; Scratch that, mediatomb also used a fixed tcp port for HTTP UI which apparently was used for DLNA traffic as well...</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6798883</commentid>
<comment_count>48</comment_count>
<who name="Gary Anderson">lgalosha</who>
<bug_when>2014-02-08 16:01:42 -0500</bug_when>
<thetext>I&apos;ve found a way (good or bad) to get Rygel&apos;s served media to been seen by my Roku3. I&apos;m running Fedora 19. I&apos;ve enabled &quot;Share media through DLNA&quot; and specified my primary interface in the Rygel Preferences
dialog. I&apos;m using a stock rygel.conf file with its &quot;dynamic port&quot; feature. I&apos;ve added the ssdp service (UDP port 1900) to the firewall and reloaded the firewall. ...finally... I&apos;ve had to add a Rich Rule to the firewall, ipv4
accept tcp src 192.168.10.x (address of Roku) dest 192.168.10.y (address of Rygel server) Now finally the Roku sees and plays all music, pictures and videos.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6895639</commentid>
<comment_count>49</comment_count>
<who name="Ash Hughes">ashes-iontach</who>
<bug_when>2014-03-08 11:51:06 -0500</bug_when>
<thetext>
(In reply to Jussi Kukkonen from comment #45) &gt; (In reply to Aleksandar Kostadinov from comment #44) &gt; &gt; What about user-space conntrack helper [1][2]? &gt; &gt; &gt; &gt; [1] https://lkml.org/lkml/2013/5/7/830 &gt; &gt; [2] &gt; &gt;
http://post-office.corp.redhat.com/archives/tech-list/2013-December/msg00151. &gt; &gt; html &gt; &gt; I&apos;m certainly not an expert on conntrack, but I believe that does not work &gt; in this case: we need to look at the contents
(&quot;headers&quot;) of the UDP message &gt; to figure out which port we mark as related. I think this is not possible &gt; from a userspace helper. &gt; &gt; The second link is not live -- internal site perhaps? I&apos;ve started on a userspace
helper for SSDP, any help testing and tweaking it to get it merged would be appreciated. It works for me in it&apos;s current state, but may need more work :). A full solution would require that firewalld be able to use conntrack userspace helpers,
not just the kernel helpers. marc.info/?l=netfilter-devel&amp;m=139429473308767&amp;w=2</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6980538</commentid>
<comment_count>50</comment_count>
<who name="Jussi Kukkonen">jussi.kukkonen</who>
<bug_when>2014-04-03 05:00:14 -0400</bug_when>
<thetext>(In reply to Ash Hughes from comment #49) &gt; I&apos;ve started on a userspace helper for SSDP, any help testing and tweaking &gt; it to get it merged would be appreciated. It works for me in it&apos;s current &gt; state, but may need more
work :). &gt; &gt; A full solution would require that firewalld be able to use conntrack &gt; userspace helpers, not just the kernel helpers. &gt; &gt; marc.info/?l=netfilter-devel&amp;m=139429473308767&amp;w=2 This is cool, thanks. I assume
&quot;works for me&quot; means it makes client side UPnP apps (like media players) work by allowing all connections to their SSDP port? I believe what I said in comment 45 about session specific services still stands: If we can&apos;t hard code the
rygel http port, then we have to peek into the UDP messages to figure out the data port, and that&apos;s not possible with userspace helpers. Or have I misunderstood something?</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6982280</commentid>
<comment_count>51</comment_count>
<who name="Ash Hughes">ashes-iontach</who>
<bug_when>2014-04-03 12:06:59 -0400</bug_when>
<thetext>Yes, this patch, now merged, lets systems using firewalld (or similar) act as UPnP clients to find UPnP services. I think what&apos;s actually needed for configuring rygel server firewalls might be another, similar, conntrack helper which
understands the reply to the M-SEARCH packet. I think this reply is the packet which contains the port of the control point - the port rygel uses - which is dynamically decided by default. I think you should be able to peek at the UDP packets in the
way you want. My helper can see source and destination ip and ports (header items) as well as the string &quot;M-SEARCH&quot; within the packet, so I don&apos;t think this will be a problem.(?) It uses conntracks expect mechanism (we expect replies
on this port from different address than the one we sent the search packet to). The expect mechanism asks for a timeout - so the port accepts related connections for a time after the the search was sent. In rygels case, I think that along with a new
conntrack module, you could have a long-ish timout and then send out SSDP discovery packets yourself to refresh the firewall - which also allows it to close the port if rygel is stopped. This would mean that rygel depends on conntrackd to do its
firewall management, which has its own portability problems. Could rygel pick a default port from the IANA unassigned list to perhaps fall back on, and then if that fails too, inform the user that they need to pick a different port? Sorry if I posted
in the wrong place initially. I was having my own SSDP problems, which I solved, and this thread pointed me towards the cause of the problem, and therefore the fix. I posted hoping it would be helpful!</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>6984818</commentid>
<comment_count>52</comment_count>
<who name="Jussi Kukkonen">jussi.kukkonen</who>
<bug_when>2014-04-04 07:14:48 -0400</bug_when>
<thetext>(In reply to Ash Hughes from comment #51) &gt; I think you should be able to peek at the UDP packets in the way you want. &gt; My helper can see source and destination ip and ports (header items) as well &gt; as the string
&quot;M-SEARCH&quot; within the packet, so I don&apos;t think this will be a &gt; problem.(?) Oh, I was under impression that wouldn&apos;t be possible. I&apos;ll look into that. &gt; It uses conntracks expect mechanism (we expect replies on this
&gt; port from different address than the one we sent the search packet to). The &gt; expect mechanism asks for a timeout - so the port accepts related &gt; connections for a time after the the search was sent. In rygels case, I &gt; think that along
with a new conntrack module, you could have a long-ish &gt; timout and then send out SSDP discovery packets yourself to refresh the &gt; firewall - which also allows it to close the port if rygel is stopped. UPnP services send NOTIFYs periodically so
we can look at those and open the specified port for the specified timeout... This is basically a way for any application to open any incoming port they want which sounds a bit wrong though... Nevertheless your example should make testing this very
easy: I&apos;ll try to do it next week, we&apos;ll see if it&apos;s good enough for anyone. &gt; This &gt; would mean that rygel depends on conntrackd to do its firewall management, &gt; which has its own portability problems. Could rygel pick a
default port from &gt; the IANA unassigned list to perhaps fall back on, and then if that fails &gt; too, inform the user that they need to pick a different port? See comment 39: rygel is logically a per-user service so that is not a perfect
solution. &gt; Sorry if I posted in the wrong place initially. I was having my own SSDP &gt; problems, which I solved, and this thread pointed me towards the cause of &gt; the problem, and therefore the fix. I posted hoping it would be helpful! Info
and patch were very useful, thanks!</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>7353844</commentid>
<comment_count>53</comment_count>
<who name="Bastien Nocera">bnocera</who>
<bug_when>2014-08-04 13:40:47 -0400</bug_when>
<thetext>This will be fixed in Fedora 21, with the default firewall (and firewalld) configuration not blocking any non-root ports. See also: http://www.hadess.net/2014/06/firewalls-and-per-network-sharing.html and also:
http://article.gmane.org/gmane.linux.redhat.fedora.desktop/9883/</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>9351617</commentid>
<comment_count>54</comment_count>
<who name="Mihkel Vain">turakas</who>
<bug_when>2016-05-23 14:09:57 -0400</bug_when>
<thetext>Hi. I&apos;m opening this bug again. Did a upgrade to Fedora 24 from v23 yesterday and I thought I&apos;d give rygel a spin. Before I used minidlna. When I stop firewalld service I can browse and play my shared content from my TV and if I
start firewalld again, my device does not appear in my TV.</thetext>
</long_desc>
<long_desc isprivate="0">
<commentid>9351691</commentid>
<comment_count>55</comment_count>
<who name="Bastien Nocera">bnocera</who>
<bug_when>2016-05-23 14:41:06 -0400</bug_when>
<thetext>(In reply to Mihkel Vain from comment #54) &gt; Hi. &gt; &gt; I&apos;m opening this bug again. Did a upgrade to Fedora 24 from v23 yesterday &gt; and I thought I&apos;d give rygel a spin. Before I used minidlna. When I stop &gt; firewalld
service I can browse and play my shared content from my TV and if &gt; I start firewalld again, my device does not appear in my TV. Don&apos;t reopen bugs 2 years afterwards. Please, file your own bug, this is likely a misconfiguration (and read the
blog post to see how we solved the problem as well).</thetext>
</long_desc>

<attachment isobsolete="0" ispatch="1" isprivate="0">
<attachid>533617</attachid>
<date>2011-11-14 15:55:00 -0500</date>
<delta_ts>2011-11-14 15:55:12 -0500</delta_ts>
<desc>Add option to permit &apos;UPnP&apos; discovery protocol</desc>
<filename>0001-Add-option-to-permit-UPnP-discovery-protocol.patch</filename>
<type>text/plain</type>
<size>1073</size>
<attacher name="Zeeshan Ali">zali</attacher>

<data encoding="base64">RnJvbSBiOGM4ODUxNzgyNTQ4YjRkZmQxMTExY2UxNGMyNGQyNWM1NjJhZmRhIE1vbiBTZXAgMTcg MDA6MDA6MDAgMjAwMQpGcm9tOiAiWmVlc2hhbiBBbGkgKEtoYXR0YWspIiA8emVlc2hhbmFrQGdu
b21lLm9yZz4KRGF0ZTogTW9uLCAxNCBOb3YgMjAxMSAyMjo1Mjo1OSArMDIwMApTdWJqZWN0OiBb UEFUQ0hdIEFkZCBvcHRpb24gdG8gcGVybWl0ICdVUG5QJyBkaXNjb3ZlcnkgcHJvdG9jb2wKCi0t LQogc3JjL2Z3X3NlcnZpY2VzLnB5IHwgICAgNiArKysrKysKIDEgZmlsZXMgY2hhbmdlZCwgNiBp
bnNlcnRpb25zKCspLCAwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL3NyYy9md19zZXJ2aWNl cy5weSBiL3NyYy9md19zZXJ2aWNlcy5weQppbmRleCA1OTJmMzJjLi5mZTMxZDhkIDEwMDY0NAot LS0gYS9zcmMvZndfc2VydmljZXMucHkKKysrIGIvc3JjL2Z3X3NlcnZpY2VzLnB5CkBAIC0yMDUs
NiArMjA1LDEyIEBAIHNlcnZpY2VfbGlzdCA9IFsKICAgICAgICAgICAgICAgICJtYWNoaW5lIG1h bmFnZW1lbnQgd2l0aCBUTFMgZW5jcnlwdGlvbiwgeDUwOSBjZXJ0aWZpY2F0ZXMgIgogICAgICAg ICAgICAgICAgImFuZCBvcHRpb25hbCBTQVNMIGF1dGhlbnRpY2F0aW9uLiBUaGUgbGlidmlydGQg
c2VydmljZSBpcyAiCiAgICAgICAgICAgICAgICAibmVlZGVkIGZvciB0aGlzIG9wdGlvbiB0byBi ZSB1c2VmdWwuIikpLAorCisgICAgX1NlcnZpY2UoInVwbnAiLCBfKCJVUG5QIiksIFsgKCIxOTAw IiwgInVkcCIpLCBdLAorICAgICAgICAgICAgIF8oIlVQblAgaXMgdXNlZCB0byBzZWVtbGVzc2x5
IGNvbm5lY3QgZGV2aWNlcyBvbiB5b3VyIGhvbWUgIgorICAgICAgICAgICAgICAgIm5ldHdvcmsu IE1vc3QgY29tbW9uIHVzYWdlIGlzIHN0cmVhbWluZyBvZiBtdXNpYywgdmlkZW9zIGFuZCAiCisg ICAgICAgICAgICAgICAicGljdHVyZXMgZnJvbS90byB5b3VyIGxhcHRvcC9kZXNrdG9wIHRvL2Zy
b20gcGhvbmVzLCBUViBvciAiCisgICAgICAgICAgICAgICAiUGxheXN0YXRpb24vWEJveCBldGMu IikpLAogICAgIF0KIAogZGVmIGdldEJ5S2V5KGtleSk6Ci0tIAoxLjcuNy4xCgo=
</data>

</attachment>

</bug>

</bugzilla>
